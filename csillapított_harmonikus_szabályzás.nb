(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1085766,      20815]
NotebookOptionsPosition[   1057766,      20492]
NotebookOutlinePosition[   1058137,      20508]
CellTagsIndexPosition[   1058094,      20505]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Asynchronous motor simulation", "Title",
 CellChangeTimes->{{3.7819800787531176`*^9, 3.7819801287873287`*^9}, {
  3.7831767586824927`*^9, 
  3.783176760277213*^9}},ExpressionUUID->"c3f926ca-86d0-4817-9387-\
0a600cd7cc50"],

Cell["Clockwise rotation", "Subtitle",
 CellChangeTimes->{{3.7819801808581705`*^9, 3.781980187609121*^9}, {
  3.781980422051383*^9, 
  3.7819804345081043`*^9}},ExpressionUUID->"4fe2b41f-a3bc-437e-bc10-\
5345bc5832f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", " ", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", " ", "[", 
       RowBox[{"x", "+", 
        RowBox[{"120", "Degree"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "+", 
          RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"x", "+", 
       RowBox[{"240", "Degree"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "x", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"x", "+", 
       RowBox[{"120", "Degree"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"2", "*", 
          RowBox[{"(", 
           RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"x", "+", "240"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "+", 
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"4", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.776239169741642*^9, 3.776239225692113*^9}, {
   3.7762392804766016`*^9, 3.776239284849877*^9}, {3.7762393199490724`*^9, 
   3.77623933910382*^9}, {3.7762394355350356`*^9, 3.77623947531962*^9}, {
   3.7762395456793756`*^9, 3.7762395518010106`*^9}, {3.7762396763761325`*^9, 
   3.77623979448132*^9}, {3.7762398482504077`*^9, 3.77623986573869*^9}, {
   3.776240738306692*^9, 3.7762408137240973`*^9}, {3.7762408513773594`*^9, 
   3.7762408723423185`*^9}, {3.776240918495944*^9, 3.776240927380189*^9}, {
   3.776240963723025*^9, 3.7762409958651123`*^9}, {3.7762581433809104`*^9, 
   3.7762581856990757`*^9}, 3.7762583045474467`*^9, {3.776258359533263*^9, 
   3.7762583623059545`*^9}, 3.776258395690838*^9, {3.7762584446960955`*^9, 
   3.776258445235592*^9}, 3.776258674970976*^9, 3.77625871623116*^9, 
   3.7762587519991446`*^9, {3.7762588302820773`*^9, 3.776258843832451*^9}, {
   3.776259067621396*^9, 3.776259141305867*^9}, {3.7762592825502324`*^9, 
   3.7762592838410234`*^9}, {3.7762595599688635`*^9, 3.776259573322821*^9}, {
   3.7762626215226264`*^9, 3.7762626221080885`*^9}, 3.7762626637019634`*^9, {
   3.776262722268931*^9, 3.7762627480442615`*^9}, {3.7817890783769817`*^9, 
   3.7817890869391484`*^9}, {3.781789203422615*^9, 3.781789235093998*^9}, {
   3.7817892994738827`*^9, 3.781789314719137*^9}, {3.781789354488819*^9, 
   3.7817893846372194`*^9}, {3.7817894999429884`*^9, 3.781789505789366*^9}, {
   3.7817896812931633`*^9, 3.781789709706241*^9}, {3.7817898252331295`*^9, 
   3.781789842349427*^9}, {3.7817926179830065`*^9, 3.781792635408366*^9}, {
   3.7818028185765495`*^9, 3.7818028227134967`*^9}, {3.7818029281402283`*^9, 
   3.781802944248176*^9}, {3.7819758375511303`*^9, 3.7819758402937984`*^9}, {
   3.7819795435214305`*^9, 3.78197954352639*^9}, {3.78197964799416*^9, 
   3.781979648001108*^9}, {3.781979704677614*^9, 3.781979874775377*^9}, {
   3.781979905032503*^9, 3.7819799289664893`*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"5d96d89e-9e7a-4a27-a5e3-f136196e1629"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
tndG0wqqMLPu4f/+v5v3fys3Rzg=
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rkQn3qiTZ/KPvhaO/O0pCy7rxP8DEd9DRg==
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9rYcs3mKOgx3aGoEFjPw/wCaAzyG
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5Q==
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
u3DiEF6z8YX5jIomeH4MeH45Zwj/D0IP+dk=
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
v0pfftaF/wdzL384
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwdmnk4VO/7x5FPiQpjSZaZITOWSqtK0XMnVKgkSwsRaRVRabG1CG1CKFKk
lOxLVMQjFC1kS9bs65h5yL7/zvf3z5zrdZ1zrrnv9/t9P3Oec42inbOpgwAf
H18u9fG/4zwsXNauGbStLO//j3ms3ryt9EfO6JehkvyyR854MnX18bpgb9QF
Bl1Fwd64U/LUeFbwQ6S2c5bfIfghrjfwKYgNjkIrFIe41kFR+LdNsMqz4BQk
mndkodeDFGzquKz+STBGRgkbTzK8MA76Z5URFvwLRV+z+twCv/DWL4bCuhda
0Ma6d2lnrzRjserXvzY9akHXAzJ9BVObcUebQOiqjBZkZzCEPbubcQBfDmPZ
UAvq2DQGQitacNvWFZoDrq3ISHl1VO2TFuyfLmL73LUNmciJ9Fu6tOKaqJ+Z
ky4d6JLbjW1SUu04IVnVfSCoAwke0gjJ0GjH13N9oCutA7V8PVO8bVc7VmvQ
/lEx2IFSxj7ayrm3Yw/ppJY4l05E/ObC+5rb8fIHD0QsXbpQ6+XO7T9iO/D5
a3uPZZzvQZ0DLsf6FLuwoZN2nFBgDzJ+t1DsxuYuvNxOnVin9CARwcLzAvu6
cM3u+Z5CvB6U/sfmX5F7F9ZZlvfE+mwvkpBQjzKo7sLCH1aVLzjRh1wHX6ir
3+jGsSOLkNWRfqSklv+l7VsP9uqdvJ12rR+FnEy8+aapBx9s6vk5P6IfFU/e
OGU22IMXfSk6nFbbjyY879mfkOnFriEebvMtuMjkbOCi0w69GNb3J6Wa8NC7
pRZKdZO9+NwHhwCB5QPI95b7SA+NgzV272fybxhA5be/qo8rc/BAnXb6nN4A
Ev3pnd+zkYMvTknUTJ8YQBdEzn46d5iDr20rUBiLH0Cfds0WC0ZzsG8RPYmz
bhCtiitYbcHqx7vMhVHfjkE0afVmq6tmP17YNVLeYzaINtuHXHTS78f3F5QO
d7oNIp9wf9YCh378yNBduyV7EI3e/fLofUw/ji7/86Na9x/aMUl78p8MF9sd
K7SuOvAPhZ9J3CfP5uLl/5JJxfF/6Or4D2XaBi5+LeEr8cv3H2IoFfZE7OPi
JIsNR759/4fW9+apMG5zcXZjYF+u6RAyDtby6uzlYo9zHh6f7IeQ9p/Fs10j
XKwze3JJzsUhJDY6lfqVn4fzGWjdh7AhtLs26xpzGQ8X23GvptcPoZ6v06u1
DXi4umf3wjd2w0gr7+G6hRE8TMJV9W+5DqOkuLvH4SUPCxstuGFzcxgd6Xrj
fiiRhyGpaHxpzDDiRr7SXJvHwwkuqMe/dRjFM2I6L7Xw8FclurLD4DA6O9Rg
nNPDwy1V0zbb+UdQuOc/s7YBHpbemP1ngjmCWp+XqPzmI/jm5IbiM7YjiK2g
OmfMIPhZgsS8nedHkODY7UfP2QR/sPq3bfn1ETSKB+5VrCKYm5eS1RA1gi74
4/sNWwk+eEv9tXHzCCpVjhD1tiD4woaFbapkBG037BRssCI4oLNb4b+5EdRs
9U9Vxp7gop2xobn0UXSPzunQdCZ49SLmbY2jo8hNV8V/9jbBhrmz+cJOo6ht
pdde+3sEH3dqmu7yHEUqzU1SbwMJjiiPuBj1bBTtqZd/9CeC4PmhUsfFmkbR
ssSFeTiJYEWD4aj+/lHE1tUVWJlOsPZYZUPJ9CjyCT6peDWLYJdDgQduyI+h
/+RSmjPzCG5UENnx78gY8jl1nPuhlOCxsl6vsrNj6N4em/AVFQTTrpdkx7uP
If8DFfze1QTvaru9zv7pGAqVVJkqrifY/tFxJ5QwhgrKm27nNhHspbcjXi5n
DK3JSst/1EJwxms+per6MbTK6u3Wtk6CyyybrVP7xpDi9jC3wz0E9wjlhd+f
HEPo2TrLjD6C52VH/j4lPI4KBNY09PcTTD/rLq4vO476qo/yLSAEa8kf3qOo
Po4UDJOL+AcJNivdfGdGaxwNnVvJbvpH8N3Vo3xZh8bRRpbfR81Rgq9d3r2i
68w4mg1d7lAxRvBpHGku7TGO7P4dXblrgvJvwYC3wYNxxP3gvzhikupv3454
t+fU/TOyC4qnCN78OKz6dco4enM6e+mvaYJVm3tna/LHkcj2jdvSZwiWUdFR
W1BJ1Wfjf/X8LMELnAMPbGofR591fpcsnCN4NKvd8+TwOBrmnl3hRXHX7Ma4
x/9NoFfMr9GlFNcY3K0slp5Aesv9Vccp/hrQND2mMoEEW68XzFCcVbNGRVVr
Aom0v3X6S3Es3Wf/QcMJ5G2isiqC4pATf9z9j0ygg7yds2so9klWf/3BcQIt
YNxui6HquTjqWd7jOYE4rTfrCVWv/baKSZmHEyikUrR7KcWmvsqs3dETqFyF
tVCO6k+37PK+q2kTKCi9a/sEpcc66R9X3xZMoIjGmOB0Si+lo/RXdVUTaPp1
5bTBOJWP1y5lCzsnkEPcsptZlN78vKJxrdEJpCVioMw/QvCApszyMwsm0Y17
Jp3sIYJbPM/uiZCZRNEXrYpVKP/Kv+Rd/q42iZqev/85j/I3fzEtZnLLJMpx
rB/LpvxPNXf4qW48iRRLThrtofIR9ezD6GHrSWTIWPU9u5vK2yoboxzvSTQw
ddpcpY1gp0vplziBk8jvt8kpdjPB1rn/RcvFTKI4o70ZfI3UPOxJHHYvmkQj
H7fx7fxN8MrQOXri70kk/3h4YQaVd/km092NXZOovMLgyCQ1D1OOE8+0F06h
Q04yXbJfCe57Z1ziKDuF8rKSVIc/E1w/HfUvcsUUMmGIfInLJTj7vsHOmT1T
yPiGHOPVO4KvJD4ayA2eQkLFn7jt0QSfGu6S5b2cQo9FQ4OfPCXYUnuLPj1z
CoU/upqrGkbwxp8t4V5/ptC4Tnxew12ChzmrdiD5abT1c6rqA1eCO9bfOOe8
ahr9jf2eRXckuMq9+nHUtmn0JSOb/74Dweki7v1zttPoUtrz/glLat5XlITm
x04jvrDlI8up9arDoeN6dNY0ki5f3f1+PcEW0XyO14unUWjwfmW1lQRvkdLS
hd5p1BMU+eKlPMECc295eOUMmrbWeDYxxcPBlfd24owZNJWlmbv2HQ8LLo5b
F1U0gyDGPfZ5PA+77SxS8P49gy7ctXDpjebhw5+mh7aNzSDDCKVmmQc8rPT6
XHTelllUuCLPsMWeh9Ov7pvI/TyLNHYKPJUT4WHld2c7nlXOotKvXLrjHBeH
8fx+ebbPotXXGvSeDnHxNfv8WJ3/5tCBqYsJoQ1crLtnrWnurjnU9PeT1fRb
Lq5iSiR8+jWHXisYBz0DLp60P5vc5MQH+3+3FD8x78e24kNXPrnxwexf/tRe
g378Je/ajqdefLBk7dItjM39OHDZ3dqDAXwQluN+brNsP1b5FSdQncQHycMe
PcpNHGy2pcviez8fyMU2oiFrDk4WOzaXdYYfSvAnvSqjPiyZ1/Mt1JUfxr7U
Mmq0+vDVs+dDLl7jBxM/mXCs0of1vnqrrbvLDxw+pUSDeX24wf35gaS3/LD5
wn09lY+9WKi74c3LHn74GZwuqsvsxXa5FiaBJwQgZN/by8cau/G6LBnaMmcB
UBhfWRLypRsLpNRXvbgsAD/PbRNJSu7GMdFHLTP8BcDx6LmK+9e7cdutE0dr
4gXg70srtGh5N7YzdHOUJwJQd/GhqJJ9F7b7E+ofd3ke7FuTP3mmvAPbD1bn
5/sLghCHp1Xn0Irvr3nv/Np3PqjelTFP9qjGAvnvN/lcE4LTJ47qc3reYXF1
o7LmJ8Kg2WdvVGNcjHZF6b4cCF4EXD+2/oHUeuRXUt508+kiiC9YHR7Gq0df
B4/KSL1aBKvdBgRyVjYgfT33B1qZi6CdfXIyNq4B6fZmXL75ZxEYNXx4N/28
EWmvZxlLyi+GmcsGSc63/6I1xQtGNsUuhu0iXusK5VqR80Do6u9Ji2FB04WA
9M2tKHmZ8hmrrMWQ9iqJFWDeilY5QvP14sVgzbx1Y+HDVqQufvXbt97FYOry
x2wxfxtSPtL37IjGEmj0XtmzsrUNLSU/DbzfL4Fg++up/YEd6EkQPtaLl0BS
BF9AfHwHktmQ7nGgZAk4TjsF7C+i+OrjdJW6JRBvmeB7eKwDyc6zo5dPLgEF
HWMwt+pE9KVjI8xtorBX+uHd34pdiI0UYwuKREGmpf62XkQ3et0qkb+yVBRW
fTYuGEztRmyf+Q1hv0WBJr/0m09xN1L5xhE72yUKrpP9FUeGu1GI2pG8hYJi
cFzfT/6HcQ8Ky2Cpp7PEAH3OMQ8f70ERxdn8806LgcMn23smW/vQQEvqVeIo
BoZzD/S27elDOydfDzacFwNuYVcyzaYPDa981PruihhcdX5k6nyzD+0NPvv5
hD91vdf1qZHiPiRgLX/j+xsx6OZv2a++l4MOutEmshLE4J979y73oxyU8lDI
5WWKGAhcWNOX5sRBVgXDth7vxWBGWIv7K4CDslRKQaNYDCxrQw1KSzno7D9P
vuAuMZgUVWHnG/SjApGLV7z6xMCPx3p73LwfybDODJzhicH37RU9XPt+9NXS
omXHqBh4z5idSL7ej5i5Gvkj/4kDJ6W3tvNDP6r2a/Y+xBIHWZZgn5IyF2kr
bJ9jHheHBGH2W89OLtplVe1qd0oc7hW2Pwwc5CKzpye7XjqKQ3Pa76AbM1x0
dllAKfuSOHy8cjZtRpKHIqQanq70FYf9xUd5Vro8NL740ubNceKgaKtvkRjG
Q4J7hBKvJoqDeG02LyKah8TuP2XkpIqDWpVu44l4HlIRLpi/7aM40P0t7obl
8pDFfNHfO76Lg49J7n9mbdS+YTbOZV+/OLjdjAzZxiIoX0e7M3BAHK6q/34x
s5Kgnx6/DlYOi8Ng7GaH8A0EtU+OIPMZcejaqtl/YgdBtDHdJUeW0IAMfJQ4
ZEMQfWPNjUgaDXzau3qnHQhSv3R6pEmaBsE+2ZqejgRtH3rYaMugQULqEnGJ
qwSdJ43xJ9bQgLtqN+1RIEEeGufpcRtosCT+fPmyMIL8z80L7t1Mg8/LvpV6
PCUoiqN21XE7DRQzK879iSUoXj23P0mfBoJh3wR/xROUddrEluymAbvtRmFM
CkFl3W47XU1pwNl5I+bvB4Lq2cI5GRY0qEww+2CQS1CnwzONkcM0MJPjb737
maDp9kKpK/Y0ONr4yfLNN4JWtIh1eF6kQW/uA+s1tQTt7WYWuF2hwa77danb
G6j6eWuinT1ooNMnH7H+L0Hvpk2sjvnQYNs9keUf2wmqmXdsy2F/Gph26uUa
dxE0Luwic+A+DU4KBLfl9xCkvSyoWi+E6re+tsiQS9BR5ot0nSc06Kw66GlL
CLqukha4MZIGaRIT7y0GCYrR+Oy0OpoG1ZbfXVcNEVSkWWGs+ooG952mEzqG
CerSblVXjKPBp01/j3mMEiSkNygkm0iD0NdNwcNjlB9G/N20VBqwCv109kwQ
ZGwq/kXkHQ2KEvxtfScJcjqk+FLwAw3swxImo6YICrRde2MmhwY5FfXCEdME
pZ/cbjOKaXD8KyPw4gxB1U77dUgh5c9YzJ3VswSNXjom11NMg3rBxNHvFMt4
uky0/KCB6NsXNQZzBG3xufGn7hfVz6eFai8ptroXlFlZRYMrmne4zRR7Bb94
9OMPDZrZHcup500UHZ7mUtRAA9uCmR+TFBdEf96X20z1a1nbWUtxx5uKVVnt
NFhsFurymOL5Ka0iKd00uLXjkvNGilWzBnvfcGig/+tPcyZVj2Euf0k0ocG8
vK2FUhQ7Fom/Dh+iwe6hbbIWVD8BPxR9gsdo0OL0vNON6je1cq3dvSkayBpv
ZF+h9Kis2w4+czQYzudvOkTpNdyyn+45TwLoCnIi8pSe0j3Hpi8tkIDekpy0
PErvzcSl3klEApboaVdup/zwmAkKs5WQgO2S9b69/wh6Lhhz8dBSCTCo2EFf
QvmbL5JuaionAXvV2RslKP8FZSuX6C2XgMlNO0heH0FsxbZ+bRUJ8CwvCHGg
8rNL9d93zRUS8KBEr7C/k6D7G2l+KuslwGlG40tkC0HJOkoOzE0SkGRR/exL
E0Hleut2LNsqAWo7Rhf+qidI8oDpnPAOCfg86xV3q5qgjYftmubtlIB15bKt
GhUEHTzmmjNtKAGn1j/7mF1KUKRz8GWeKfV9TMmDF78SlOcWY95tIQElazRZ
MQUEtXimr285TNVfGxqdmkeQ8v1KUmEnAbvKCtKcswi1j6adynSVgAN79dPd
XhHk8xtvn3eZqtdml5luFJUHgXNy+90l4OhO60O94QQJWxWX9d+SgGiVhNhv
AQSdEPXQVA6VAPkPUbNVbgTpaKuJuoZLgJl0hbP7eaqf0zU9+JkEVK7SuTZ7
mqDCgjWRR15LQKnE9JXHVgQx3ToFHr2XgJ9tXyelgKCxmODGlhwJON91UPzp
Zmq9+IWyNPIloCLuD//0GoI81SJOfy+RgFRN8ZD9itT60bi3nL9eAtbsK/cy
5iMoZMeHZ+enJYBpO8139z0PnT3vcDmPTxKKbjluqEjiId1ntP2L/pOEvP5r
bcMveWhw1FEwbrEkiAUaNFY85KG98Ypnm+mS8NTpaGC7Aw8Jid/bvHe7JGi5
FpWdF+GhZp3NtEh9SbD/8MTm9hwXZZ3p5PTuloRKx7oNl4e4yKEIRd02lYTP
xs86/tVzUcHl4f9y7SUhmr+l1yiOizz+Wlet8JWEL7Hpj4K0uWh4p84zh7uS
kHCdqVqowUWOafInowIk4X3PT/VqJhcd8WmYpD2WBElnrY8hgly0Rf2Q0uQb
6vqXmVlB3/vRxCUzl5JvkvDBYej+HZN+5LbYSNRhsRRorKrM7NPjIJ6bet1z
cSnQneDvUV/PQSdaFr6slZKCwZ8DecaKHGSRUbLRmC4FMWaD8ZozfUjzkMHR
9aulIKOJlf48g/r9f7U9iX+/FHDU9aObZfuQi/Zmo+chUvBp+7pf76p6EJ9T
iPfDJ1KwZ3FLZwHuQQFRAxnXI6WgIDDw34eEHhQv8Fbe/pUUHFXo32p9qwe1
lSzjqbyTAuvl2zP91/YgM/OpwLQqKeh+cbDQ40432uiUV1NEk4ZeQbPB06pd
aDJKz44TKA0Jj6Y2Kqu0o21jOsFrQ6VBxU2z4Z1IO7qxd1PB5XBpGBl2yV89
0IaEZtSUBGOkIdMi50fHhzYkdVi0TT5DGpwMzxzZt7sNrZGsP7b3tzTEPVWw
1j3Rihz8nY+lLVsKT7X1Ny5c3ozKz0fYXo5ZChoftuz/cfoP0tqpNNv0QgYm
/lwuHRnE6Ju+VhxELgOnDYOL8r3ycGxauFZbgixo83sXsARr8ZmpI+q1KbLQ
vffwxT/bavEafbpcWYYsKGd/tHW5Wos/1cZMf8yRhRsLDOdZ82px1VwCDvoh
C+/kvq5c/KcO8+/N09/OkQXTv6KGUS8bsHVf2/5odTl4WjaXx6/ajKWWrzxz
9K0cvD/NSenracOBwfcs3ibJQbJnxsQjwXYsLMDRHU6TgxOWp6xUmO2Yr/Wt
3N1sOdhJ4rgilu24/7lKaeYPORjWD/hZUtiOi2SXr1nMkwNHg6Nao0868EWa
7GjOOnnQpXdsMVrbhcmNq23zN8lDuL7qsundXfjMYG3Z/q3yMK3IMXpk14Vt
yx+/6d4hD3sNC3QuPurCxgFShyTM5cHCUnz7zFAXXi4s/unMZXlQv7MuUiK1
G1fyC91c9kkezMRIcphEL+YlhR81yZcH7RqVY9dUe/HCwyu2+hXJw8syE7au
Ti+G9L3Dwz/loVhr7wPPE7042S70RHmTPJBtX/e9eN+L7xUqGfnNyUNt6135
O2bU/um2juSIrgK0RuQu07vCwbZrfw2s2KkAr3yEWr3vcLB7k22pnZECSPRq
L30WwcHpmj6+5QcUQF/Tz8f9Ewczu76PJxxXAL8oWcuvsxw8bXCwyc5XAXZs
+Dhwy7MfZwpdeF3+TQGW6Wjlse25uMvjBjevVAEuddXfvOvMxTKDDzckVShA
7SP/+gp3LvaoSyy4U6cAqUGZEiIhXKwX3/VXt1cByGm5U+xCLq40Orw0U4gO
HcK076Ny1H45/9TRl4vo4Fk9/1wAm4c3brgcGyRGB79rRv+E1vJwhHzIeicZ
Ojx7dcL9tT4PH+OW7lNRpUOnpveFm+d4eCBgu3/4TjrIZg69y3xP7afnmfzy
M6LD0ZrL0275PGx2+ai02z467DRLCJL9xsMfbNxfmVrSwezg31tC9TzsvSYz
X+QkHfgfkldekzyc+qpwweQZOrTKvHDbL0Bwm0zl3h4n6n6hMxbzhQk24CeN
RW50ED0YoSS9jOAllaoTnr50KJzYoFyqSTAYbALHu3T4kvI4MkWbYNdsfb/D
AXRqvXrXd2EHwTUxdlKbwuiQ5i/Fe2FC8LMLkWsHYunwIjmxNfg0wWXd8Vf+
vqWDz+vdlrecCeaz+oh/JtEhyuGei/klgo/r1ex5m0mH8pTnns+vE7xSSuyM
3Rc6/Eusty4MJVgiJScx9hsdviY0Vqs/JXhy10nSU0qHReNtJ5yiCS7xyLvo
XEOHsqitRXfiCU6RPvM+vZ4OGQ8lfI6lEByWKjU58pcO7QJTO6XeUd/X4ejt
0U2HnLGir2K5BBt5yRRgDh0Mpy5cPviZ4HUyRYLzBujgG/RjqccXql5jubt3
xunwsO6XpGUp1V/Gt5CwhQxocnrle6SBYJ89l/7ULWZA+MJBrZt/CXbsZsoq
0Bjwyas4x6eV4C1yV6JeyjLApD1AQaGbYMXM5W1ddAZoybDG0nsJFtr3S1l9
OQNSPj4MVu6n9LzJjk9dwYC8K4Pzng4QnCtf2T+0mgELlv+pjvpH8Kssz9Wb
NjCA75CT9fVhgu+ZqLle28wACZvQp9qjlD991e9ytRnwJvXAg+oxgg/5XB/j
284AC4H6Nf97Hwr0lVv09Bkwt+Omz+NJglU+/PHw282AVzG/fAumKP9Nb+Hv
exggf9dp47dpgkc4GgJLTBkQ+HpDcMIMwY236/X2WzDgTycz/PQswYUMX7+Q
wwwIuHLEcN4cwfEf137/c5QBMlWasVcoDjrQtEjOngHWyepvv1F8heu/7+hJ
BjgI/TUfpdjGb0Pwi7MMwMoKCbMUGyi2VHc4MyDn/t+4NopX5dxbqnqRAW6i
uvtiKJY033T47BUGpH8OfK5D8RSvLTLZgwF+M9qP31H1tPkHNA9eZ0DbsTat
BRR/U9qipHmbAaUV+n6aVP2pnzqPX7nDgIgL5tcR1d9ji6A3OQ8Y8CNFlc2i
+vca0O6bDWJAw2q+a12UXg53e1bqhlH3N+p73hon2Fg5xPl2BAMeN91fO03p
vT4PpZc8p/wNDXpiMkKw7EHOsMhLBmx/ofXu+hDB/P/CNu17w4DMmke+9wcJ
7rmney04gQGvoVb8IiE4C4fPybxjwJKGUquaPipfh/R1rT4wYJ90ruL+Hipf
QwM+UZ8YkBhKi3/TSbCpyi5h9hcGWGmvFe9pJljr85Dx6W8McHpzY7SikWDm
kaiHiaUMyKgxSHxcRzAJGJVcX8OAI2sFnmRVEtw/QC9YVc8A/x3hivt+Edxn
utNZ9S8DbA5Yrin5QXCH9JNvCl0M4Py15hwpIrj+uZaX0CgDVlVNgDA1P7V8
divmTTLgYPkBqzfUfP22u1s7M0PVe0tVnpVA8KlH58InBJggtXLL04IXBNtZ
5g3xhJkgs/uhnO8Dgo/5mxr2L2LCmIXbX1V/gm0/dkX3LmGCfA7XMfEmwdZy
ons7aEzY0WEvYHGZ4IPNNnF1skxogYUp620I3nOS37pInQnP0ha40NUoP56E
ZnxeyQTGVGlOuSLBht/UhLEGE4ZnHTcdlyV41wrT9x/XMUG6I+uvhgjBuiRG
PGULEz4oJBcc4PDw5st6X8MNmdCqbcZti+XhTXG18o+NmTA/IH0iIZJav+sc
L4TsZULG78Rsi0c8vH5rKPOhKRPqpW9777/Owxpzndd8DjPhenMuvekgDy/3
81vtfIYJwlP1x80Fedi1ZoOXnSMT0ip8brlNcHE+q+2nuRMTmv5eZrrzuPho
kfYZbVcmbAqSm9Oo5eII/n+vFl5jwu2689d047mY5mEl++oOE6xNLGSVdnOx
gMva/+rimOD17feMtGs/3p//98DPeKp+lKaaZ9+Po0Xvx+BEJvCZph4wNO/H
25K70OtUJtQErGoV39yPr3GeXrvwgQkbvQ2P2Uxz8D+H+QOLS5hgmR55k+86
B7cdbqjX7WZCqDdUFl3ow4t0LN/Y9jJB9kVp9hvbPqzJqLrgxWEC62TFsnN7
+rB/+/dF2YQJd0W8g6LYfXi1Y/a2teNMeHrzwvfYP73YwzM8hrFQEW4aJXUa
bujFUtGWZ6bVFcFFpPZERG033tVZNZHppAgLhWSsSyo7sOeKAPeU84owrH60
IT+7A6e77JqJc1WEvoRXyrExHVhu9hNfpJsieP+3022tawfmSb9ecNNLEYp/
ZCQeEevAIbuuSO0NUIRfuxqOiOxuxy0J8mu7khRhfdhBvVuJrfiKq8Mpaa4i
1Hcp6/2+2Yj3Zj01lHZTAv2v7w/Hp5Vg3vQZj3mjSrC6Z1Zk461E9OLPjXdO
F5ZDS4MPw264Ek2e0rG9OrUcDgVxO1JWtCLDHHW4NLMcfkSJ+J83aEVPF8sw
XeaWQ+LfdyuYx1qRdvq/5lPzlCGqLE3EOKwVeU29sTkoogzfbuw8UDXXiuYF
0Gw2ySnD88CFx+78akOLMrqtR7YoA80rXrHNtgNZ/fdbZ1BbGXQj9Q33X+1A
SZYFCtxtypDSm7InMagD7Z2ObOrQVYZH2uq3WQUdKFDf1LraUBk2bYuSV1Lq
RJK1n6wyDiuDw7Czzeq/nUhhJuiIyzVlKPp+U3hSvxvtatvz8bGHMrQtFdjt
b92NLhYvXJrnpQwtjBG/qYvd6HvQjUrhW8rAVR6KCHzZjdzYLrtf3VMGDcFD
bNe5blS+z2TTn0hlaMj1L5xK60E3Y5ZI6GBlsHpvYniZvw8l+X0/b/9ZGU4Z
zPpekOpDtY6+ZXcKlaH+Dl/0frU+pLFp9k5NsTLY3jcVyTDpQw0/uHzny5VB
rJF/j9DzPrRh5CcvplUZ5j/dyuhdx0FdO+99FxJkwReLmIsDev3IzsiWyZrP
AkSLqskw60dNezXdtgux4GLnQLzl8X5Ubd6seG0RC4IWCTvArX5UYL/+KkeS
BccPzYcQ3I+eeTeolLFYQC87vHjTOi6SuZXq2afCgjvPh95PIC4K8b1dNV+d
BS/zasue7uGiuw9WeyMNFnhOE0GvU1x05emtmtSNLBibU/z3IZKLzN6vuP1o
Jwt+P9m0c3qWi8qz+RpSdrPAaZNHT7IwDxnl/V7z04gFQqbUplOa2s9+8W4U
NGHBVXPZ2pmVPLSmqmq920EW/FhKS+s8yEOLiHvbwdMs6Eq2VbGK5yH/fyab
L51lgXT8jo+DGTw0b5QVEHSOBdmRK5Y55PLQ5PQvre8uLIjfIb2s8xcP9Qgr
B229xoIrp+dN7xrioUL2T0S/x4IN8UdaH68nyDCg2VD6AQskkwRpflsIKh/5
Z77kIQt+KWbOWm4n6G/RMsfZYBYUGzUNPt9L0LjdySd/I1hw80zAg/yTBHl9
v/ayJpIFmyJ6OZ/OEfTfuoDksucs4MuIr464QBCNP7MoL4YFI2W5GlNeBK2M
Ehh8Hs8CuKp1bk8IQenzpafDEllgtnmBr3k4QVpOagseJrPg49XJ2W3PCTLQ
MVHwTmeBlevx2cw3BJW+sle9/I4FuzqS3XckEmS26PJ65ywWYIuvBumpBB1r
eLbbJpsFaZWGmes/EtSjm2Zm+YkFQyFXTf73ftIpvshmXx4LdleMq275TJDH
Vc4lVMCCrOmMm19KCApbqhXD+M6CcOH1l87UECTvbZy09CcLBAfUw3zrCHrZ
ZfNBtIwFK6VpdbcaCUrN9C2bq2BB7TnNj4ptBG1SiKgbq6LytpRvf0EHQXk+
SR3kNwtSx2rmdnQT9ONA9WRzHaUHFg3v4xBkmtP9X20DC/q+Ei9RHkG1SlNi
5U0s0DWodZUaIMjm7hL5kmYWuOyocp0eJKhrUFElv5UFroVCnkVDBDke0lz3
oZ0FT37mPTw3QtBQ/i6d1E4WbD516O3YKEHXVK12xXWzYMurwyV24wTxBTof
iO5lwe0QO07yBEG+YzePPuGwwMZstXjjJEGLbcJOB3JZELHg2ea+KYJCvr69
6E8ofRpibeumCZLVyPW+Pkj1K2Tn/3aGoBeh5XevDFHnKxekHJ4lSHWmPfT8
CAuM73Cq+ilOPj4WfWqMBQ/veI/azBGk+VM40XaCBUTHTPodxZ/W098fnKLm
mS6zvpdi3adrC0xmWPAi/bHxHMXfBPRLd82x4EZArh31vIhMzhysBX42NJsH
XyqjuKbibPvmeWyIz9a+7UextZY3b81/bGB78gcr/u99ZnTwhOoCNsSc3REZ
SdVzRui1oOJCNtDtbr0ap+r/IeD/YIcIGyxyOsqXU7xy5rT0icVsWHNW/a46
1W/AmFGUvygbjN3PVyyi9CCDq1QTxNlw1GP6zXdKP5N+0bRSCTak++iIHqf0
Te8a1BqQYkOAxk+hOkp/idaqApoMG+zDzoSpUf5cbMg00pRlw9eDgtnmlH+/
fz+utpRng15g8iVryt+N5Vetr9HZMK/qzQ8g1LwV6ThjJer8qv0mEX0EHcKM
8VZlNkgX7vER6yEo+yP/DUEVNuQdXmdt10mQZ/KX4N0r2KCzX1I4vJma37g3
co6r2DAW8rbDk8orvLzzKmA1G4oiLVy2UXkWeLInq2o9Gyy7eSmmlQTZB69G
o5psODzz6fTrMoKK7ouXyGxmw8jFU52/v1N5ufG7zlqbDY2P2teXFBDU7f7e
7vo2NvCdaxG9l0fQLrdwTgywYZJPKl8tmyCRs9Yz3XqU/qCfNknNZ6BZJ9N1
Dxu6SIwjJ5Kgwb3Fb0P2saEbK3g/eEzNw+63697vZ8PSYp1gkWCCpLad05s2
Z8OuqNSqp74ERaiMnPQ9yoZC7VWei50ImlL8MxBny4ad6732BFLrkZX8x6s/
7Kh+cpTMiS1BDHHPe2In2WCb8kVV9wBBryYFUyKc2fBxZDhv60ZqvRrp2pTr
wobrTwzYLzQIOkFK8psvUPW7/PivnU2QWsf9SuUrbHhm1WoyLU3luVRyNPk6
G7TKN8r4jvDQ+2hlncIg6vpjrmOzCTykPKfn/vkRG/bNT1KtjeGhQGuHjziU
DVxc3h8czkOnZF9rfgpnw8XrX0yTfHlINkRFI/MFGw5mRzx3s+EhDz91xps0
Nig0r2qzF6HW705D69gMNjRMPaw+zMdD5npnn77MZIPRia1T60e4SIM/cWn0
RzZYV9SKP/jLRc3XVomFf2bDHP+DFw0pXKTrtIb/XgUb+mVXhA0bc1HyTxN0
p4oNBxS9tkkCF8mtcPH0+03lOVG0Xno9Fw13p03cqmMD51Ys/YsMF8UeW//P
o5UNXtE9e4rb+pGQ+cZ2p0EqnyOTyk4u/ahsq/YXU3EVIO1dN+KvctDdD5em
DCRU4GRK9+2w0xy0UzNl7VYpFVhyKN/m1CEOytdQer58mQr8F1lbmbuZgzIU
hS4PM1XgKFpzbu1oH3qyoFo1bI0K6Jt+u7zbsQ/ZV529X7dPBfTWnBJO1+9F
TJPYgtL9KjDvYvXDK+t6UePPv+OfD6gAn+gJIRVGL7L4ut8h3lIFXtdUyGuP
96BdHzdtc7dRAYvdmY273vYgjah5A/LOKlCgLWc6M78HjZ95esA2QAWqLNNP
H0nrQg+vvVzgHagC86+YeB4P70Lsuwk5z4JV4K9Sy0qzG13I/G3O8oYwFRhN
kPrZbdKF0rsbhsyjVECgpHp+O68TOR6XDzFKVYGfFovebmd3ohbrZ9UbK1Vg
cEPEopO32lGJSZT5YmlVcE6IVSicakZ2Wtpv3oSogm1B+hvkUoFOc0tHGsNU
AfbECW9eVYHOv7DRo4WrwhFbOU+53nLkvfBWq8czVWh6+a7xlW05iqz7Jmf6
WhUE6x13hD4rQzVXLQOn36vC0j1Lyy32fUeG2a5X9zeowidb+Y/0yM9ov5Ng
iW+TKhTyZ3rIiH1GB5XCpD81q8KeOaMLM7fy0cm7HzPYHarwQsFr99I/eciH
Ct1UvypI4JbwxxeyUd7kA7vXs6rwxEJkfdvrNPQlmZHWwKcG8SJnwxvvp6Kf
dmlzYvPUwDv0TuztzmTU8L060n2BGqxpWKWd6hGPxiPk/piIqUFS8YkLj9++
QHN7k1i+NDW4dDn2hFrvczR/HrqYI6kGBtZlm2a9IpDkWTtx9jI1qEc65sbx
QUiOMWxzRE4Nrhzq+R7tfRcpVd1ODlRQg+KUF8/8428gdb+lM18YaqCnp1qW
Ge+C1m59azSlqAbTax78//94/w+otjq4
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rkQn2qiTZ/KPvhaO/O0pCy7rRP8DoGI7Rg==
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DUZMdLSwVm//GinQipHQN3ZiIl3bPfabNaWgozj4bkkqE/19uvMlp6UU5JbV
lidJspCXob5ZSrwUGOSL/Z4YZCGOC/Ehdx9KQQXvd3HKBAtFp44XXk2Sgk2x
x3Q2L7DQc66c1aeeSsG0eZcwhzgb9dXKsWlvpEBn5CZrqyEbHT4yH5PfIgWd
Y+OPNtwir0dYV2f8lAKH0fnX1+PZyLO0cPZepxQsR8tLViaz0W2Fc05+/VIg
bd+c2J3HRtW9vzdvm5KC0GMbiwu/s5HehQ9tn8SlgfJs3cAHcQJ9SpVfUSwt
DUoTDZ/15Qlk1eyHsuWl4WFVpm88hUAXdDSf3aBKw1hzqMSEJoGy51Ivm2+S
Btt0zgc7zAikt2HhJdKTBsnJZ0I1lmQ8O5s+ra3S0H0jVlzThkA9FaJmEkbS
oHf4RE2mM4FkI0NX/7KUhvsC9dKqQQTKKu2yqDsiDe33U66VhhJIZ8zg+ltb
aTCXodpoRBLI4sAkK8lRGiYKlRXKYwl0Q+IUdvSSBnnzsXDXTDLebjxl5SsN
luGHY3mek/H8FOjGl6Vh+4O9XeGvCFTV3hKjFioNPhsvK6mVEGgu1diJESMN
/olz7TM1BNrxb3uc9n1pyLaQ/MyqJ1Co+ZYq/0fS0NB9wO1DI4EEFtWpPBnS
oPi4K2/yB4HMDqtY7cuShmc8cwePthMoOnd1WMxzadhbUxV3/zeBpI6t6ltd
KA0XnF5NZPURyCZfQPxUiTQMp/XzXR4kUJIAl1FOuTRY8Y+9Vhsh0B+Hea//
v9U0vClg5o0RiFryN133kzTMn7QpkWQRyHUluzmwVhrsHZRWHiEIlOMyzFnV
IA1OGb5szwkCaUl2OJr/kAZDprXRtv8IdPFsS2x8uzToCMfkj04TqLiqobKj
SxoWs/PSL86Q+cvVTCj3kfn891e0fZZA270wxW1IGn63fV6UmyfQ1dpSy5dj
0rC6p8xVb4Gsp1JB6BRbGpYOR+zbuEggfv/cfIMpadi/QfwZ5xKB9jU+7Q35
Jw2fRM8FvyZxtGqKWM28NNCdGhq2LhOoOejBTmEOGaDq3Y9LI7Fka4yXFY8M
zNlYNfWS2Gb9zfSHAjJkPcvClkj8OCy8uVtYBhwtcl5Mk7i7PYhTVUwGzKzW
HyDfNxFV20/7rJQMDC16OV8msUuUh2O+nAw8eNM+yU3iZ39Ox/5TlIGi6JGZ
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
JlnLQNrbcszmKeow3KGpEVjMQP8D/548hg==
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5Q==
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9GeFS///f9P/AfHVTIE=
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#11"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmHk8VN8bx5XKzlizDWLGnhRJKucJ7agoZE+bJCGUKCpZSwjZQrInO4ly
pLRIfVV2WbPMzM0aZQm/+/uH1/s1d+55ns/n85w5925wumR2ZjUbG1sZ+ef/
/9kx95efW6P1j8z3VvpVdiM6s3aHzINLSErag9I43I0Wijed7owJQAnLr3Yv
ifxAwyLOc5Ux95G1e8dlwcs/UNfeoPqsmDTkwS4r9mtjD2p1iFF6FFOESk3l
nhmk9iIzV4muhBiMtqwqHZIp70e8ugjH76tDfmsExRkf+9HkCw/BgYY6pKAd
9zu9rx9Vvmqr8K5/jd4SIaYD3APIsCF9ObXmDbK4+GdfkuMAsmvRjpp69h7N
Nd6hdnMOouhp27L4mP/Qtv9sXbiNf6J7okk76/iakRq3RNeekz/Rt5I7slvN
mtG4ThT1gs9PZMOyHZbpbkYze9mxZ/pP5GbD4zH96yvaId3fdPn3TxS7yzk0
kdKCGDqZ7spxQ6hvlfzzUcsOVH3+pfrLd8OIlsqXZJvSgYq/B2qu7RxGznrz
/l/7O1DD+a1btxLDaNqz2aDmfCcKKDs8fkBgBK0ZuvEl0q8LsbdU9RlajCDV
d93DW9N+IOPgPfLOfSNoR8NBboPL/Si1q/EI0TOKKC3Z/2170I9OFhUFTxKj
aGhwddzGsn6knT/e1zM/iiLZamQlfvejRtqqBndRBhrcobZ10nMAaefYdXkf
YqDQUh7HVM9B5LhWIXSqlIHsXp+jx8YMItkUWpYnZqAtzW9YYaWDiOl2R6j7
EwP9GPPz9p4eRId9FwtODjHQJpVf4caeP5GjMdw1EmGitrSmigWPITSltyrD
4hITPS1U9puMHkJuOlwa+64xUeCrIBgpGUKc5sJHZO4wkUr3zk9fp4bQyO11
aoFJTOQv9qw/12MYfVMYFhZ8y0QK9+7xWHqMIL37+1/bC7HQXDKz2Th6BB1z
Lv5eJsVCTfl74g1KRpDZmEj3OI2FfD4syWlMjSA5P4lMsW0s1MjuprPWYxTV
j+YpqFuzkPs105Nl7gx0fTDE/FwyCx1025nLGcVAdwc1DKcyWEjBSXXCroiB
jHuV8k7ms1DbgXXXOccZ6CAjvWa2ioV2SdQm2F1gIp3ta7ezWlhIjK+grzSc
icq/jojndLPQJFuSImc+Ex11qtE9OMhCmQzv8lIGEwnOD8gYTrAQd9XGZo6z
LJS6hr9zmYNAQ0+l1tvdYaGPNW94xvgIVJvGZV+ayUIdR7ebvhYmkEfIMGH7
k4WOqcj/kpIlUIfFI45SRwKZD9yfTdAmUOnBCFOOQALJz+0QeL6dQBH6vnG2
aQTablzAX6NPIH3F4wocvQTSjKl86rWfQFmzvMjW5hc6afK355k1gW4wF+6U
XPuFsmeSMxfsCWTVw2hal/QL0fDBjRtPEYi34a11SccvxC/43svwAoFGqkof
r5v7hYoqvqspXSIQLkhn2KwfQ6exc9ykJ4E8Y/191lmMIeVQ7KF9jUDGoS6v
bLzHUPmG8J7C6wRS9LdaUxI7hma6x8f4bxKo85R2jM33MTS4v3AiIIRAoPXr
WfGRcXQzKkOe/oBAkkpdM2vdxxGFpWrfFEeg35IfdtjcH0dRIRpKJxIIlL06
8+PaL+Oo1m/eUuERgQL/RFNsxsaR1VaVGkdSB2tWgGUx7wSSW8rMuP2YQHzf
bIatD00gzhrnP75ZZD8NB9SLXSbQnNaQvUkOgepebLu8NnwCOb4VMlqXR6Ck
Z/Rq67wJlFRpkpmZTyCvx8Krij9MoMnXHDeUCwhkGrdq/1rGBJLg/fxf9DMC
xb69su8Z+ySKVTVM6C8k66kdZ1kKTyI2mkqbSDGBLladiVytMIn2eliGapQQ
SOPAUblV2pNoRf+cqEEpgSY7d5auGE0i6fqAUzplpL8uykbLxyfRb9t7Hjzl
5PqLwm3/zk6irWVp+q9J1rm7cm7xyiT6k8/8aFlBoL/SxPx86CR6dPG10H8k
Vz1ri5hLnETZzuniSpUEuqZfT/2bP4nUTBW6HUje+d+zotmaSeQsym3tS/KS
Q+LumaZJNLOwLe4yybWTQd+neybRcGDZXVOSA2+6n5kan0Sf3bKBm2QDIdu/
EyuTKPirXUk2uR77k31h45QpNLRwoE+B5LdaWlJjG6aQ4s3lxptkvcFvZZ4R
W6aQvf4W7zqyv/3HuRHLcAolHca9fWT/XCOzzYxjU2hO+AlnP6lPo8+A0+iZ
KeSntvy7jtTvLsfnmWGfKfTdWyTjVhGpf0JV8FDIFBqkmIjQSb0pKpniPxOm
kKblFuNc0p8HB/129ldPIROvH8JHST+PdZ/90vtpCs3InM3xIf0WczVz7Pkx
hYzFFTmvk3lIuqcS1LU8hWidx/XUybzYyoiKdQpMo/p1mZTWVAJRi9hy2+Wm
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
Ja5VdqP/AR1dc7g=
          "]]}, Annotation[#, "Charting`Private`Tag$11521818#12"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 4 Pi}, {-0.9999999846820761, 0.9999999846820761}}, {{
        0, 12.566370614359172`}, {-0.9999999846820761, 0.9999999846820761}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", "x", ")"}], 
       RowBox[{
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"], "-", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{"-", 
         RowBox[{"sin", "(", 
           RowBox[{"x", "+", 
             RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}], "+", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{"sin", "(", 
         RowBox[{"x", "+", 
           RowBox[{"240", " ", "\[Degree]"}]}], ")"}], 
       RowBox[{
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}], "-", 
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"]}], 
       RowBox[{"-", 
         RowBox[{"sin", "(", "x", ")"}]}], 
       RowBox[{
         RowBox[{"-", 
           FractionBox[
            RowBox[{"sin", "(", "x", ")"}], "2"]}], "+", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{"sin", "(", 
         RowBox[{"x", "+", 
           RowBox[{"120", " ", "\[Degree]"}]}], ")"}], 
       RowBox[{
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}], "-", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"2", " ", 
                 RowBox[{"(", 
                   RowBox[{"120", " ", "\[Degree]"}], ")"}]}]}], ")"}]}]}], 
       RowBox[{"sin", "(", 
         RowBox[{"x", "+", "240"}], ")"}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"2", " ", 
                 RowBox[{"(", 
                   RowBox[{"120", " ", "\[Degree]"}], ")"}]}]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm], ",", 
               TagBox[#10, HoldForm], ",", 
               TagBox[#11, HoldForm], ",", 
               TagBox[#12, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.776259581383569*^9, 3.776262627467718*^9, 3.7762626680198164`*^9, {
   3.776262723973016*^9, 3.7762627510384026`*^9}, 3.7819758412821207`*^9, 
   3.781979930385729*^9, {3.7820668783705177`*^9, 3.782066923096163*^9}},
 CellLabel->
  "Out[337]=",ExpressionUUID->"85c9fb85-e6eb-4920-a242-d1fc3e7e32c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v", "=", 
  RowBox[{"(*", "sebess\[EAcute]g", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"m_", ",", "a_"}], "]"}], ":=", " ", 
   RowBox[{"m", "*", "a"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"V", "=", 
  RowBox[{"a", "*", "t"}]}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"v", "/", "t"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", ".", "ERR"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"V", ".", "CURR"}], " ", "-", " ", 
   RowBox[{"V", ".", "TAR"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", ".", "BRK"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"D", ".", "BRK"}], " ", "*", " ", 
    RowBox[{"V", ".", "ERR"}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"P", ".", "BRK"}], " ", "open", " ", "loop"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", ".", "ENG"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"D", ".", "ENG"}], " ", "*", " ", 
   RowBox[{"V", ".", "ERR", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"P", ".", "ENG"}], " ", "open", " ", "loop"}], 
     "*)"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7831770822126746`*^9, 3.7831773154351273`*^9}, {
  3.783177473036654*^9, 3.783177543371671*^9}, {3.7831775826267085`*^9, 
  3.7831776503337097`*^9}, {3.7831799120360403`*^9, 3.783179939503096*^9}, {
  3.783179998525178*^9, 
  3.783179999286169*^9}},ExpressionUUID->"234712d2-f5e7-4566-b91a-\
218ba915e766"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Times\\\"}]\\) in \
\\!\\(\\*RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"a\\\", \\\" \\\", \
\\\"m\\\"}], \\\")\\\"}], \\\"[\\\", RowBox[{\\\"m_\\\", \\\",\\\", \
\\\"a_\\\"}], \\\"]\\\"}]\\) is Protected.\"",2,22,122,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831775889577074`*^9, 3.7831799775562787`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"36581f0a-1e44-446f-b73f-f299492e6cae"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.783177588869961*^9, 3.7831799775751934`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"5754e028-9b03-4361-bb1d-067d973d61de"],

Cell[BoxData[
 RowBox[{"a", " ", "t"}]], "Output",
 CellChangeTimes->{3.783177588869961*^9, 3.7831799775772204`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"7bc90aca-9f1b-430d-95a0-442886818e88"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.783177588869961*^9, 3.783179977580194*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"540109bb-2fd1-4294-ba46-2b293e2b0dec"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Dot\\\"}]\\) in \\!\\(\\*RowBox[{\\\"V\\\", \\\
\".\\\", \\\"ERR\\\"}]\\) is Protected.\"",2,25,123,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831775889577074`*^9, 3.783179977583207*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"e3c06b90-fb1f-4f48-bae9-95375ae20ab0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"V", ".", "CURR"}], "-", 
  RowBox[{"V", ".", "TAR"}]}]], "Output",
 CellChangeTimes->{3.783177588869961*^9, 3.7831799775931473`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"486d2961-db59-475b-83b2-e1416432375a"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Dot\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"(\
\\\", RowBox[{\\\"a\\\", \\\" \\\", \\\"m\\\"}], \\\")\\\"}], \\\".\\\", \
\\\"BRK\\\"}]\\) is Protected.\"",2,26,124,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831775889577074`*^9, 3.783179977595174*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"8b0e0280-bc8f-44d9-9ec0-7686d212fa4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", ".", "BRK"}], " ", 
  RowBox[{"V", ".", "ERR"}]}]], "Output",
 CellChangeTimes->{3.783177588869961*^9, 3.783179977605147*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"81e105a2-e502-4820-8e89-60a3600a2c61"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Dot\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"(\
\\\", RowBox[{\\\"a\\\", \\\" \\\", \\\"m\\\"}], \\\")\\\"}], \\\".\\\", \
\\\"ENG\\\"}]\\) is Protected.\"",2,27,125,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831775889577074`*^9, 3.7831799776081448`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"e60388d2-0289-4fe3-a6c2-548f301ba464"],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", ".", "ENG"}], " ", 
  RowBox[{"V", ".", "ERR"}]}]], "Output",
 CellChangeTimes->{3.783177588869961*^9, 3.7831799776190767`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"3483a345-bb42-4b06-b8e6-e1d9691aec79"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"a2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"n2", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", "p2"}], ")"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "1"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"n1", " ", 
               RowBox[{"(", 
                RowBox[{"x", "+", "p1"}], ")"}]}], "]"}]}], ",", 
            RowBox[{"a2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"n2", " ", 
               RowBox[{"(", 
                RowBox[{"x", "+", "p2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"20", " ", "Pi"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "1"}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Null", ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"n1", " ", 
               RowBox[{"(", 
                RowBox[{"x", "+", "p1"}], ")"}]}], "]"}]}], ",", "x"}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", " ", "Pi"}]}], "}"}]}], "}"}]}]}], "]"}]}], 
       "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n1", ",", "1", ",", "\"\<Frequency\>\""}], "}"}], ",", "1", 
     ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a1", ",", "1", ",", "\"\<Amplitude\>\""}], "}"}], ",", "0", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "0", ",", "\"\<Phase\>\""}], "}"}], ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", "Delimiter", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n2", ",", 
       RowBox[{"5", "/", "4"}], ",", "\"\<Frequency\>\""}], "}"}], ",", "1", 
     ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "1", ",", "\"\<Amplitude\>\""}], "}"}], ",", "0", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", "0", ",", "\"\<Phase\>\""}], "}"}], ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783181377166068*^9, 3.7831813771680627`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"d0a9fa04-c684-4355-ba78-cae320e935d6"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = 1, $CellContext`a2$$ = 
    1, $CellContext`n1$$ = 1, $CellContext`n2$$ = Rational[
    5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n1$$], 1, "Frequency"}, 1, 4}, {{
       Hold[$CellContext`a1$$], 1, "Amplitude"}, 0, 1}, {{
       Hold[$CellContext`p1$$], 0, "Phase"}, 0, 2 Pi}, {{
       Hold[$CellContext`n2$$], 
       Rational[5, 4], "Frequency"}, 1, 4}, {{
       Hold[$CellContext`a2$$], 1, "Amplitude"}, 0, 1}, {{
       Hold[$CellContext`p2$$], 0, "Phase"}, 0, 2 Pi}}, Typeset`size$$ = {
    406., {195.5, 202.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n1$52899$$ = 
    0, $CellContext`a1$52900$$ = 0, $CellContext`p1$52901$$ = 
    0, $CellContext`n2$52902$$ = 0, $CellContext`a2$52903$$ = 
    0, $CellContext`p2$52904$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = 1, $CellContext`a2$$ = 
        1, $CellContext`n1$$ = 1, $CellContext`n2$$ = 
        Rational[5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n1$$, $CellContext`n1$52899$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$52900$$, 0], 
        Hold[$CellContext`p1$$, $CellContext`p1$52901$$, 0], 
        Hold[$CellContext`n2$$, $CellContext`n2$52902$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$52903$$, 0], 
        Hold[$CellContext`p2$$, $CellContext`p2$52904$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          
          Plot[$CellContext`a2$$ 
           Sin[$CellContext`n2$$ ($CellContext`x + $CellContext`p2$$)], \
{$CellContext`x, 0, 2 Pi}, AspectRatio -> 1, PlotRange -> 1], 
          
          ParametricPlot[{$CellContext`a1$$ 
            Sin[$CellContext`n1$$ ($CellContext`x + $CellContext`p1$$)], \
$CellContext`a2$$ 
            Cos[$CellContext`n2$$ ($CellContext`x + $CellContext`p2$$)]}, \
{$CellContext`x, 0, 20 Pi}, PlotRange -> 1, PerformanceGoal -> "Quality"]}, {
         Null, 
          
          ParametricPlot[{$CellContext`a1$$ 
            Sin[$CellContext`n1$$ ($CellContext`x + $CellContext`p1$$)], \
$CellContext`x}, {$CellContext`x, 0, 2 Pi}, AspectRatio -> 1, 
           PlotRange -> {{-1, 1}, {0, 2 Pi}}]}}], 
      "Specifications" :> {{{$CellContext`n1$$, 1, "Frequency"}, 1, 
         4}, {{$CellContext`a1$$, 1, "Amplitude"}, 0, 
         1}, {{$CellContext`p1$$, 0, "Phase"}, 0, 2 Pi}, 
        Delimiter, {{$CellContext`n2$$, 
          Rational[5, 4], "Frequency"}, 1, 
         4}, {{$CellContext`a2$$, 1, "Amplitude"}, 0, 
         1}, {{$CellContext`p2$$, 0, "Phase"}, 0, 2 Pi}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{766., {231., 238.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{3.783182036990216*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"009f092d-e192-4dbb-a99e-353da1b07024"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = 1, $CellContext`a2$$ = 
    1, $CellContext`n1$$ = 1, $CellContext`n2$$ = Rational[
    5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n1$$], 1, "Frequency"}, 1, 4}, {{
       Hold[$CellContext`a1$$], 1, "Amplitude"}, 0, 1}, {{
       Hold[$CellContext`p1$$], 0, "Phase"}, 0, 2 Pi}, {{
       Hold[$CellContext`n2$$], 
       Rational[5, 4], "Frequency"}, 1, 4}, {{
       Hold[$CellContext`a2$$], 1, "Amplitude"}, 0, 1}, {{
       Hold[$CellContext`p2$$], 0, "Phase"}, 0, 2 Pi}}, Typeset`size$$ = {
    406., {195.5, 202.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n1$60755$$ = 
    0, $CellContext`a1$60756$$ = 0, $CellContext`p1$60757$$ = 
    0, $CellContext`n2$60758$$ = 0, $CellContext`a2$60759$$ = 
    0, $CellContext`p2$60760$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = 1, $CellContext`a2$$ = 
        1, $CellContext`n1$$ = 1, $CellContext`n2$$ = 
        Rational[5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n1$$, $CellContext`n1$60755$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$60756$$, 0], 
        Hold[$CellContext`p1$$, $CellContext`p1$60757$$, 0], 
        Hold[$CellContext`n2$$, $CellContext`n2$60758$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$60759$$, 0], 
        Hold[$CellContext`p2$$, $CellContext`p2$60760$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          
          Plot[$CellContext`a2$$ 
           Sin[$CellContext`n2$$ ($CellContext`x + $CellContext`p2$$)], \
{$CellContext`x, 0, 2 Pi}, AspectRatio -> 1, PlotRange -> 1], 
          
          ParametricPlot[{$CellContext`a1$$ 
            Sin[$CellContext`n1$$ ($CellContext`x + $CellContext`p1$$)], \
$CellContext`a2$$ 
            Cos[$CellContext`n2$$ ($CellContext`x + $CellContext`p2$$)]}, \
{$CellContext`x, 0, 20 Pi}, PlotRange -> 1, PerformanceGoal -> "Quality"]}, {
         Null, 
          
          ParametricPlot[{$CellContext`a1$$ 
            Sin[$CellContext`n1$$ ($CellContext`x + $CellContext`p1$$)], \
$CellContext`x}, {$CellContext`x, 0, 2 Pi}, AspectRatio -> 1, 
           PlotRange -> {{-1, 1}, {0, 2 Pi}}]}}], 
      "Specifications" :> {{{$CellContext`n1$$, 1, "Frequency"}, 1, 
         4}, {{$CellContext`a1$$, 1, "Amplitude"}, 0, 
         1}, {{$CellContext`p1$$, 0, "Phase"}, 0, 2 Pi}, 
        Delimiter, {{$CellContext`n2$$, 
          Rational[5, 4], "Frequency"}, 1, 
         4}, {{$CellContext`a2$$, 1, "Amplitude"}, 0, 
         1}, {{$CellContext`p2$$, 0, "Phase"}, 0, 2 Pi}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{766., {231., 238.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.783182037140772*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"48ffbf12-9d4b-4cba-9371-f73a0818d7fb"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7831797841090584`*^9, 
  3.7831797887127438`*^9}},ExpressionUUID->"0c2513a0-135f-4734-b798-\
45e462afaca7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}], "+", 
       RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "[", "x", "]"}], "/.", "sol"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
        RowBox[{
         RowBox[{"C", "[", "2", "]"}], "\[Rule]", "1"}]}], "}"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "10", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.783183566700391*^9, 3.783183581466922*^9}, {
   3.7831836230127964`*^9, 3.7831837428192725`*^9}, {3.7831848020446825`*^9, 
   3.7831848237635756`*^9}, {3.783184944662571*^9, 3.7831851034449472`*^9}, {
   3.783185147312646*^9, 3.7831852030564814`*^9}, {3.7831856026928*^9, 
   3.783185676415617*^9}, {3.7831857079288516`*^9, 3.783185747709385*^9}, {
   3.783185965543372*^9, 3.783185969665392*^9}, {3.7831860917159076`*^9, 
   3.783186101944579*^9}, {3.7831862028425436`*^9, 3.783186207445241*^9}, {
   3.7831862444123535`*^9, 3.7831862791712937`*^9}, {3.783186334931977*^9, 
   3.7831863377504025`*^9}, {3.7831864196477575`*^9, 3.78318646717862*^9}, {
   3.7831865191545305`*^9, 3.783186577706942*^9}, {3.783186662203472*^9, 
   3.783186799510338*^9}, {3.783186869738449*^9, 3.783186873213173*^9}, 
   3.7831869222140207`*^9, {3.7831869807494297`*^9, 3.7831869830701995`*^9}, {
   3.783187128878233*^9, 3.7831871737381744`*^9}, {3.783187249058719*^9, 
   3.783187279109355*^9}, {3.783187382666238*^9, 3.7831874695876827`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"68827845-25ca-4566-a770-175e09ac0cfb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "x"}], "/", "2"}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "x"}], "2"], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "x"}], "/", "2"}]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "x"}], "2"], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.783185605674856*^9, {3.7831856477213564`*^9, 3.7831856772284117`*^9}, {
   3.7831857264243655`*^9, 3.7831857487386646`*^9}, 3.7831861028511157`*^9, 
   3.783186208690896*^9, {3.7831862582412906`*^9, 3.7831862865504217`*^9}, {
   3.7831863382730055`*^9, 3.7831863416091137`*^9}, {3.7831864294405603`*^9, 
   3.7831864866066065`*^9}, {3.7831865208639565`*^9, 3.783186578264456*^9}, {
   3.7831866742363367`*^9, 3.783186730553649*^9}, {3.7831867621810136`*^9, 
   3.7831867941815934`*^9}, 3.7831868395272655`*^9, 3.7831868754391747`*^9, 
   3.783186924235604*^9, 3.7831869841143703`*^9, {3.783187130166748*^9, 
   3.7831871489385595`*^9}, 3.783187184846453*^9, {3.783187258123499*^9, 
   3.783187279729692*^9}, {3.7831873839039125`*^9, 3.783187470327693*^9}},
 CellLabel->
  "Out[197]=",ExpressionUUID->"6c8929b8-8db3-4d5f-921f-76807acd3ff3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
14g=
       "]], 
      LineBox[{{35.18639269335878, -5.0990403077040834`*^-9}, {
       35.19363026245783, -4.879158624837866*^-9}, {
       35.24893465929496, -3.2567702971906533`*^-9}, {
       35.35954345296922, -2.4521702563981096`*^-10}, {35.387195651387785`, 
       4.5884667044603623`*^-10}, {35.41484784980635, 
       1.1433621467051588`*^-9}, {35.47015224664348, 
       2.4538304612135165`*^-9}, {35.5193051190462, 
       3.5150375275997306`*^-9}}], 
      LineBox[{{31.719367241537416`, 3.5150375275997306`*^-9}, {
       31.723170226404406`, 2.899492125656507*^-9}, {
       31.750483679319544`, -1.4044396140591505`*^-9}, {
       31.774926702256582`, -5.0990403077040834`*^-9}}], 
      LineBox[{{17.231164825859466`, 3.5150375275997306`*^-9}, {
       17.231203898909683`, -5.0990403077040834`*^-9}}], 
      LineBox[{{24.485794278319908`, 3.5150375275997306`*^-9}, {
       24.487260036383248`, -5.0990403077040834`*^-9}}], 
      LineBox[{{13.605142717872962`, -5.0990403077040834`*^-9}, {
       13.605149162358826`, 3.5150375275997306`*^-9}}], 
      LineBox[{{20.859968465032843`, -5.0990403077040834`*^-9}, {
       20.86020309971886, 3.5150375275997306`*^-9}}], 
      LineBox[{{28.10903171914164, -5.0990403077040834`*^-9}, {
       28.117991737129827`, 3.5150375275997306`*^-9}}]},
     Annotation[#, "Charting`Private`Tag$164190#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 99.9999981632653}, {-5.0990403077040834`*^-9, 
   3.5150375275997306`*^-9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.783185605674856*^9, {3.7831856477213564`*^9, 3.7831856772284117`*^9}, {
   3.7831857264243655`*^9, 3.7831857487386646`*^9}, 3.7831861028511157`*^9, 
   3.783186208690896*^9, {3.7831862582412906`*^9, 3.7831862865504217`*^9}, {
   3.7831863382730055`*^9, 3.7831863416091137`*^9}, {3.7831864294405603`*^9, 
   3.7831864866066065`*^9}, {3.7831865208639565`*^9, 3.783186578264456*^9}, {
   3.7831866742363367`*^9, 3.783186730553649*^9}, {3.7831867621810136`*^9, 
   3.7831867941815934`*^9}, 3.7831868395272655`*^9, 3.7831868754391747`*^9, 
   3.783186924235604*^9, 3.7831869841143703`*^9, {3.783187130166748*^9, 
   3.7831871489385595`*^9}, 3.783187184846453*^9, {3.783187258123499*^9, 
   3.783187279729692*^9}, {3.7831873839039125`*^9, 3.783187470455358*^9}},
 CellLabel->
  "Out[198]=",ExpressionUUID->"8ebae6bb-e5da-47e3-a455-acb33f32a383"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "x", "}"}], ",", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           RowBox[{"Cos", "[", "x", "]"}]}], "+", 
          RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}], "]"}]}], "}"}], "}"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"v", "''"}], "[", "t", "]"}], "+", 
         RowBox[{"2", "*", "Deng", "*", 
          RowBox[{"v", "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Keng", "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "Mveh"}], ")"}]}], "*", 
          RowBox[{"Keng", "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "Mveh"}], ")"}]}], "*", 
          RowBox[{"v", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "''"}], "[", "0", "]"}], "=", "0"}]}], "}"}], ",", "v", 
     ",", "t"}], "]"}], ",", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "[", "x", "]"}], "/.", "%"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", "\[Rule]", 
               RowBox[{"1", "/", "13"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", "\[Rule]", 
               RowBox[{"1", "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", "\[Rule]", "4"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "18"}], "}"}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "[", "x", "]"}], "/.", "%"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", "\[Rule]", 
               RowBox[{"1", "/", "13"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", "\[Rule]", 
               RowBox[{"1", "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", "\[Rule]", "4"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "18"}], "}"}]}], "]"}]}], "}"}], "}"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "0"}], "}"}], ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Vtar", ",", "0", ",", "3.7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Vcur", ",", "0"}], "}"}], ",", "0", ",", "3.7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Mveh", ",", "1200"}], "}"}], ",", "1000", ",", "2000", ",", 
     "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Dbrk", ",", "10"}], "}"}], ",", "1", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Deng", ",", "10"}], "}"}], ",", "1", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Keng", ",", "1"}], "}"}], ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Kbrk", ",", "1"}], "}"}], ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"ContentSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", " ", "1000"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7831844301777773`*^9, 3.7831844476201515`*^9}, {
  3.783184518518389*^9, 3.7831845453026996`*^9}, {3.7831845977304306`*^9, 
  3.783184686756611*^9}, {3.783185092729617*^9, 3.7831851189345055`*^9}, {
  3.7831853237891254`*^9, 3.783185441235303*^9}, {3.7831855399917336`*^9, 
  3.7831855650796432`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"86aa63d6-9d4f-42f6-9b6f-ca3ec9f83411"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "+", 
         RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7831844339576645`*^9, 3.7831844488508415`*^9}, {
   3.7831845332788706`*^9, 3.7831845472903833`*^9}, {3.7831846477719293`*^9, 
   3.7831846892888207`*^9}, 3.7831853734526434`*^9, 3.7831854439390297`*^9, 
   3.7831855674680777`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"66fe23be-e724-49e4-a789-9c26a64249db"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Dbrk$$ = 10, $CellContext`Deng$$ = 
    10, $CellContext`Kbrk$$ = 1, $CellContext`Keng$$ = 
    1, $CellContext`Mveh$$ = 1200, $CellContext`t$$ = 0, $CellContext`Vcur$$ =
     0, $CellContext`Vtar$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Grid[{{
          Graphics[{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                 "]]}, "Charting`Private`Tag$143837#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                 "]]}, "Charting`Private`Tag$143837#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                 "]]}, "Charting`Private`Tag$143837#3"]}}, {}}, {
           DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
            AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
               Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
               Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
            GridLines -> {None, None}, DisplayFunction -> Identity, 
            PlotRangePadding -> {{
               Scaled[0.02], 
               Scaled[0.02]}, {
               Scaled[0.05], 
               Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All,
             DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
            Axes -> {True, True}, AxesLabel -> {None, None}, 
            AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
            Frame -> {{False, False}, {False, False}}, 
            FrameLabel -> {{None, None}, {None, None}}, 
            FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
            GridLines -> {None, None}, GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            Method -> {
             "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
              None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                  (Identity[#]& )[
                   Part[#, 1]], 
                  (Identity[#]& )[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  (Identity[#]& )[
                   Part[#, 1]], 
                  (Identity[#]& )[
                   Part[#, 2]]}& )}}, 
            PlotRange -> {{0, 18}, {-1.054091218307647, 1.0540912740826591`}},
             PlotRangeClipping -> True, PlotRangePadding -> {{
               Scaled[0.02], 
               Scaled[0.02]}, {
               Scaled[0.02], 
               Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
          Graphics[{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
cDLXm1b6jVWguv2vxJnJNjwtcTGp8dEqYI+uRWez2nHoDk55vrZVcDSfq52q
04lLY+W2Xd/CDmseds94oR6spnLE479f7LBKK1nEnTqE2/IM6+s5V0MyFiw6
fGUIB2yXo0tuWA27MTlC+4ZwjfXMUrHqashf0Bt7az6MXS5cCP7hsBqKbor2
WP4dximVt++ewathRnBLYp/jKOZzqq/yCOWAWfPs/dFsE5jwe/P6ShwHCJxl
6B1QnsDtoYn37qRwwIDutY45qwn8INP59Id8Dni+M+lzROoE1vi2JCw+wQFy
Yb+6ffQmsfVNKZca0zXwN+le19OTU/h2iTe70lpOiFyj0nPizgy+2Lh/3mAD
JywPHTlyuWAGO4zodtpIcwJH3VcN+64ZLL92dWbQVk5oZm9PdRGbxfk2d/d1
unHCm5tOMVl3Z3HnDE4Lq+GEA68Suj5HzmGK2Do0fmMtBIkwnZyNFvCMa4+u
yp218CmnRnvebgEXvn2k5Zu2Fs7x9r/f7ruAbfdrKf4pWAunl6ctNFMXcHzM
fn7h8bUgUvoOHfy+gLnWJPYZG3JBclSxi2cqE3ftd+y4sYsLngl+Fd2ey8TP
His2NR3ggmG7V52tVUxsAu8qjpzigs+eiX1m80wcHNj94kwSFyRkKA/v1WHh
718oF58sksfrjlq+KWfhTzDmN/OXCwrAIfJJIwsnxL48RefmBlelTQ9sB1lY
S93AqUSaGxIuFtSu/GFhb/ejZm17uWHAU2HlhQSBt79TAHE7bmDwhTWnyxGY
j5Op53SCGzaVX0y6QiNw5pMg9blL3FDbOdParkPgycGHwqszuMFRNCL0jxWB
36q7C+zK5QaDCueE5YMEDr3M4Iot4wYvtSntxiMElqN8+E1p54btwo1fpdwI
fPTg6KjWKh44u7nPSOcygdXSM/sv8vHAcrBOkspVAv9a9O8sF+WBDMUzyith
BE6KW127W4MHxG8FNu+IJXB7nfyb40d4QEUpcIdRGoHDDFVlUtx4wEZJPfdq
OoF13mjGdpzhgTVj303vPyfwvUTD0+bRPGD5ZirvcA6Bd3Ob9l9N4gGRH98D
V/II/Cdwz56SdB5YffO78eV3BHY8ZkfTKOMBMdXQPPZyAgu2Oya5feaBV6Pt
e3g/EPi92cm1jzp4oM89pWr+I4H9i06d7x3hgW/1MpSMTwSmqvlPbGDyACVs
tbH+Z5Jv6sUDFr94gO0/I/1ndQQOX3flYzgnL/DLa/+abSDw9LeoRz838UKf
1FG80kLy9bglpK3KCw4HhEoa2ki+/UlXvLbyQqnoaa9zHSRfy4fMp8a8wCWd
2LTcSeDsD0+PDlnxwqMp7hHLbpL/5qx6MQde8C97/CC4h8BCGbnbbNx5YXdF
IntUL4E/iBdlRp3lBbulC/zefST/aCxeFcwLg9qbS2n9JP9/VREr0bzAbi7C
X07idr/671vv8ULr6PsVlQGS/3irq99TXnBP143zJfHWQz0dmW94AUn1vief
d/D05yGT8TJeyG5yjAsjcbLBZJ5ULS9EMPpXDpB4z+t5uUOdvPD12Ue+v+T1
/8h+jY8b5YVDUaPF/5E4O+EnWy2TF64qHOfpIvk5rmXzXf2bF1gvqv9wkVgo
gHPIYC0fgM7S7Q3/r2eez/L8Bj7orJdv/UbW7++0oey1NB/cslosyu0isHyr
uNqMKh80XtpnuZPUq8NE5r6cLh/499y6ld9O1vNOkcfBhA90qo9H/mol61FR
v3THmg8EHD/riZN+TKdoTzc68EGFn8pToSayHkH9Q1wefPA61LRluJ6sJwQ+
GZ3jg5elWz7eqCXrWTLbEniVD2S6/IJ5awj8ys0iPf8mH5hJ1gu4VpH8LexD
lJ7xAePlwrunmOSPnb845/LBQqnccGQpyV/LzTm5nA++eexbMi8i+YqeNeTv
4oPTu078s8ol+UYGZJuN8cG0VgznvVcE1v0bLBnM4gP8z4hSkknyG735a3Et
PzCel0ZFPib5HUzwUBPmh8LPj/9sTSX5VSd3n5Thh1Z167Tye6S+2RkF3br8
IHdVPvNQHOn/xQ/+5R78YLH9LHtxIIHLFV9+UTrHD0sZB8LizxPYviPBNz6Y
H/Z+6b2+04/At7TcvV3u8sNua5WtVq4EZl8Q8OSp4gcUNH+50ZLAqfd/TJ9p
5gfdrTp6980JrL971G2gjx9CXbNbzXaQ9Wa8PZmzyA96ogvN+lsIPHrM4Zit
jAC05I2fuStO4CAhs2GsKgChO5biHNYTmILpTrStAjCTcfsnGy+BbSRXH/1j
IQBX71u3NX1n4Q+dL+weBwoA+8PTX5wKWThtz3crZqcAcP6kx3irs7DBr+HG
Q6MC8CgzxuULhYW7n9dafFgQgNOKE8zNXCwsxJm6J4FDECjtgYUrI+T8fW+y
U19LEDJ1T3k+usXETltuGYbfFASz0QvGO6cXcGxs4kZBOSHoVOLaYek6jy+r
RotnKAlBFo/3SPneeexefVUSqQtBhHuK8g+tebzjn5ecj64QeOQfu1i1MoeX
vI01miyFQFw5oKT59hy2syRMYwOF4CnHa4nuvFksx7/7nGCHEIgx50c1G6ax
wAt0MaNXCBp9uERls6fxb5MtgWhYCCo2r+Eejp7G7ZdlrvrMCUGYtjW1cc80
Dp//Ft20ah0I37bX8K+ewnN1T9JjNdZB9hT32/UFkzg/8m+bYMQ6+Hc7+lSc
/zi+pXsrXjZmHRgI212q3DWOfScVrbQT1sGiem7LZ5lxrLrDutY2bR3c4Bvs
29U4hh//fPz+QeE6IPQbP9CUxnCcu3m26sw6ME8VCS1rHsFeZrfDd+5eD/fG
zBv7eQcxlZ2md4VvA1jW/8FFm1rJ+VeSTJwXBoaglq2qRAHKOjBCEf5PGNg7
ftXUv3uHfHM572+9JgxVVuecdA4UoZ+n990PihWGbMfaWpvoUsQzMXmf77kw
mLTZGT25/AGpta17oNwjDM6GT4JOjlQj39duD523iUDuG841Vw1b0Xe3DenN
/0SgzFPh68DuQWQfWeTWtWYjlE3yGEU/HUSlWU6qg7wbYcApZ2Xp3yAK+fIy
d050I1gbrSQs5g0hgUCTD5yMjdAp+vyLcfQwko85N2jgvBEu7Qj1ejszgmzy
u8RevN8IXRT1dPuwcfS287/+1582wo7VXCFJ2eNI7Cc1raB+I+RRtHwzOsbR
4HZfpcrujSB/UmX9VoUJ5FHNpTNEbCTnzb47GyomUHCv3n4RWVEo/dhhfnZx
Er1iS7l59aooZIkE3bmqOoM4P2gflrkuCo+Cg5jLu2eQ49U6eRwtCkKFZ+10
PWeQIPvvkj93RUFrd5274vMZ5LvafvbCK1FglD5pS5OdRZqcYju9+0RhYDJ6
pJdnDkV+er2ef0QUdjXu1xVWmkOj4TsHX06KQuNh8SVR4zl0a+2FczNfROGw
ZHPZfwFzaJGr84kLlxgMBMZllE7OoXzeBLYjW8QgcWHkSU/+POKrV63/qS8G
3ackdqU1zCOX6I93k0AM6o9Jr9OYnEci/F81OveIwTmpdeapGxfQeQGbo/uO
i0HEL0mZ+rMLSHedUPHOWDFgW3fhxBZFJopryQibTBCDm30HztltY6LpeLQv
LFkMaqt/diFrJrq33me64qkYPKr+PWt/iYl+bWjcaFgqBgnx/42U1TBRycbo
M5tnxMB5aNdJEQcW4pip+LmXJQbJ33gbhrxZyLLk55WTy+T30cPNx66y0LCT
W3TiKnGY9P91KOIpC3G+2PH0h7g4nP7N63piloWsAi+prpMRh1tfkeHILxZK
ssh5Q1MUh0XtWPfINQRSXZQqt9cSB2LNNXNLEQJZb/vZWbpbHOYlzI1FtAmU
zM842mEtDrNOepto+gQaG3IdW7AVh3yJwF2iRgQ6H9rO2nRCHC7qTlqHWBLo
fsNrrquB4qAisfd8vBuZdx9Oxty7Kg4PvCzlz58mkIa/lEjudXHwHr78cvMZ
Ar3fGCU7dlsc+rTthVAQgSadXPVNs8TBtcaj/TqZbxlaD94fzRWH4an8Gb27
BLrE0W52vlAcznurX6gi8zHfC6P9GZXiwGNc3exO5ueDgRd7cK041I13RwST
+TrV4rVTd7M4VH78EedH5m/NRUkv7gFxeHtX+vQQmc8DKvcvyo6Jg0T6BN2B
zO+ViZEX9WfE4aWJrkwume9tt/0IPbUsDjY5w54zZP5P46fzhv4Wh5SuTwW1
Hwk0M3QyPmUVBf562W8I+0Sgy6FtDxr4KbCxNXoitI5An2x55Cc3UEDtSKxV
bQOBBGlGmSviFOAb5sybbiKQ3e8LDFEZCiwXreUdbiHzeMOrAroiBSpZbPtz
2gg093DCwFyNAtFQGn64g0Cb/SU/OmtRwFXd8XFfJ4GCTPbvuqRLAQd218c6
3QSq3hjZFG9IgYTB7GuePQQSmnl/MNOEAsklnsYXeglkX/K9r2I3BUbPqA05
9BHoyU2N433WFPCsGTgg0U/mTqeT019tKZB0svJxLol1tFK8+Y5SQG8quFpu
gEBXONqW5E9QILdPoOIUiWs6uQO3e5Drf6qMv0ni9S9gla0PBdbJHtCJIPE+
cY9YznMU+PHpx6ATieNuxEu9C6DAkukpdxESN/4seukWTIGHZjvanpPr8XuO
6omFU4Az4LAMhcR7e3lqaqIoMH63xfr/75Mid2vbXoqnwDEHIddEsp7PxUfG
aXcpoB/2/tgjsl4u1VD/3hTyeGOLaSSph9n9LLaoxxQQZV4U3tdFoDDejpht
zyngE0dvXib1rAz8KzmfTYF9NvmBF9sJxD6v8DIljwKzJTyUnlYCGTlY6lkU
kXrqB74S/f/7pfrz1X/LKcCg3DbYTPr3N6t6zLGWAhV2ZgfXkn4bSBF+gs0U
KHM5MF1WQ/bXTTG29x0USKWwwmzI/vhx2kNSdoQ8f/LJksgHUt/B+MyWSQqs
t7ZtNikn0DnLYt2QeQoQX6vq9pUQaFGD9+DYdwrktPzT43xL9u9D7bHbfymQ
lR1elP2GQL6CDn4mqyUgnWnsr/2KQAusrJtPBSQA/tS+7HlGoOkcy09uChJA
O9YjfCuRQEqyFw6IqUpA3DN2LTVyf7nGPxytYUhAKKdsTfpNcn/7ESs0Awlw
ElAO1Qwl0KDWra3zNhKwdDV5b7EPgaSeFFel2EmAhk897PIkkMOGsf0WjhLA
P/tspcCFQD1ftX1feZDn+77moB8mUHt+x3PfYAn4tEo9/BYQaIPCio5suATo
XJtdJ07OE5s7ilUtURJQvNhUE0TOm6ZzF0a07kpAWmjlwpQCgWp1xCnL2RLQ
+jY7WYubQLjQIepSnwRMtxVtPH2bhZj68u1PRiTg6JHLT1aCWWhT2Zxk45QE
GOzXO2xKzsugDwGv5JYk4NwutLi4k4UMa5Na6vgk4dajS2Nt35morK9ddJOh
JPz1fba7axcTzR9NcTY3kYSaQ7EfWrSYSHL4xAv/3ZLAlW8ZGCrBRJfHF/Wr
bSWh8J7rnQ3zC8hgQcjR10cS0tCj+4M3FlDJyt70ijRJqIAHbUcK59FssPDC
/DNJSG70611OmUeU1f1bRLMl4aiU8fSeq/MoYO2p6lNFkuDw9oiM+q55pC90
Y1a4VRJOphCH6zrmUJFsFcNttRRMb9ApyBudRe9MtpfxukpB4bdtdXoN0yg8
KmyXuJcUgC5dPixzGh1obehQ9JcCk7+Vq5KuTyPCyZFpFCQF2echSsRoGqkE
XpG+mCgFs1v2Flx8M4VS33y4Ov5JCmQ2HPmnFDGJwjeZmZUpbYLyxejS64Lj
yPaHZZP3zCaYvVQrbrZlAFEGIk4IszbBuQMhptZD/WjwQ8X3oqVNsHlEbUrm
Rj86GaUjs4ZNGm7dbd0m1t+Hzm7a5Hd/ozT8uqUq6H+lF902WVhfYywNWhOF
E56lXag5LspWNlUaimbOTu0SbkVPhceZHjQZCAnBofoxRch0jr12/4IMuH5Z
bcGu2IaTt7ifoxMycD7H4j+nkDZMXGmQ4f0qA02VFp0Jg+Rx4aQLFT9kQO9e
9LqwxHbM3K6uoMkhC5fn9WluHJ1kXj8ULCAhC/+dDhuL6erGs1uydD6by4LN
1bsD7raDGAWvG03fIws3TdpPnMwaxAm1528GW8rCW0kwo7IPYeRkNL71gCx4
r604MZw1hBMiOuOfOclC+1P3/55dGcbb+9gWrp2XBQ2DutisuhEcF3zwiWG6
LCT1c5xt2zmON6sHErwZ5PnRZntCTo/jnp607T0vZGHtNWce7tvjWE57vuvM
a1n47tEo/mBgHOdPhPC9KJaFi9rDIV2+E7h7d865DS0kLubNt42dxNIivObT
f2WBsZCUcy9zGld+YNx5yyYHhu/YJcpqp7G7t+1oyGo52B3h2/96dhrnVD+6
LMUtB1J6Ex7sKjN4R4DuGxthOdjxXGnuwLMZ7Dp0klKmIgcDX9WeB9yZxa9e
vJ+PPyQH/TM273XIvLBnaItoir0cpNGKW/+4zeNp4ZdGz47KwSonjZ1Xr81j
ueA7icUn5KDQKcGusmgeJ9p6wpiPHOQGS1mpURfwldXCCZsj5OCWGwhbzSxg
Sb0b5YZRcmA7EVs/yMbExd4r0+YxcuB13EuHJsbESz3T248myEG8vZ75gikT
u+eUTYWlyUHlucMv1FKZ2Pqo27auQjmAp6VpDkYsvHCr/+RICblez8mUKwdY
OLJmX9xcuRwopIno2buxcKW2wcS/SjkwvfA7Y0s0C+vyrItVbpEDrnv4Q3Ar
C3eg8CKtdjkI+zKv6DDGwv7nfo8ZdMmBPbvM2MJXFs4antDdNyAH2wKFx8V5
CCz7rnj00owcMLfGPXysTObReTp/6Lwc1J0XezFFJ7CD3NOtMSw5CPnlarl2
K4ETb8ZGP14m9dfsU+k0ITCPi4tO3SoqqG3PP5PjSOCMez3OHRxUONL67FGN
C4FNmiyjhtZSQW9a70uxJ5k39fWGv/JTIWVfRrk6mXcXhQQiJSlUOOR/N2N3
FIEjRS4XLkpSIWRH14eh2P+/35qdrJGmQuIMe9T+BALvo34yPqdAhemgm5xd
KQSeVtrsv0eZCico9RmTaQQOVnucJqtKhXzugo72dALnbAn628CgAvFLo3Bv
FoHN9edV07WpYPbz3dHO1wQeNrS3D9ChQujxYT/DPAILmuu8UzSgwnDrTO2L
IgI/25s+8ceQCvLcI+zZpQQ23LdeuM2ICgly6bExmMDe9kzfKzupMMf7JG6+
ksCcTg4PD+6mgsXA+l/u1WQ+P1HboGpBhRuZBY8/fiawjrvun1XWVNgt3Rr2
p47ADV7PVLptqDDZOZ+6oZHALn7Ch18dpILdydYZrmYC/zkXcj3UjqzH6dbx
/hYCJwQQb+2PUIHiErwmpo3AalccxxmOVFgvu7lJqoPAldfq1689RgVPhxul
UZ2kfxH6RgMnqHDz58Pari4CL0U/98lzpQL86/u2qofAUfEbU294UIGZMmHI
00vqnRha7+RFBVv6izSCxMXJi7+2+FDhvckhyts+Ats8dKbx+VPhbppL5qF+
As8+IeP+WSrEGkZadZM45LlBeOEFKmgcrOLaOkBgSnZmfkwAFQYPHeo4Q+Lc
N2JjLv9RwfFHVf7/32ftKghfty2YCrVKfc+uk3i4eAmtu0aFPxufvnQk8UV8
3HsqjApeOuc/biCxUGVzSlkE2Q9bJpjPyPWe1xjW3Y6iQvWqBg0xEkND1k+P
GCo4VO4NdSP5drdQlCGerH+4mkgg6/HtjLDdmECFJGLiXBpZ/9q+b6HziVQ4
V3FLhHzewqlDLnkV98h+2b/SQj5vYZ3x1pGkFCqYN6Zkfyf1bZwGIZ+HVDC5
qvgysJ3ArguvDE0fUyF74G7DQCuBV75InpZ4Svrnoym2ifQr8Vvk/S8Z5Hqd
F2IMmghc9c/1x4NsKsSN+vELk/47cHQons2hAtt8yKaGGtIfLuODu/OokHbt
9ymXTwSWXy+d+62QCpLXPzepfyBw6cabw/UlVIjJvU84lRN4v8RvgSflVDDt
bDzuW0LqL991yqqSCm/kt+1Xe0vgEZ1YhedNVEh9oUFZl0Fg/8q9miWtpH9a
7sajjwnMbsOzvbGDCntvsElFp5L+nw47sNRHJZ8nMng875D9+CTwGkxTQXfy
xhrrqyQ/hl7s/jkqVMbOjk8FEji0/FuyK5M8/qyy2Y7cz097/HKjl0i9murY
P5H7fVLQfaSbTR6enbth27SPwOcfKCzMrZYHkfTbUpp7yP2iOvZjhVMeeBy1
XbzIeaJk5iikwC8P15uu5/joENj98gHkJy4Pg9IvJF6KEXhuGh5wa8mDeOZ9
Gk8WC18+v/Jccos8pNz6qy2QzMJ8HKX5dF15EDD7HF99nYXVpLfWHzSUh1sC
fMv2x1nY+6D670e75YHimG3ILczCxAfxw/on5GG4r2h7tgcTB1t1uVi4ysOl
TsltkvuZWGggwdfZQx7U8i7FGRswseYPwYhwH3nIGSqWKOVnYn8NznetgfLQ
evBYlX32Al5OXhQ+lSAPBh3GQleH5nF7pG+Fz10SXzNuEKiax/kBTJ+zyfKw
I/UMx5HMeXzWfrb2vzR5UDixrYN+dh4vio8Gx2XJw+n6rLoWjnnMSmqZf1sp
D7seuprRKXN4JjGnkm1ZHkIaR2/QRWdwTbiG/5of8jCvWm/NvzyNn5/Pkub5
LQ9yBaWQ20reP22fB2xYpQARtzU6bG5O40mRNIYivwJMbH0X9P3fFB5LiE3Z
o6AA98YkxkX6JvHALe+ziQcVwMFoed8Pz3FcuG9Cwc1OAVK7pQXFTcfxLSGH
rq1HFGDH3qnH66THsVnMLv0eZwVIy2C7HNU6hnNuyLNJeimA+qy3aebWMRwS
3Bv1KEQBTLe2F3b9GsGK3mZPsl4rQNiBZwf1Gwexz65NrRXcijC5cv7xv9Y2
rGSYc02xQREOhq7xmbxQgCK/nNOOuqYEp4X1uKvf9qMMz2U323AlCKKW137h
GUCVY2dTZG8oAePNneExpwG00nFmTWGMEiSLvfCX4B5EfsV+XeP3lED/qpjq
J7shZHftdKBhjhKMvo58tP3bMFIQOfnxS78ShO3SUAn1HUM7Ysa/lw4pge+L
5abFxDHkuNZFLWJUCbbIKhtsKxtDST+P39k0rQRaC3u223GPI75BZ7c9X5Xg
VWjM5+KH42jxmQPvU25lcE07BKOVE+i97oH9djrKECD4+0s9cwp16lNPOusp
g9fLIwOF66fRnMHieXcDZQjfU3LptM402mgUl3xxB/l9i/b/6P9NI69d9SNJ
lsogf1a4l59rBonam/j2uCqDwh+7Kub6WaTmsCFkxEMZUuqNPEB7Fu1wHL09
46UMozWifQf3zyKv48Hvfvorg87wNva6W7OowrN0RfyKMjD2f/TtFJhD3oGb
b9rfVQYjx6dam3/PodD/Vj88nqwMYa32Do9E59G9K605ng+UIQ02/W7QnkeV
13zbA54ow4j+hTsup8g8EJ0lcf+1Mlh+LLEI7ppHVSnymX3V5PkxssjgyQLq
Tf1aMlarDK1Tj15eK1lARFpFw1yDMrx9FFQT3raAKE+dv/xuUwZZMcOtmJ2J
fLNTdCWHlaFT8zvn16NkfikXrnb4oQxAvX1Kby0LqcX29zN+K4PIPUWpZnEW
MnBOX+RYUYbejQ3Jymos5MC+eVP2ahpU6vG6b7JmoQdm+8/9FaBBpNrLk+J3
WOiVqERUyzoa9DObY4ufslD59GjaU2EaXA3Q9pYsYKHBSP96CwoN6rU2Vcl2
knmsKZ6aqkCDNwfe5N4l85tG2mE9f2Ua2NvNHJkRIpChn6yVmSoN7vxTHKOI
Echxw5sAJoMGo2JuNlKKBHp4qLnF0IAGPF/ZNFPJ/JijnDS1HtFg7ORL0wUz
Ar3/6fR30ogGIdT99RIWBBq+z1KO3UmDYSO3lY1k/pQZFggesqHBDt3Ql6Fk
fmW86byTd5AGZf+0ORrPEghCUl9et6NBIVX6zLdLBHKW1+iiO9LACz/1HL9G
5uvl5fnVx2iQRD859CKCzP+fyti7T5D8hJ/vsCTz8iN3C41gDxpUq3W91ibz
da6eiMkBLxp5k/uRcTaZQBU8A4eVfWjg7rH2VEIqgUazvMKaz9JA+L2Wpi+Z
z+W+RPXLBNOgcUhl6m4+gbQq9i8uhdDgrNFBx8Z3BNpxW4LrcxgNOJ8VnRwr
JtDxLS+1/aJoEM1Tx/fiPYH8Oc/sMo2hgdyr+bTDHwkU0qXvJB5Pgx+5mq+m
qwj0+FJt5IdEGhifI6Qf15L8dt9Ku3OPBreMvwfU15P8JOwLPFJIPTK2GXQ0
Eqh1XrZ++0MabKZkOZU2k3zLZkbWPaaBi1XAyNVWAi3GvPk+kU6DA0iiXOH/
70ucL/EXZ9AgX23nYkYHgdZrGlFjMkn+L38GcHURiMrOrXc8mwafn/kd3NlN
kPtNRu1MDg2Y5wOZAT0E2lywVTo0jwZWnykL4b0E2i5ktf5OAQ1KC3ssT/UR
yMzTdc2zIhrIBz5cp9xPIMvK/34UlNIg1jVHu4zEhzbdmavGNFBczs5TGSD9
u5g12F1BA9+axP///ofcWz+2zFTRIPflp8///7+Tn1pf5a8a0o873xzDSBwQ
vviOt54G3zIMrA+QOGSY+6VkEw08NPlSf5PXj9KXTVVvpcH5zC27AkmckKAb
b9hBg+D8SZs2kl8K0yrUqpvsh42ZpatJ/NTc7YJzHw12lrhF8JH1vHoc5Ok3
SAO1Fy6FC2T97/7cORoyQoMENmOrDFKf97bZ1rfHSf+/rrLW6yRQTU6lcfoU
qd/7v2VPSH1bePp13s7SICCDlTJJ6t/r8pX2aYE8Pr5ArGoh/SnnkeoiaPD3
yanyZdK/JX+91T+/kf3RGtLjSvr9p976G/cv8vyFVs3xagKtUXKfofwl8WdB
cX2yPzb2JTYZrFYBZb2ibB9MIOktryosOFVAVaTC3aqUQMqxVW8duVVgVo5o
WFtEID3jpfvBgiqw0L3wlj2X7M8HvLHx61VA1nX7LtNXBNr9XS7ksYgKqNS8
yXDOJJDDy33ulRIq0Mv7b1b2MYFc1ngc6dikAqnsemPVDwh02inYclJWBXpq
DzeY3SNQ0IbXm7mUVaDNkeNxUyyBrp/+pCSuqgLr7zY87okkUFz1AEVFQwVC
Tf98KA0j918g36q9m1VAsv9blEAgQd7PPBpiQQWKOve8HTlBoIbtV9+nGavA
Ve6X/AVHCdR5NynvjZkK3PxxnXniEIGm9lTfa9urAhdNQ8L27iYQT768q+hh
8nj543IbDQJZhQ6tpPqpQIGlhmfoIAvZZLOWA8+qgP7E9pfxjSxk2/lv3u6C
Ciw3fi89Wk7OT2WZvvX/qcCD2YourQcs5Fnv/C48QgXi927Lbj/EQqHCoz7e
D1WgfOnyg40fmChi+6LrnscqMLzm9n3ZbCaKcmV3VH6qAlrnr5QsJDHRrUK5
vaOZ5PpNPzhrfZjoocMJZdsCFZCJMDlzl8JExenjw9sbVMDQdOpilssCKm9Y
6qI0q4CCgPeGwb0L6MM3jqbvrSpQ8ajwUdvmBVRjrlD2plsFJo4oOfFyLKCO
+ZP3FMZVwOgs/1Duw3lEbJ7ax/9bBeYDl6MF6+eQYtVMRb+yKpi8/p4X+msG
XbQuPvJSVRVu2hSO6vbPoLq+yKVLGqpwS69EprhsBvkuqiqKblaFkRrtEvng
GVQi7X1jH1KFdZPHhR+xzyDrgEWrTwdVIWDi5rzXyhQKpP/ufx2iCh5GIVbi
bROo+R7f95B+VZiP+P5diW0ESbxSOx0zpAqHOxaoxW3DyLVi79i9UVUQ0RCx
VsgYRn9no5typlWh1yzFLMJiGKkY8D8fXFKFMt6+TWKaQyh0kP+wPr8a/Cdi
fqXRqh/pUgVLvmxXA50ko9qSo50oLWvdFeeHanCct5Po7/6IJIJ2r0EH1SFX
WvpUcGMdtp/Nddhvpw7TfE8Dnt+rx0m2EvluR9Thsc7O0miXBixCnz8ed0wd
CviDbEJ+NmLB4ZvvR06rw+z+dVnfBFvw6h0tgaHh6rBJ1qc6TqMdz62xW/z8
Th0G9v/csN6sF6v4v981WKwOW6K6i1Kf9mL3QeVHi2Xq8GffXu15jj48UfDT
SqJSHS5Btfinij485HY/26tZHarOxsof3TaA2z4PugvOqEP6Fb3BTMFhXHLz
5NABigbg+m8e0DmKzR1iuu2lNCDr4xr6BbYx3KnyrsVZRgMypBUjQlTG8GI1
V6WXogbcjMo5LxI0hlXYs56HamlAmNzdPlnqOE46v+iXv1sDWlLWNYa4TOBz
Tlc4hAM1IN3kKHPuwxRm13j+VzyIvH55sejqySkc96f5m/RVDbC99zR9jHsa
Z92Tm1G9rgGvTr959M96Go+3VTUY39aA4nBZ6+T+aWxjznf3zEsNiOSnOYvM
zGC65j1aW58GRNS6JQl3zOHCxmLFp4MaoMc7KNTNmsPg1U+9MKIBOX/W/znB
M4+tM6Q3SUxpwNHaVXbthvPYX+rZ+hOLGjAfax647uk8LuDO+73IRYcq/XNR
La4L2DCj/UclLx2KVrArR9ACrjb5tpwoQIeyF2sf/ElYwN1X9Ah9YTosCVu7
GFQs4F/LeDxEmg6fMnDgkjgTG47WN6zXoQOf6PkdsuVM/OkKs3Zclw6gyXK9
08LEVlJCNQXb6MClqG5cP87Eznb7K+yN6DCT9SDyKg8LhzT2FDzeS4cHEemm
nPtZmMfrd95ZKzrsLjYRiXZh4dvcUm/MbOjwn4D3xbZzLJxu4vxy9hAdJO09
fJ/dZeFPxZMPtU7QQXjgybXD3Sxsacf1gMOVDvn76synp1i4a5mW3OlOB6bE
zpSt31l4mnE6IcCbDrYbA4qjeAjMk/E1ouISWa/5lyPzigS+ZSISnnCZDspv
Lx/JVyewxKjONdcrdCg2daA7bCawmlTAfzxhdOhqd5PeY0Rgy9ts/jZxdFh0
nS1LP0zgpiK/vcdu06F9za61E04Eth4eVfRNJPlei+f6d5LANupVfTdT6BD8
RuUX9iNw236dgpSHdFg9wtbkeoHABwIy4l4+psMqtXr5qcsEtq2+Yfr5OR1+
aKvInL1O4K6FX9LdL+kQ474+OziawHbCXr8mX9EhaCT5hms8ge2PWb7meEsH
gXJxjvJkAjv9Xi8OH8h6Y6+0J78k8LBs6FfLSjrIVD964/uawMfNlxuOVtOh
7XBBtHQemc/vdIUENtDh0oc0ClcxgSdKzI9GNtPh2xerMqMyAruOFm2910YH
Vfv07Qfek3manjJf0EMHed+B4tWfCDxzkL+6qp8Oy84XMtNqCOx5OehR+xAd
sjVkj26sI/P2Y1bg2CgdNuVRGlwaCOz12dl2cYL0O/7fUlQTgRdYLYxVM3Qg
jKqboloI7L3RmFdong5HpKvsXNoIzDLIn9jEosNe3+dRIh0E9j2h8F59kQ6C
/pddHnYS+MuNxGSDZdLPY8+HVv3//0U5a8/t+UGHp6GsnwY9BP7aedHK/jcd
+ul+Oda9BD77d4bmsULW1/icbXsfgX/Fq7OXsjFgYeb09Kp+Am9TcPUxZmcA
TWXp5EMSXy5M7a9dzYACx7oLIgMELt3TtctmDQNSrwxJupD4z6Dgux5OBvjn
XDwQReLt/ubyx7gY8Mto26b/46A1V+OnuRmwKk8p4ASJy5OKVnx4GeCUk+wu
TOIV1cVT3/kYICFsMfuAXA9hlZ4gAQYUj+1nYyNxsM0JM04hBpRayGTpk3zf
T9zPu7mOAbrPrrAsyHrYLrXLiGxgwPPj9+v1yHqN+PhjUoQZ0Cv803Sli8Ah
D01/UzcygO9kgON9Uq8KrSD3l6IMYPAeFV9H6sn+qaBDS5wBB6r1A5xIvY0P
s3YUUxigf5g7LJz0o/KKs9RnKQaEfZTIdCT949hwL9JamgHeFRsbBUl/TZ+1
fO+SYYBfg+/re6T/n+p3tE5SGdBu8fjD1o8EXusciLwVSD5qgv/2kP1j/jUv
a1mRAf0Nazbokf31WVzhOocKAzxzM/seFBA4XNj+m58qqces5IgN2Z8mgrEn
h9QYMDVdPThB9u97jp/GxXQGZDT+HHz6nNT3n3qekiYDTjw3I1rTCWzw67jc
HS0GvBWyEx1MI3Ahq57Ndwvpn5BFdUwSgc/PrvId0GHAkXPSxzYnEHjzhM7Q
bl0GcAzf1iqMJXBOb1qZwjZST1GdR/bhBM6oOhvQBww4Pa5ezutP7pf3L2bM
dzDAruM3Nd2LwHIlg3YFxgwIXOFeL+FG4NQc863xZgyINN2Vn36EwIn3JZfM
9jJgU/j4UWVjAof5VZ7OPcSAoQj9iD+8BN7h9bNf+jADBrRHrK5xkH66aey9
ac8gn6fmp1p/svBlhyQV96OkH5xm0s97WfjsTq8pqRMMeHNp9Svzeyx8Qkr4
2A1v8nyNCIlgcr7KiO1q/ubDgDsnLw5GfGfiwfVByMWPAcenYq/bkPPYnmta
Cp1lQLChBY1WxsQ2X0t6ly4xIOnui/XTp5jY6POJA85hDJgevWPfUraAFZcv
JnwKJ/tlPNbHJ2MB88nGtKtFMKD25We/tjjyfnGx8MDPSAao1d5gLRxfwN7K
/AdvxTEg4ELbRz+OBZx8veBg5X0GcLNC+wYM5vGiKfch5VwGxCRxPXkWOou7
/TbdjcljwKX776Kc3WZx2QPtrqV8kp/uJjy5axZHLB899OEdA/4mOizYCczi
TU9zD9mXkftp1/3m3oQZvJvDwS66hrx+yDPDG0nT+EnFq8PEINmv1881ml+e
xBx5p7jODTOgQqZBl912Ers+UX73c4QB48xfChH0SawS+lh49QS5316Jzf8a
mcC5polNInMMuHmw4HuYyQR+X/Of6bbvDNA5yuQMYRvHA417NcMFNWH4WK7x
c9sRLNo3yyUJmnCel+O+CbULj7TC1ppkTVCZZnGMlvihFOU9G4+maEJw0dHb
azaHI7ugg8tfHmjCsl2axZfKeNRM88yTeKQJ77s+2OhSHqLy4Nt0nwxNCEg7
hi2Gs1CyxqTSxnxNyJRu7IsoKUH7I6PEXBo0YbFn8zZ23jokMHzn+49GTeik
PbRn9tWh2i1pnTebNcGCN7AuIase7RjJT3jXpgnrV/IDuCwaEUN3UIi3VxMK
T0xsoFU1I75JBnfupCaYpC1wH/zVhmq2bZs2m9YEMec7KvLO7ehavGl134wm
gHvwgfdV7eiXgX3YmgVNKN7DXX8krgNN37626vBXTbC22J66mtqF0mduDi8s
kXjT3GHp613ICSXhkG+aoOt5yoBtrgt1zmb9l/VTEzyFtGP5c7vRLXjnYPRb
E9jLk/l1RXqQZeKHbZ1/yHo9KU3Uiz2IZ76OcmpFE8zzTfubentQlVHnz3//
NMEu1spw2/Ze9D+IjRzM
                 "]]}, "Charting`Private`Tag$143893#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                 "]]}, "Charting`Private`Tag$143893#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                 "]]}, "Charting`Private`Tag$143893#3"]}}, {}}, {
           DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
            AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
               Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
               Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
            GridLines -> {None, None}, DisplayFunction -> Identity, 
            PlotRangePadding -> {{
               Scaled[0.02], 
               Scaled[0.02]}, {
               Scaled[0.05], 
               Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All,
             DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
            Axes -> {True, True}, AxesLabel -> {None, None}, 
            AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
            Frame -> {{False, False}, {False, False}}, 
            FrameLabel -> {{None, None}, {None, None}}, 
            FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
            GridLines -> {None, None}, GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            Method -> {
             "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
              None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                  (Identity[#]& )[
                   Part[#, 1]], 
                  (Identity[#]& )[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  (Identity[#]& )[
                   Part[#, 1]], 
                  (Identity[#]& )[
                   Part[#, 2]]}& )}}, 
            PlotRange -> {{0, 18}, {-1.054091218307647, 1.0540912740826591`}},
             PlotRangeClipping -> True, PlotRangePadding -> {{
               Scaled[0.02], 
               Scaled[0.02]}, {
               Scaled[0.02], 
               Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}]}}]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`t$$], 0}, 0, 100}, {
      Hold[$CellContext`Vtar$$], 0, 3.7}, {{
       Hold[$CellContext`Vcur$$], 0}, 0, 3.7}, {{
       Hold[$CellContext`Mveh$$], 1200}, 1000, 2000, 10}, {{
       Hold[$CellContext`Dbrk$$], 10}, 1, 100}, {{
       Hold[$CellContext`Deng$$], 10}, 1, 100}, {{
       Hold[$CellContext`Keng$$], 1}, 0, 10}, {{
       Hold[$CellContext`Kbrk$$], 1}, 0, 10}}, Typeset`size$$ = {
    532.8, {11.7, 20.740000000000002`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$143928$$ = 0, $CellContext`Vtar$143929$$ = 
    0, $CellContext`Vcur$143930$$ = 0, $CellContext`Mveh$143931$$ = 
    0, $CellContext`Dbrk$143932$$ = 0, $CellContext`Deng$143933$$ = 
    0, $CellContext`Keng$143934$$ = 0, $CellContext`Kbrk$143935$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Dbrk$$ = 10, $CellContext`Deng$$ = 
        10, $CellContext`Kbrk$$ = 1, $CellContext`Keng$$ = 
        1, $CellContext`Mveh$$ = 1200, $CellContext`t$$ = 
        0, $CellContext`Vcur$$ = 0, $CellContext`Vtar$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$143928$$, 0], 
        Hold[$CellContext`Vtar$$, $CellContext`Vtar$143929$$, 0], 
        Hold[$CellContext`Vcur$$, $CellContext`Vcur$143930$$, 0], 
        Hold[$CellContext`Mveh$$, $CellContext`Mveh$143931$$, 0], 
        Hold[$CellContext`Dbrk$$, $CellContext`Dbrk$143932$$, 0], 
        Hold[$CellContext`Deng$$, $CellContext`Deng$143933$$, 0], 
        Hold[$CellContext`Keng$$, $CellContext`Keng$143934$$, 0], 
        Hold[$CellContext`Kbrk$$, $CellContext`Kbrk$143935$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DSolve[{Derivative[2][$CellContext`v][$CellContext`t$$] + 
          2 $CellContext`Deng$$ $CellContext`v[$CellContext`t$$] + \
($CellContext`Keng$$/(2 $CellContext`Mveh$$)) ($CellContext`Keng$$/(
            2 $CellContext`Mveh$$)) $CellContext`v[$CellContext`t$$] == 
         0, $CellContext`v[0] == 0, Derivative[1][$CellContext`v][0] == 0, 
         Derivative[2][$CellContext`v][0] = 
         0}, $CellContext`v, $CellContext`t$$], "Specifications" :> {
        Grid[{{
           Graphics[{{{{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                  "]]}, "Charting`Private`Tag$143837#1"], 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.880722, 0.611041, 0.142051], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                  "]]}, "Charting`Private`Tag$143837#2"], 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.560181, 0.691569, 0.194885], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                  "]]}, "Charting`Private`Tag$143837#3"]}}, {}}, {
            DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
             AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
             GridLines -> {None, None}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
             All, DisplayFunction -> Identity, AspectRatio -> 
             GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
             Identity, Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
               None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0, 18}, {-1.054091218307647, 
               1.0540912740826591`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
           Graphics[{{{{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                  "]]}, "Charting`Private`Tag$143893#1"], 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.880722, 0.611041, 0.142051], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                  "]]}, "Charting`Private`Tag$143893#2"], 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.560181, 0.691569, 0.194885], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1:eJwVWnk8VO8blSQ7FWGQZWxjm0EJyfvIkhZLKklCJVuytdNXEhKylCRJKqVE
Ccn+lojs+77v68xNtKff/f01n/O5d+57nnOe97n33BnZ4z42J9nZ2NjcVrOx
/f9zyU9h/sezJEOetEEZNjYCuURJOUo8OI/KzI0KLq0lkHieqtBsSjgqb8A7
2wQItPRJy6MlJRFl6ibJK0oRaMS6QKQq5Rl6/uq8/i5dAulH/1V38H2B8v2L
qB8MCZRQbWL21TgLbXV4nSxmSiD5hx4lccs5iNd6z7+T+wjULfJjrjylAMXF
JVtfcidQWJ7ExUjOQmRqybV//jSBtPYhDlvfIuTk+DXU8AyBoqPDJReMS1HY
FjaL4P8IpKeS+bwwuwxpBD9t9Akh0GR1w+ZQUYyOWTTZGl4nUNrVyGc3l9+j
1GNRBy7GEei8dYrXmcwPaJIn591YAoEspF9pHXaqQGwyQX/U7xHoV2lLufzn
j2j3ufXcTo8ItP+HWFdJyif0uzDIUiuHQCrVKg8e7atGvzivDdzOIxBbosGJ
65w16NWjCaH2AgJlaTuzbHw/I/EawT1EKYFC2P3f6irUosqNT0zrMYEOt1wL
3NRbi05aq9WHVxCI0ydj7axxPWLLT3S7W02g/u1FDU0/6lGVgr3/wmcC5fHV
3X6b3YD2KHYvydYTKLKv//D9441IWOfF7OZGAjlnMqWvijah7q7nVorNBNK5
xDbpWt+EapOWpb+1kNeX57Z9Bs3IRuzLofQ2AvnzrtcTv9+MrAVhidFBoIFF
imT0cjNqtq39cr+TQOa91H8rVi1Ig1lsMdFFoPwPaqN+mS2ohi14DX8PgaRf
bKka52hFsnO1Gzf0knziDJ8fcmpF/ijuyncSL1/YGVVb1IpqP681LO4j+TlZ
e28XbkNJt7Osj/QTqN7s8L4c7zZUMGlQ0EvirRrHN1M/t6Epq+LTugMEeixy
SjSR2o4G0jzOnyWxwN8zv7iC2tGTL61NMSS+NH55ILC7HSU++nDpOonH68Le
M7U6UM0hk7OOJLbKi3ly7GYHmmLPxhtIXJx8N7x9qgMldMc5ZJDrKYakeezc
0YngQM0ecRLHe7zYW5zSiS5s8YnxIPkK+D7pqVnpRDXvcv6FkvVEn3/g2uXc
hVQyB4cvkvXz/Hf360RFF1Ly995s2k2giGvxwUvy3SjaUuvvDKkfZ2QU/+rr
3ajR+rChG6lvaFxY8rqZbnT3oM/vUlJ/9rtXlGT29CD3Pw66c6Q/wQ8u5Wtk
96AzqW4/vzQRaOXJGaPtgr3olommcUsDgS5nnm7c49eLPFMKKTfqCHTh3bFp
9y19KJqrNiLkE7kfy46cu3C3D5nskFGt/Ej6W3mQPfxnH+p3qPcffE8g75Zd
kk/K+pGB+Dv+B8UEmu8yfvFGegAVT6f7GL0jkOfgdp33VweQcKtZQjnZz65z
mtYDpoOoneu3mXEWqe8X1YG5jEFU7vJgcvdzAh3/oeD5i3sIWTVu8FJNJ9DR
NZRQ0cYhRKHHWl24T6CFNZFcG8SG0doQ9orRRAKpca+1ouwaRlyeisZKtwiU
KbiqX/nlMKoldqduiyDQM8nlZVOfEdSvdX3NbX8CTUj7G1ikkbgqSLfGi5wX
VFbIgZYRFDr5p7/TlewP2ozgCe1RJHYsPzfYnkAPdAZowd9HkYvomDoXkPtH
z973uvIYcjzidp1Hj0CU7V0FMYfHEOfTqbpJTQIlGbcYPygZQ7FX0GF1Kjmf
rKuOFl8ZR+Xnr/gurSZQ2/4d6R9yxpGworlI3HcWWn8Iz9aMjKPKZnk0P8lC
cUeLLnQZTyBbmetClZUsFO2ZHb+0dhLlinVSvl1moWuhd6o04qbQ7hyfuBtD
TOR14eGeb2VTyNYiu/hnHRPZer5oKZubQnxu9gMqhUykYl02sHfnNNL0znrV
HMtEzRITy54r08gwZVyQbsBEm/I2K2Z4zaKb2oNjDjcWENczwyzv5FmUqTaX
RfgtoC9J5lo6NbPo7c4ULXP7BVQZ5GBYRZ1DxcYbdIxVFtCp3aG2Y71zKJhi
eN27eh4VjrSFS+9aQGb3KujV3+bQ4/YBvqnzCyi598qVV31zKLp66tar9AXU
yXaozuH9HHLK/p26nY2JHhif3ip4Yw5xXqK+O/KOiZIaTe+3iM4hlYiir3Xr
yb66JtfzT2UWXZDmlue6+gWl50uiPNo0clVdt3zx7hf0ZobvdxLXNLLdKv5p
JvsL4qrf4Gs1NYU2W9Hc63q/IPaK7Ch6+hRaDNqVFbN5EVX9VPn8UWIKeQ3e
2CwyvYhUFELCL7BPIucHPKZyVkuo1myC/v31GNotwedqIPUd5bqVqPlsHUBm
XLI7VbX/oooz1es0tuYii+UZvnjfVXBLwTXorXQbXgpq8Bm+vAqEPFiuqtfa
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
NMEu1spw2/Ze9D+IjRzM
                  "]]}, "Charting`Private`Tag$143893#3"]}}, {}}, {
            DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
             AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
                Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
             GridLines -> {None, None}, DisplayFunction -> Identity, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
             All, DisplayFunction -> Identity, AspectRatio -> 
             GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
             Identity, Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
               None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0, 18}, {-1.054091218307647, 
               1.0540912740826591`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.02]}}, 
             Ticks -> {Automatic, Automatic}}]}}], {{$CellContext`t$$, 0}, 0, 
         100}, {$CellContext`Vtar$$, 0, 3.7}, {{$CellContext`Vcur$$, 0}, 0, 
         3.7}, {{$CellContext`Mveh$$, 1200}, 1000, 2000, 
         10}, {{$CellContext`Dbrk$$, 10}, 1, 100}, {{$CellContext`Deng$$, 10},
          1, 100}, {{$CellContext`Keng$$, 1}, 0, 
         10}, {{$CellContext`Kbrk$$, 1}, 0, 10}}, 
      "Options" :> {ContentSize -> {1000, 1000}}, "DefaultOptions" :> {}],
     ImageSizeCache->{1526., {567., 574.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7831844339576645`*^9, 3.7831844488508415`*^9}, {
   3.7831845332788706`*^9, 3.7831845472903833`*^9}, {3.7831846477719293`*^9, 
   3.7831846892888207`*^9}, 3.7831853734526434`*^9, 3.7831854439390297`*^9, 
   3.7831855677034492`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"23ab2e3d-6b65-4e97-926d-823a6a19f77a"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,104,
   1144,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855703184175`*^9},
 CellLabel->"",ExpressionUUID->"9fcabcb5-918f-4539-b923-62d90d0a2b94"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,104,
   1145,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855703403597`*^9},
 CellLabel->"",ExpressionUUID->"595a53c8-4657-492a-aaeb-79208f938af7"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,105,
   1171,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185605909258*^9},
 CellLabel->"",ExpressionUUID->"a9694932-711b-4239-a03c-99852e076ccb"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,105,
   1172,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831856059321327`*^9},
 CellLabel->"",ExpressionUUID->"136ac717-b402-4861-ad83-6e383900f307"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,106,
   1174,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831856479407377`*^9},
 CellLabel->"",ExpressionUUID->"cbb11b9c-9ae0-45bd-8d95-b49fb14b9436"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,106,
   1175,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185647962679*^9},
 CellLabel->"",ExpressionUUID->"bd425421-b388-4a91-8641-87d9df1fb003"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,107,
   1177,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831856774907103`*^9},
 CellLabel->"",ExpressionUUID->"4e8ae4a7-4769-4e94-901f-da404d8365b3"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,107,
   1178,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831856775056677`*^9},
 CellLabel->"",ExpressionUUID->"7a9a9436-0c1c-4698-817d-8dd308bb1377"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,108,
   1180,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185726665688*^9},
 CellLabel->"",ExpressionUUID->"adaee77f-c0e0-48ed-924d-e6370d7feaa9"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,108,
   1181,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185726688656*^9},
 CellLabel->"",ExpressionUUID->"11b065c1-82ec-4295-b77f-b10bcb3a4905"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,112,
   1194,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186103058561*^9},
 CellLabel->"",ExpressionUUID->"d87a3523-8a1d-4049-aeeb-0844e44fca79"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,112,
   1195,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186103082531*^9},
 CellLabel->"",ExpressionUUID->"1ab939f4-a8b5-425a-ad22-19a09c426838"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,114,
   1196,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831862088754263`*^9},
 CellLabel->"",ExpressionUUID->"49583675-16df-46b1-a9e9-d97b487320a2"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,114,
   1197,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831862088963485`*^9},
 CellLabel->"",ExpressionUUID->"386a3278-c3ec-431c-9ff5-257676305365"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,117,
   1202,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186258671196*^9},
 CellLabel->"",ExpressionUUID->"a40e0aef-3bcb-43c6-b5f4-25f92db71ff7"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,117,
   1203,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186258698106*^9},
 CellLabel->"",ExpressionUUID->"34bb706f-e8b6-499f-88f7-8ab0ce494ce1"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,119,
   1204,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831862801855807`*^9},
 CellLabel->"",ExpressionUUID->"869692a0-7a13-4efe-843b-7f1d5033d671"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,119,
   1205,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186280208554*^9},
 CellLabel->"",ExpressionUUID->"6c3a29c6-0849-417c-92d3-8d4a8758a7b8"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,121,
   1206,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831862867379208`*^9},
 CellLabel->"",ExpressionUUID->"c7f66ebe-d0f6-4d16-94e7-a4250fccbc46"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,121,
   1207,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831862867618237`*^9},
 CellLabel->"",ExpressionUUID->"c5201c15-f57f-4a12-b25c-5eb6c6ad2b34"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,123,
   1208,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831863384445767`*^9},
 CellLabel->"",ExpressionUUID->"12563e74-cd81-4e95-94c2-a4101540dca7"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,123,
   1209,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831863384665313`*^9},
 CellLabel->"",ExpressionUUID->"73d4c898-bec4-4948-bbc2-c5dc802fa019"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,125,
   1210,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186341775669*^9},
 CellLabel->"",ExpressionUUID->"f171458f-c0b6-4252-a4b2-b01ec12df9c5"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,125,
   1211,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831863417986135`*^9},
 CellLabel->"",ExpressionUUID->"87da5e0a-3ef3-423e-9275-dfe807f5c2fd"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,127,
   1212,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831864296130934`*^9},
 CellLabel->"",ExpressionUUID->"710c0d7a-9905-4b12-b2bd-2c13b0177912"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,127,
   1213,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831864296350365`*^9},
 CellLabel->"",ExpressionUUID->"7dfdf561-af88-45d7-b20f-00ce57a0bc42"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,129,
   1214,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186441800455*^9},
 CellLabel->"",ExpressionUUID->"5cb1fd27-2ddb-49d9-8af4-cbbab4fd6c63"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,129,
   1215,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186441824391*^9},
 CellLabel->"",ExpressionUUID->"163c2df6-7c32-401b-910c-aeb758f29b44"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,131,
   1216,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831864694913683`*^9},
 CellLabel->"",ExpressionUUID->"de0e09fe-01b3-49e5-b914-e3729791720a"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,131,
   1217,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186469512311*^9},
 CellLabel->"",ExpressionUUID->"8978168b-b530-4383-a7d3-291ec0a81e7d"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,133,
   1218,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831864847446156`*^9},
 CellLabel->"",ExpressionUUID->"b62c0764-7797-483a-aa41-c23ced401f73"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,133,
   1219,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831864847664995`*^9},
 CellLabel->"",ExpressionUUID->"dbb7cbbf-576c-4ad2-8203-d820bb12f0fa"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,135,
   1220,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186486779172*^9},
 CellLabel->"",ExpressionUUID->"45fcb9b8-a357-4fda-937b-edc143e66d9c"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,135,
   1221,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831864868010883`*^9},
 CellLabel->"",ExpressionUUID->"6a363611-bb63-4e2d-9b41-ed2f7dedf4f4"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,137,
   1231,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831865211681485`*^9},
 CellLabel->"",ExpressionUUID->"d9d4f119-ffac-480f-8fef-1227ab33f5af"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,137,
   1232,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831865211880517`*^9},
 CellLabel->"",ExpressionUUID->"22ff2546-e477-46c3-9165-5a12ba3b19f1"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,139,
   1242,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831865256366143`*^9},
 CellLabel->"",ExpressionUUID->"7aaab3b8-316a-4fa1-8e6c-78de8ef31673"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,139,
   1243,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186525667941*^9},
 CellLabel->"",ExpressionUUID->"062cc77a-ab71-4c16-99f7-8493e21ce449"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,141,
   1244,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186540229216*^9},
 CellLabel->"",ExpressionUUID->"de188487-ec26-4f50-8063-8fa98866c36b"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,141,
   1245,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831865402521534`*^9},
 CellLabel->"",ExpressionUUID->"04ebcf05-1351-4ac4-9f75-f5d5f014d2ae"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,143,
   1246,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831865651165977`*^9},
 CellLabel->"",ExpressionUUID->"97453823-e7a8-4b96-9d09-1c0cb3c93713"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,143,
   1247,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831865651395617`*^9},
 CellLabel->"",ExpressionUUID->"b9cdd681-c78a-4c4d-a993-175e7d9f66c7"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,145,
   1248,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186578435021*^9},
 CellLabel->"",ExpressionUUID->"88065407-fccb-4170-9484-22a13e09b0c0"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,145,
   1249,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186578455905*^9},
 CellLabel->"",ExpressionUUID->"be3cea7f-94b9-46bf-9aea-dc737e0e0532"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,149,
   1252,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186674396905*^9},
 CellLabel->"",ExpressionUUID->"8f368a2b-3450-40ef-84a1-f26c6742cad6"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,149,
   1253,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831866744177914`*^9},
 CellLabel->"",ExpressionUUID->"81040954-10b6-4daa-a578-9755194e883e"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,151,
   1254,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831866798781843`*^9},
 CellLabel->"",ExpressionUUID->"a71a9915-0260-45b2-8aac-0b2178bc6208"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,151,
   1255,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186679899128*^9},
 CellLabel->"",ExpressionUUID->"bff4543a-6955-4379-8e54-1f4cd4563b72"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,153,
   1256,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186709470043*^9},
 CellLabel->"",ExpressionUUID->"1a28e5f1-f86f-4ae4-8e44-a0d47ebcf017"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,153,
   1257,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186709491952*^9},
 CellLabel->"",ExpressionUUID->"06c0ef73-2fb9-49f2-b134-1333f9e9df9d"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,155,
   1267,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186720476624*^9},
 CellLabel->"",ExpressionUUID->"f122420a-1769-4e61-9b90-a412b3162a44"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,155,
   1268,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78318672049654*^9},
 CellLabel->"",ExpressionUUID->"9d8ab698-f99f-4d92-b647-ec0350170215"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,157,
   1269,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186730729192*^9},
 CellLabel->"",ExpressionUUID->"d17a4366-f5b7-42ed-9c9b-9c7b1ae5b942"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,157,
   1270,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186730752103*^9},
 CellLabel->"",ExpressionUUID->"24885571-6f42-4b77-97b6-693f9235ae93"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,159,
   1271,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186762358506*^9},
 CellLabel->"",ExpressionUUID->"668dfff7-49f9-454e-ac2e-ad6381d13381"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,159,
   1272,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186762379483*^9},
 CellLabel->"",ExpressionUUID->"5e2ed255-a868-41e6-b71e-519c72dd6601"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,161,
   1273,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186771647852*^9},
 CellLabel->"",ExpressionUUID->"845d7a7b-96cf-45c8-97a1-2a9f822e3606"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,161,
   1274,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186771670791*^9},
 CellLabel->"",ExpressionUUID->"6c5bf00e-0fc3-4300-8845-3a2378353523"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,163,
   1275,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186794355098*^9},
 CellLabel->"",ExpressionUUID->"4cf6ed4d-7ada-4fc2-a8d1-da79294c6b21"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,163,
   1276,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186794376075*^9},
 CellLabel->"",ExpressionUUID->"cfff8e43-a312-4bec-9051-20258306923e"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,167,
   1280,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831868397008085`*^9},
 CellLabel->"",ExpressionUUID->"74e060b1-aa88-416f-945f-9ca36f91d06b"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,167,
   1281,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831868397237473`*^9},
 CellLabel->"",ExpressionUUID->"52caae87-7d11-46e0-92e4-3261b86e7d3f"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,169,
   1282,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831868756167173`*^9},
 CellLabel->"",ExpressionUUID->"90d8ae52-cab3-45c1-8368-aa853a25a09b"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,169,
   1283,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186875639653*^9},
 CellLabel->"",ExpressionUUID->"1041ef8e-4d51-4146-bd0b-d21393f4575d"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,171,
   1284,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831869244051237`*^9},
 CellLabel->"",ExpressionUUID->"6727bb20-c36a-45fc-b328-7f331d4ece9c"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,171,
   1285,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783186924426099*^9},
 CellLabel->"",ExpressionUUID->"2e912a63-7022-4834-b4e1-dd750d64f0ec"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,173,
   1286,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831869842929487`*^9},
 CellLabel->"",ExpressionUUID->"a1457816-df9f-4868-ab51-1b613f7283c9"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,173,
   1287,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78318698431186*^9},
 CellLabel->"",ExpressionUUID->"47aeea89-5a44-4cc0-88f0-f61838ae503c"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,175,
   1297,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783187130458994*^9},
 CellLabel->"",ExpressionUUID->"df382075-f04c-4b73-90e3-e8ecba0e4617"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,175,
   1298,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783187130480943*^9},
 CellLabel->"",ExpressionUUID->"307672a9-83e5-4d85-8856-5fb741efd70f"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,177,
   1307,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831871492447424`*^9},
 CellLabel->"",ExpressionUUID->"7e9cae83-50e9-4809-a26f-8453b43bb280"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,177,
   1308,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831871492666636`*^9},
 CellLabel->"",ExpressionUUID->"249ffa06-e03e-4f5d-b87f-b9d377de3258"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,179,
   1309,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78318718503096*^9},
 CellLabel->"",ExpressionUUID->"2ae3e706-84de-4ec1-90df-866a7b698f23"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,179,
   1310,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831871850549297`*^9},
 CellLabel->"",ExpressionUUID->"a3fccf23-9d3a-48fa-8686-8b4c09ad0141"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,181,
   1311,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783187258296041*^9},
 CellLabel->"",ExpressionUUID->"14c1cf8b-9218-449c-bea1-8f8b5ede8953"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,181,
   1312,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783187258316982*^9},
 CellLabel->"",ExpressionUUID->"999536f1-2275-427c-ac22-f64c352dd81b"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,183,
   1313,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831872673019104`*^9},
 CellLabel->"",ExpressionUUID->"4575273a-8de3-4b02-b05d-6ba9030b707f"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,183,
   1314,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831872673228874`*^9},
 CellLabel->"",ExpressionUUID->"80eb7beb-787a-481e-a4ba-0b4d346b51a1"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,185,
   1315,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783187279921147*^9},
 CellLabel->"",ExpressionUUID->"ad410f4d-a016-4697-8ebb-cfbf2c6f7908"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,185,
   1316,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831872799461365`*^9},
 CellLabel->"",ExpressionUUID->"897e8c8d-d89a-4e7b-bdb4-c97b7f39d646"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,187,
   1317,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783187384082447*^9},
 CellLabel->"",ExpressionUUID->"146f4f91-73ea-49e9-9ca6-002c5fa748d2"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,187,
   1318,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783187384105387*^9},
 CellLabel->"",ExpressionUUID->"0fb585c7-2c0e-4366-800f-cddda4c21b0e"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,189,
   1319,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831873942682304`*^9},
 CellLabel->"",ExpressionUUID->"9e953965-1c28-4542-b4dd-16dbea8717d3"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,189,
   1320,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783187394292138*^9},
 CellLabel->"",ExpressionUUID->"82b5df9f-f239-4f31-a2a4-c07ee09c7d66"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,191,
   1321,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831874027833824`*^9},
 CellLabel->"",ExpressionUUID->"c12e5439-cd97-42a9-9581-5177a61446f7"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,191,
   1322,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831874028063507`*^9},
 CellLabel->"",ExpressionUUID->"ab72bf49-3388-49c2-b2c0-cb52af443d62"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,193,
   1323,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783187420431221*^9},
 CellLabel->"",ExpressionUUID->"d4f9f7db-ab6f-46b3-981c-4ded6809514b"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,193,
   1324,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831874204531393`*^9},
 CellLabel->"",ExpressionUUID->"96449c2d-82a4-4afa-b0ce-a10bc6035e3b"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,195,
   1325,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783187443759781*^9},
 CellLabel->"",ExpressionUUID->"1d9b5bf1-09cf-41e8-8ce0-656043593ffe"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,195,
   1326,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831874437806916`*^9},
 CellLabel->"",ExpressionUUID->"9b39e631-19cc-4151-b952-46cd9f117cc5"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,197,
   1327,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831874609667654`*^9},
 CellLabel->"",ExpressionUUID->"6b4bad7a-fda0-446a-aedf-a06eaaa11872"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,197,
   1328,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78318746098965*^9},
 CellLabel->"",ExpressionUUID->"b6fdaaed-ec58-43a5-a2b1-23f0130ce033"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,199,
   1329,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831874705401216`*^9},
 CellLabel->"",ExpressionUUID->"7e142a75-b546-4a06-a019-0e94ba5b9443"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dsvar",
   "\"\\!\\(\\*RowBox[{\\\"0\\\"}]\\) cannot be used as a variable.\"",2,199,
   1330,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831874705620375`*^9},
 CellLabel->"",ExpressionUUID->"547ea126-e7c7-4a6b-8bc8-611369f56505"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", "x", "]"}], "/.", "%"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", "\[Rule]", 
              RowBox[{"1", "/", "13"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", "\[Rule]", 
              RowBox[{"1", "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", "\[Rule]", "4"}], "}"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "18"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{"d", ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "0", ",", "t"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "13"}], "}"}], "}"}]}]}], "]"}]}], "}"}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "1", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Vtar", ",", "0", ",", "3.7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Vcur", ",", "0"}], "}"}], ",", "0", ",", "3.7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Mveh", ",", "1200"}], "}"}], ",", "1000", ",", "2000", ",", 
     "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Dbrk", ",", "10"}], "}"}], ",", "1", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Deng", ",", "10"}], "}"}], ",", "1", ",", "100"}], "}"}], ",", 
   RowBox[{"ContentSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", " ", "1000"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7831784502169642`*^9, 3.7831784502179604`*^9}, {
   3.7831784802825527`*^9, 3.7831785466958065`*^9}, {3.7831786954393425`*^9, 
   3.78317869634692*^9}, {3.783178773836336*^9, 3.783178786952216*^9}, {
   3.7831789308639684`*^9, 3.7831789420630054`*^9}, {3.78317897277717*^9, 
   3.783178981234543*^9}, {3.7831790283464594`*^9, 3.783179059518117*^9}, {
   3.7831790964143705`*^9, 3.783179096550975*^9}, {3.783179143777651*^9, 
   3.7831791643546*^9}, {3.783179218876725*^9, 3.7831792487048855`*^9}, {
   3.7831801487895217`*^9, 3.78318026375393*^9}, {3.7831804548635807`*^9, 
   3.783180491876642*^9}, {3.7831805456427317`*^9, 3.7831806128419447`*^9}, {
   3.783180821812989*^9, 3.783180828603882*^9}, {3.783180961888243*^9, 
   3.783180998461358*^9}, 3.7831811735812674`*^9, 3.783181227851065*^9, {
   3.783181401764258*^9, 3.783181415113539*^9}, {3.7831814664851303`*^9, 
   3.783181466806275*^9}, {3.7831815920319767`*^9, 3.783181648367772*^9}, 
   3.783181687361463*^9, 3.783181744946492*^9, {3.7831818734234676`*^9, 
   3.783182016775295*^9}, {3.7831823315546308`*^9, 3.783182523702213*^9}, {
   3.7831826333883424`*^9, 3.783182730211828*^9}, {3.7831827853807282`*^9, 
   3.783182837213421*^9}, {3.783182869269645*^9, 3.783182906097124*^9}, {
   3.783182953419421*^9, 3.7831829547219296`*^9}, {3.7831831537997327`*^9, 
   3.7831831547152843`*^9}, {3.783183185479072*^9, 3.783183188968773*^9}, {
   3.783183227269264*^9, 3.78318325959481*^9}, {3.783183773969996*^9, 
   3.783183812762245*^9}, {3.7831838881626844`*^9, 3.7831838889435964`*^9}, 
   3.7831839224828224`*^9, {3.7831839693703737`*^9, 3.783183984534839*^9}, {
   3.783184051542613*^9, 3.783184063385888*^9}, 3.783184095558809*^9, 
   3.783184227648486*^9, {3.783184276131524*^9, 3.7831843429497523`*^9}, {
   3.783184577540414*^9, 3.783184578857888*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"f7d0a398-ddd9-46c0-a5a2-f199e6327c1c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Dbrk$$ = 10, $CellContext`Deng$$ = 
    10, $CellContext`Mveh$$ = 1200, $CellContext`t$$ = 
    1, $CellContext`Vcur$$ = 0, $CellContext`Vtar$$ = 0, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 1, 100}, {
      Hold[$CellContext`Vtar$$], 0, 3.7}, {{
       Hold[$CellContext`Vcur$$], 0}, 0, 3.7}, {{
       Hold[$CellContext`Mveh$$], 1200}, 1000, 2000, 10}, {{
       Hold[$CellContext`Dbrk$$], 10}, 1, 100}, {{
       Hold[$CellContext`Deng$$], 10}, 1, 100}}, Typeset`size$$ = {
    275., {30., 37.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$131208$$ = 
    0, $CellContext`Vtar$131209$$ = 0, $CellContext`Vcur$131210$$ = 
    0, $CellContext`Mveh$131211$$ = 0, $CellContext`Dbrk$131212$$ = 
    0, $CellContext`Deng$131213$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Dbrk$$ = 10, $CellContext`Deng$$ = 
        10, $CellContext`Mveh$$ = 1200, $CellContext`t$$ = 
        1, $CellContext`Vcur$$ = 0, $CellContext`Vtar$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$131208$$, 0], 
        Hold[$CellContext`Vtar$$, $CellContext`Vtar$131209$$, 0], 
        Hold[$CellContext`Vcur$$, $CellContext`Vcur$131210$$, 0], 
        Hold[$CellContext`Mveh$$, $CellContext`Mveh$131211$$, 0], 
        Hold[$CellContext`Dbrk$$, $CellContext`Dbrk$131212$$, 0], 
        Hold[$CellContext`Deng$$, $CellContext`Deng$131213$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{
         Plot[
          Evaluate[
           ReplaceAll[
            ReplaceAll[
             $CellContext`y[$CellContext`x], 
             Manipulate[
              Plot[
               Evaluate[
                ReplaceAll[
                 ReplaceAll[
                  $CellContext`y[$CellContext`x], {{$CellContext`y -> 
                    Function[{$CellContext`x}, (1/3) (3 Cos[$CellContext`x] + 
                    Sin[$CellContext`x])]}}], {{$CellContext`a -> 
                   1/13}, {$CellContext`a -> 1/2}, {$CellContext`a -> 
                   4}}]], {$CellContext`x, 0, 18}], {$CellContext`t$$, 1, 
               100}, {$CellContext`Vtar$$, 0, 3.7}, {{$CellContext`Vcur$$, 0},
                0, 3.7}, {{$CellContext`Mveh$$, 1200}, 1000, 2000, 
               10}, {{$CellContext`Dbrk$$, 10}, 1, 
               100}, {{$CellContext`Deng$$, 10}, 1, 100}, 
              ContentSize -> {1000, 1000}]], {{$CellContext`a -> 
              1/13}, {$CellContext`a -> 1/2}, {$CellContext`a -> 
              4}}]], {$CellContext`x, 0, 18}], 
         Plot[$CellContext`d, {$CellContext`d, 0, $CellContext`t$$}, 
          PlotRange -> {{-1, 13}}]}], 
      "Specifications" :> {{$CellContext`t$$, 1, 100}, {$CellContext`Vtar$$, 
         0, 3.7}, {{$CellContext`Vcur$$, 0}, 0, 
         3.7}, {{$CellContext`Mveh$$, 1200}, 1000, 2000, 
         10}, {{$CellContext`Dbrk$$, 10}, 1, 100}, {{$CellContext`Deng$$, 10},
          1, 100}}, "Options" :> {ContentSize -> {1000, 1000}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{32781., {657., 664.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7831843064733477`*^9, 3.783184344289132*^9, 
  3.7831845798063507`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"46df72ad-70ec-42f9-abf7-18e782945499"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
TagBox[StyleBox[DynamicModuleBox[{Dbrk$$1314$$ = 10, Set[Deng$$1314$$, 10], \
Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0], Set[Typeset`show$$, True], Set[Typeset`bookmarkList$$, \
List[]], Set[Typeset`bookmarkMode$$, \\\"Menu\\\"], Typeset`animator$$, \
Set[Typeset`animvar$$, 1], Set[Typeset`name$$, \\\"\\\\\\\"untitled\\\\\\\"\\\
\"], Set[Typeset`specs$$, List[List[Hold[FE`t$$1314], 1, 100], \
List[Hold[FE`Vtar$$1314], 0, 3.7`], List[List[Hold[FE`Vcur$$1314], 0], 0, \
3.7`], List[List[Hold[FE`Mveh$$1314], 1200], 1000, 2000, 10], \
List[List[Hold[FE`Dbrk$$1314], 10], 1, 100], List[List[Hold[FE`Deng$$1314], \
10], 1, 100]]], Set[Typeset`size$$, Automatic], Set[Typeset`update$$, 0], \
Set[Typeset`initDone$$, False], Set[Typeset`skipInitDone$$, True], \
Set[t$$1314$131467$$, 0], Set[Vtar$$1314$131468$$, 0], \
Set[Vcur$$1314$131469$$, 0], Set[Mveh$$1314$131470$$, 0], \
Set[Dbrk$$1314$131471$$, 0], Set[Deng$$1314$131472$$, 0]}, \
DynamicBox[Manipulate`ManipulateBoxes[1, StandardForm, \
RuleDelayed[\\\"Variables\\\", List[Set[Dbrk$$1314$$, 10], Set[Deng$$1314$$, \
10], Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0]]], RuleDelayed[\\\"ControllerVariables\\\", \
List[Hold[t$$1314$$, t$$1314$131467$$, 0], Hold[Vtar$$1314$$, \
Vtar$$1314$131468$$, 0], Hold[Vcur$$1314$$, Vcur$$1314$131469$$, 0], \
Hold[Mveh$$1314$$, Mveh$$1314$131470$$, 0], Hold[Dbrk$$1314$$, \
Dbrk$$1314$131471$$, 0], Hold[Deng$$1314$$, Deng$$1314$131472$$, 0]]], \
RuleDelayed[\\\"OtherVariables\\\", List[Typeset`show$$, \
Typeset`bookmarkList$$, Typeset`bookmarkMode$$, Typeset`animator$$, \
Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, Typeset`size$$, \
Typeset`update$$, Typeset`initDone$$, Typeset`skipInitDone$$]], \
RuleDelayed[\\\"Body\\\", Plot[Evaluate[ReplaceAll[ReplaceAll[y[x], \
List[List[Skeleton[1]]]], List[List[Rule[Skeleton[2]]], \
List[Rule[Skeleton[2]]], List[Rule[Skeleton[2]]]]]], List[x, 0, 18]]], \
RuleDelayed[\\\"Specifications\\\", List[List[t$$1314$$, 1, 100], \
List[Vtar$$1314$$, 0, 3.7`], List[List[Vcur$$1314$$, 0], 0, 3.7`], \
List[List[Mveh$$1314$$, 1200], 1000, 2000, 10], List[List[Dbrk$$1314$$, 10], \
1, 100], List[List[Deng$$1314$$, 10], 1, 100]]], RuleDelayed[\\\"Options\\\", \
List[Rule[ContentSize, List[1000, 1000]]]], \
RuleDelayed[\\\"DefaultOptions\\\", List[]]], Rule[SingleEvaluation, True]], \
RuleDelayed[DynamicModuleValues, List[]], RuleDelayed[Deinitialization, \
None], RuleDelayed[UntrackedVariables, List[Typeset`size$$]], \
Rule[SynchronousInitialization, True], RuleDelayed[UnsavedVariables, \
List[Typeset`initDone$$]], RuleDelayed[UndoTrackedVariables, \
List[Typeset`show$$, Typeset`bookmarkMode$$]]], \\\"Manipulate\\\", \
Rule[Deployed, True], Rule[StripOnInput, False]], \
Manipulate`InterpretManipulate[1]], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,92,945,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845801893277`*^9},
 CellLabel->"",ExpressionUUID->"645da3d9-effe-4e8d-bb57-bf9282e8b3cc"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
TagBox[StyleBox[DynamicModuleBox[{Dbrk$$1314$$ = 10, Set[Deng$$1314$$, 10], \
Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0], Set[Typeset`show$$, True], Set[Typeset`bookmarkList$$, \
List[]], Set[Typeset`bookmarkMode$$, \\\"Menu\\\"], Typeset`animator$$, \
Set[Typeset`animvar$$, 1], Set[Typeset`name$$, \\\"\\\\\\\"untitled\\\\\\\"\\\
\"], Set[Typeset`specs$$, List[List[Hold[FE`t$$1314], 1, 100], \
List[Hold[FE`Vtar$$1314], 0, 3.7`], List[List[Hold[FE`Vcur$$1314], 0], 0, \
3.7`], List[List[Hold[FE`Mveh$$1314], 1200], 1000, 2000, 10], \
List[List[Hold[FE`Dbrk$$1314], 10], 1, 100], List[List[Hold[FE`Deng$$1314], \
10], 1, 100]]], Set[Typeset`size$$, Automatic], Set[Typeset`update$$, 0], \
Set[Typeset`initDone$$, False], Set[Typeset`skipInitDone$$, True], \
Set[t$$1314$131520$$, 0], Set[Vtar$$1314$131521$$, 0], \
Set[Vcur$$1314$131522$$, 0], Set[Mveh$$1314$131523$$, 0], \
Set[Dbrk$$1314$131524$$, 0], Set[Deng$$1314$131525$$, 0]}, \
DynamicBox[Manipulate`ManipulateBoxes[1, StandardForm, \
RuleDelayed[\\\"Variables\\\", List[Set[Dbrk$$1314$$, 10], Set[Deng$$1314$$, \
10], Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0]]], RuleDelayed[\\\"ControllerVariables\\\", \
List[Hold[t$$1314$$, t$$1314$131520$$, 0], Hold[Vtar$$1314$$, \
Vtar$$1314$131521$$, 0], Hold[Vcur$$1314$$, Vcur$$1314$131522$$, 0], \
Hold[Mveh$$1314$$, Mveh$$1314$131523$$, 0], Hold[Dbrk$$1314$$, \
Dbrk$$1314$131524$$, 0], Hold[Deng$$1314$$, Deng$$1314$131525$$, 0]]], \
RuleDelayed[\\\"OtherVariables\\\", List[Typeset`show$$, \
Typeset`bookmarkList$$, Typeset`bookmarkMode$$, Typeset`animator$$, \
Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, Typeset`size$$, \
Typeset`update$$, Typeset`initDone$$, Typeset`skipInitDone$$]], \
RuleDelayed[\\\"Body\\\", Plot[Evaluate[ReplaceAll[ReplaceAll[y[x], \
List[List[Skeleton[1]]]], List[List[Rule[Skeleton[2]]], \
List[Rule[Skeleton[2]]], List[Rule[Skeleton[2]]]]]], List[x, 0, 18]]], \
RuleDelayed[\\\"Specifications\\\", List[List[t$$1314$$, 1, 100], \
List[Vtar$$1314$$, 0, 3.7`], List[List[Vcur$$1314$$, 0], 0, 3.7`], \
List[List[Mveh$$1314$$, 1200], 1000, 2000, 10], List[List[Dbrk$$1314$$, 10], \
1, 100], List[List[Deng$$1314$$, 10], 1, 100]]], RuleDelayed[\\\"Options\\\", \
List[Rule[ContentSize, List[1000, 1000]]]], \
RuleDelayed[\\\"DefaultOptions\\\", List[]]], Rule[SingleEvaluation, True]], \
RuleDelayed[DynamicModuleValues, List[]], RuleDelayed[Deinitialization, \
None], RuleDelayed[UntrackedVariables, List[Typeset`size$$]], \
Rule[SynchronousInitialization, True], RuleDelayed[UnsavedVariables, \
List[Typeset`initDone$$]], RuleDelayed[UndoTrackedVariables, \
List[Typeset`show$$, Typeset`bookmarkMode$$]]], \\\"Manipulate\\\", \
Rule[Deployed, True], Rule[StripOnInput, False]], \
Manipulate`InterpretManipulate[1]], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,92,946,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184580797698*^9},
 CellLabel->"",ExpressionUUID->"6d46c60c-c29c-402c-a843-e78859634712"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
TagBox[StyleBox[DynamicModuleBox[{Dbrk$$1314$$ = 10, Set[Deng$$1314$$, 10], \
Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0], Set[Typeset`show$$, True], Set[Typeset`bookmarkList$$, \
List[]], Set[Typeset`bookmarkMode$$, \\\"Menu\\\"], Typeset`animator$$, \
Set[Typeset`animvar$$, 1], Set[Typeset`name$$, \\\"\\\\\\\"untitled\\\\\\\"\\\
\"], Set[Typeset`specs$$, List[List[Hold[FE`t$$1314], 1, 100], \
List[Hold[FE`Vtar$$1314], 0, 3.7`], List[List[Hold[FE`Vcur$$1314], 0], 0, \
3.7`], List[List[Hold[FE`Mveh$$1314], 1200], 1000, 2000, 10], \
List[List[Hold[FE`Dbrk$$1314], 10], 1, 100], List[List[Hold[FE`Deng$$1314], \
10], 1, 100]]], Set[Typeset`size$$, Automatic], Set[Typeset`update$$, 0], \
Set[Typeset`initDone$$, False], Set[Typeset`skipInitDone$$, True], \
Set[t$$1314$131658$$, 0], Set[Vtar$$1314$131659$$, 0], \
Set[Vcur$$1314$131660$$, 0], Set[Mveh$$1314$131661$$, 0], \
Set[Dbrk$$1314$131662$$, 0], Set[Deng$$1314$131663$$, 0]}, \
DynamicBox[Manipulate`ManipulateBoxes[1, StandardForm, \
RuleDelayed[\\\"Variables\\\", List[Set[Dbrk$$1314$$, 10], Set[Deng$$1314$$, \
10], Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0]]], RuleDelayed[\\\"ControllerVariables\\\", \
List[Hold[t$$1314$$, t$$1314$131658$$, 0], Hold[Vtar$$1314$$, \
Vtar$$1314$131659$$, 0], Hold[Vcur$$1314$$, Vcur$$1314$131660$$, 0], \
Hold[Mveh$$1314$$, Mveh$$1314$131661$$, 0], Hold[Dbrk$$1314$$, \
Dbrk$$1314$131662$$, 0], Hold[Deng$$1314$$, Deng$$1314$131663$$, 0]]], \
RuleDelayed[\\\"OtherVariables\\\", List[Typeset`show$$, \
Typeset`bookmarkList$$, Typeset`bookmarkMode$$, Typeset`animator$$, \
Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, Typeset`size$$, \
Typeset`update$$, Typeset`initDone$$, Typeset`skipInitDone$$]], \
RuleDelayed[\\\"Body\\\", Plot[Evaluate[ReplaceAll[ReplaceAll[y[x], \
List[List[Skeleton[1]]]], List[List[Rule[Skeleton[2]]], \
List[Rule[Skeleton[2]]], List[Rule[Skeleton[2]]]]]], List[x, 0, 18]]], \
RuleDelayed[\\\"Specifications\\\", List[List[t$$1314$$, 1, 100], \
List[Vtar$$1314$$, 0, 3.7`], List[List[Vcur$$1314$$, 0], 0, 3.7`], \
List[List[Mveh$$1314$$, 1200], 1000, 2000, 10], List[List[Dbrk$$1314$$, 10], \
1, 100], List[List[Deng$$1314$$, 10], 1, 100]]], RuleDelayed[\\\"Options\\\", \
List[Rule[ContentSize, List[1000, 1000]]]], \
RuleDelayed[\\\"DefaultOptions\\\", List[]]], Rule[SingleEvaluation, True]], \
RuleDelayed[DynamicModuleValues, List[]], RuleDelayed[Deinitialization, \
None], RuleDelayed[UntrackedVariables, List[Typeset`size$$]], \
Rule[SynchronousInitialization, True], RuleDelayed[UnsavedVariables, \
List[Typeset`initDone$$]], RuleDelayed[UndoTrackedVariables, \
List[Typeset`show$$, Typeset`bookmarkMode$$]]], \\\"Manipulate\\\", \
Rule[Deployed, True], Rule[StripOnInput, False]], \
Manipulate`InterpretManipulate[1]], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,92,947,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845814848986`*^9},
 CellLabel->"",ExpressionUUID->"c8f8bcbe-c6b9-4710-80e0-2c880d93caf5"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,92,952,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184582190007*^9},
 CellLabel->"",ExpressionUUID->"0a066539-c52f-42a0-9ff0-43004be9df28"],

Cell[BoxData[
 TemplateBox[{
  "Manipulate","vsform",
   "\"Manipulate argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"100\\\"}], \\\"}\\\"}]\\) does not have \
the correct form for a variable specification.\"",2,92,969,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845839772463`*^9},
 CellLabel->"",ExpressionUUID->"34bf80de-68fe-4148-8726-5e366e2fe8e7"],

Cell[BoxData[
 TemplateBox[{
  "Manipulate","vsform",
   "\"Manipulate argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3.7`\\\"}], \\\"}\\\"}]\\) does not have \
the correct form for a variable specification.\"",2,92,970,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184583989214*^9},
 CellLabel->"",ExpressionUUID->"28a602c7-d395-4560-ba87-d339481b8c7d"],

Cell[BoxData[
 TemplateBox[{
  "Manipulate","vsform",
   "\"Manipulate argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"3.7`\\\"}], \\\"}\\\"}]\\) does not have the \
correct form for a variable specification.\"",2,92,971,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584009107*^9},
 CellLabel->"",ExpressionUUID->"ff8dd94e-1d6f-4eb6-90e6-56eb137749fd"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Manipulate\\\", \
\\\"::\\\", \\\"vsform\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,92,980,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584029091*^9},
 CellLabel->"",ExpressionUUID->"6cd4001b-e3a0-46f1-acec-85b274e5dc4b"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   92,997,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845843871346`*^9},
 CellLabel->"",ExpressionUUID->"92c5a702-a0fe-47b0-bac4-f81fba2191e5"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,998,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845844130635`*^9},
 CellLabel->"",ExpressionUUID->"81c213b7-a35a-4998-b474-aaa27817767f"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,999,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584435964*^9},
 CellLabel->"",ExpressionUUID->"3284bb01-7b93-49df-bccf-0a4c5e62d6b3"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1000,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845844569073`*^9},
 CellLabel->"",ExpressionUUID->"3fb8debb-b62d-4a5e-99cb-2669af4fdfe9"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,92,1001,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584478887*^9},
 CellLabel->"",ExpressionUUID->"1a908490-f31a-43d0-8855-3b2683280756"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1002,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845844998264`*^9},
 CellLabel->"",ExpressionUUID->"1d262ebd-b336-4d58-bb87-210ad06f6c1b"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1003,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845845207376`*^9},
 CellLabel->"",ExpressionUUID->"dfacece0-4667-4d79-9241-2fd5ecaa379f"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,92,1004,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845845427227`*^9},
 CellLabel->"",ExpressionUUID->"bdddf16b-2250-4549-ad65-843487ae4725"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   92,1005,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845846414156`*^9},
 CellLabel->"",ExpressionUUID->"44757dc7-5bd3-4971-8393-31ad46d05793"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1006,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584649394*^9},
 CellLabel->"",ExpressionUUID->"6070d5f4-54ff-463e-81bb-0b2e2aad4942"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1007,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584675357*^9},
 CellLabel->"",ExpressionUUID->"ca26ab97-12ca-43a9-8aa5-c3c62e2753cf"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1008,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584696306*^9},
 CellLabel->"",ExpressionUUID->"5c7b9cbc-003a-4087-ad89-3229439e8cee"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,92,1009,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845847172623`*^9},
 CellLabel->"",ExpressionUUID->"400d44fa-9dc2-4302-9e0c-5cd1ba5040f9"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1010,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845847381897`*^9},
 CellLabel->"",ExpressionUUID->"ac1b3c06-9943-4411-928f-fdb50d7d466a"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1011,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845847591248`*^9},
 CellLabel->"",ExpressionUUID->"9391e1ee-a0a6-4aa6-ac47-76b85517aa84"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,92,1012,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584782073*^9},
 CellLabel->"",ExpressionUUID->"7d710870-32fd-44c3-870d-2b24cfd0ad19"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   92,1013,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845849007196`*^9},
 CellLabel->"",ExpressionUUID->"ac08dc27-f6e5-4f9d-a259-6b7f1bb20689"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1014,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584909731*^9},
 CellLabel->"",ExpressionUUID->"ad656b94-8020-483b-8f57-ea12b2334fef"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1015,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584936657*^9},
 CellLabel->"",ExpressionUUID->"833df2f7-e3e7-461b-b776-c58c3b36a84b"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1016,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184584959563*^9},
 CellLabel->"",ExpressionUUID->"51f6f943-b5cd-4ae0-8e6b-27720201f476"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,92,1017,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845849805403`*^9},
 CellLabel->"",ExpressionUUID->"ecbfdf75-0c85-41a2-ad74-a70d67ff30a7"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1018,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845850014844`*^9},
 CellLabel->"",ExpressionUUID->"10e5f0d2-4415-4a73-bb69-42049d8f0d9c"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1019,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585023426*^9},
 CellLabel->"",ExpressionUUID->"e4ccf893-ea77-4184-b1ff-11d7588005de"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,92,1020,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585044338*^9},
 CellLabel->"",ExpressionUUID->"d91b2d2a-8161-41b8-813c-db697786db41"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
TagBox[StyleBox[DynamicModuleBox[{Dbrk$$1314$$ = 10, Set[Deng$$1314$$, 10], \
Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0], Set[Typeset`show$$, True], Set[Typeset`bookmarkList$$, \
List[]], Set[Typeset`bookmarkMode$$, \\\"Menu\\\"], Typeset`animator$$, \
Set[Typeset`animvar$$, 1], Set[Typeset`name$$, \\\"\\\\\\\"untitled\\\\\\\"\\\
\"], Set[Typeset`specs$$, List[List[Hold[FE`t$$1314], 1, 100], \
List[Hold[FE`Vtar$$1314], 0, 3.7`], List[List[Hold[FE`Vcur$$1314], 0], 0, \
3.7`], List[List[Hold[FE`Mveh$$1314], 1200], 1000, 2000, 10], \
List[List[Hold[FE`Dbrk$$1314], 10], 1, 100], List[List[Hold[FE`Deng$$1314], \
10], 1, 100]]], Set[Typeset`size$$, Automatic], Set[Typeset`update$$, 0], \
Set[Typeset`initDone$$, False], Set[Typeset`skipInitDone$$, True], \
Set[t$$1314$142748$$, 0], Set[Vtar$$1314$142749$$, 0], \
Set[Vcur$$1314$142750$$, 0], Set[Mveh$$1314$142751$$, 0], \
Set[Dbrk$$1314$142752$$, 0], Set[Deng$$1314$142753$$, 0]}, \
DynamicBox[Manipulate`ManipulateBoxes[1, StandardForm, \
RuleDelayed[\\\"Variables\\\", List[Set[Dbrk$$1314$$, 10], Set[Deng$$1314$$, \
10], Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0]]], RuleDelayed[\\\"ControllerVariables\\\", \
List[Hold[t$$1314$$, t$$1314$142748$$, 0], Hold[Vtar$$1314$$, \
Vtar$$1314$142749$$, 0], Hold[Vcur$$1314$$, Vcur$$1314$142750$$, 0], \
Hold[Mveh$$1314$$, Mveh$$1314$142751$$, 0], Hold[Dbrk$$1314$$, \
Dbrk$$1314$142752$$, 0], Hold[Deng$$1314$$, Deng$$1314$142753$$, 0]]], \
RuleDelayed[\\\"OtherVariables\\\", List[Typeset`show$$, \
Typeset`bookmarkList$$, Typeset`bookmarkMode$$, Typeset`animator$$, \
Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, Typeset`size$$, \
Typeset`update$$, Typeset`initDone$$, Typeset`skipInitDone$$]], \
RuleDelayed[\\\"Body\\\", Plot[Evaluate[ReplaceAll[ReplaceAll[y[x], \
List[List[Skeleton[1]]]], List[List[Rule[Skeleton[2]]], \
List[Rule[Skeleton[2]]], List[Rule[Skeleton[2]]]]]], List[x, 0, 18]]], \
RuleDelayed[\\\"Specifications\\\", List[List[t$$1314$$, 1, 100], \
List[Vtar$$1314$$, 0, 3.7`], List[List[Vcur$$1314$$, 0], 0, 3.7`], \
List[List[Mveh$$1314$$, 1200], 1000, 2000, 10], List[List[Dbrk$$1314$$, 10], \
1, 100], List[List[Deng$$1314$$, 10], 1, 100]]], RuleDelayed[\\\"Options\\\", \
List[Rule[ContentSize, List[1000, 1000]]]], \
RuleDelayed[\\\"DefaultOptions\\\", List[]]], Rule[SingleEvaluation, True]], \
RuleDelayed[DynamicModuleValues, List[]], RuleDelayed[Deinitialization, \
None], RuleDelayed[UntrackedVariables, List[Typeset`size$$]], \
Rule[SynchronousInitialization, True], RuleDelayed[UnsavedVariables, \
List[Typeset`initDone$$]], RuleDelayed[UndoTrackedVariables, \
List[Typeset`show$$, Typeset`bookmarkMode$$]]], \\\"Manipulate\\\", \
Rule[Deployed, True], Rule[StripOnInput, False]], \
Manipulate`InterpretManipulate[1]], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,102,1048,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854444197435`*^9},
 CellLabel->"",ExpressionUUID->"73c8bb36-6f3d-4469-a42d-1be2e867a984"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
TagBox[StyleBox[DynamicModuleBox[{Dbrk$$1314$$ = 10, Set[Deng$$1314$$, 10], \
Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0], Set[Typeset`show$$, True], Set[Typeset`bookmarkList$$, \
List[]], Set[Typeset`bookmarkMode$$, \\\"Menu\\\"], Typeset`animator$$, \
Set[Typeset`animvar$$, 1], Set[Typeset`name$$, \\\"\\\\\\\"untitled\\\\\\\"\\\
\"], Set[Typeset`specs$$, List[List[Hold[FE`t$$1314], 1, 100], \
List[Hold[FE`Vtar$$1314], 0, 3.7`], List[List[Hold[FE`Vcur$$1314], 0], 0, \
3.7`], List[List[Hold[FE`Mveh$$1314], 1200], 1000, 2000, 10], \
List[List[Hold[FE`Dbrk$$1314], 10], 1, 100], List[List[Hold[FE`Deng$$1314], \
10], 1, 100]]], Set[Typeset`size$$, Automatic], Set[Typeset`update$$, 0], \
Set[Typeset`initDone$$, False], Set[Typeset`skipInitDone$$, True], \
Set[t$$1314$142801$$, 0], Set[Vtar$$1314$142802$$, 0], \
Set[Vcur$$1314$142803$$, 0], Set[Mveh$$1314$142804$$, 0], \
Set[Dbrk$$1314$142805$$, 0], Set[Deng$$1314$142806$$, 0]}, \
DynamicBox[Manipulate`ManipulateBoxes[1, StandardForm, \
RuleDelayed[\\\"Variables\\\", List[Set[Dbrk$$1314$$, 10], Set[Deng$$1314$$, \
10], Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0]]], RuleDelayed[\\\"ControllerVariables\\\", \
List[Hold[t$$1314$$, t$$1314$142801$$, 0], Hold[Vtar$$1314$$, \
Vtar$$1314$142802$$, 0], Hold[Vcur$$1314$$, Vcur$$1314$142803$$, 0], \
Hold[Mveh$$1314$$, Mveh$$1314$142804$$, 0], Hold[Dbrk$$1314$$, \
Dbrk$$1314$142805$$, 0], Hold[Deng$$1314$$, Deng$$1314$142806$$, 0]]], \
RuleDelayed[\\\"OtherVariables\\\", List[Typeset`show$$, \
Typeset`bookmarkList$$, Typeset`bookmarkMode$$, Typeset`animator$$, \
Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, Typeset`size$$, \
Typeset`update$$, Typeset`initDone$$, Typeset`skipInitDone$$]], \
RuleDelayed[\\\"Body\\\", Plot[Evaluate[ReplaceAll[ReplaceAll[y[x], \
List[List[Skeleton[1]]]], List[List[Rule[Skeleton[2]]], \
List[Rule[Skeleton[2]]], List[Rule[Skeleton[2]]]]]], List[x, 0, 18]]], \
RuleDelayed[\\\"Specifications\\\", List[List[t$$1314$$, 1, 100], \
List[Vtar$$1314$$, 0, 3.7`], List[List[Vcur$$1314$$, 0], 0, 3.7`], \
List[List[Mveh$$1314$$, 1200], 1000, 2000, 10], List[List[Dbrk$$1314$$, 10], \
1, 100], List[List[Deng$$1314$$, 10], 1, 100]]], RuleDelayed[\\\"Options\\\", \
List[Rule[ContentSize, List[1000, 1000]]]], \
RuleDelayed[\\\"DefaultOptions\\\", List[]]], Rule[SingleEvaluation, True]], \
RuleDelayed[DynamicModuleValues, List[]], RuleDelayed[Deinitialization, \
None], RuleDelayed[UntrackedVariables, List[Typeset`size$$]], \
Rule[SynchronousInitialization, True], RuleDelayed[UnsavedVariables, \
List[Typeset`initDone$$]], RuleDelayed[UndoTrackedVariables, \
List[Typeset`show$$, Typeset`bookmarkMode$$]]], \\\"Manipulate\\\", \
Rule[Deployed, True], Rule[StripOnInput, False]], \
Manipulate`InterpretManipulate[1]], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,102,1049,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185444928383*^9},
 CellLabel->"",ExpressionUUID->"d21b56be-557a-4726-8042-9c9e0a5a48d1"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
TagBox[StyleBox[DynamicModuleBox[{Dbrk$$1314$$ = 10, Set[Deng$$1314$$, 10], \
Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0], Set[Typeset`show$$, True], Set[Typeset`bookmarkList$$, \
List[]], Set[Typeset`bookmarkMode$$, \\\"Menu\\\"], Typeset`animator$$, \
Set[Typeset`animvar$$, 1], Set[Typeset`name$$, \\\"\\\\\\\"untitled\\\\\\\"\\\
\"], Set[Typeset`specs$$, List[List[Hold[FE`t$$1314], 1, 100], \
List[Hold[FE`Vtar$$1314], 0, 3.7`], List[List[Hold[FE`Vcur$$1314], 0], 0, \
3.7`], List[List[Hold[FE`Mveh$$1314], 1200], 1000, 2000, 10], \
List[List[Hold[FE`Dbrk$$1314], 10], 1, 100], List[List[Hold[FE`Deng$$1314], \
10], 1, 100]]], Set[Typeset`size$$, Automatic], Set[Typeset`update$$, 0], \
Set[Typeset`initDone$$, False], Set[Typeset`skipInitDone$$, True], \
Set[t$$1314$142945$$, 0], Set[Vtar$$1314$142946$$, 0], \
Set[Vcur$$1314$142947$$, 0], Set[Mveh$$1314$142948$$, 0], \
Set[Dbrk$$1314$142949$$, 0], Set[Deng$$1314$142950$$, 0]}, \
DynamicBox[Manipulate`ManipulateBoxes[1, StandardForm, \
RuleDelayed[\\\"Variables\\\", List[Set[Dbrk$$1314$$, 10], Set[Deng$$1314$$, \
10], Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0]]], RuleDelayed[\\\"ControllerVariables\\\", \
List[Hold[t$$1314$$, t$$1314$142945$$, 0], Hold[Vtar$$1314$$, \
Vtar$$1314$142946$$, 0], Hold[Vcur$$1314$$, Vcur$$1314$142947$$, 0], \
Hold[Mveh$$1314$$, Mveh$$1314$142948$$, 0], Hold[Dbrk$$1314$$, \
Dbrk$$1314$142949$$, 0], Hold[Deng$$1314$$, Deng$$1314$142950$$, 0]]], \
RuleDelayed[\\\"OtherVariables\\\", List[Typeset`show$$, \
Typeset`bookmarkList$$, Typeset`bookmarkMode$$, Typeset`animator$$, \
Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, Typeset`size$$, \
Typeset`update$$, Typeset`initDone$$, Typeset`skipInitDone$$]], \
RuleDelayed[\\\"Body\\\", Plot[Evaluate[ReplaceAll[ReplaceAll[y[x], \
List[List[Skeleton[1]]]], List[List[Rule[Skeleton[2]]], \
List[Rule[Skeleton[2]]], List[Rule[Skeleton[2]]]]]], List[x, 0, 18]]], \
RuleDelayed[\\\"Specifications\\\", List[List[t$$1314$$, 1, 100], \
List[Vtar$$1314$$, 0, 3.7`], List[List[Vcur$$1314$$, 0], 0, 3.7`], \
List[List[Mveh$$1314$$, 1200], 1000, 2000, 10], List[List[Dbrk$$1314$$, 10], \
1, 100], List[List[Deng$$1314$$, 10], 1, 100]]], RuleDelayed[\\\"Options\\\", \
List[Rule[ContentSize, List[1000, 1000]]]], \
RuleDelayed[\\\"DefaultOptions\\\", List[]]], Rule[SingleEvaluation, True]], \
RuleDelayed[DynamicModuleValues, List[]], RuleDelayed[Deinitialization, \
None], RuleDelayed[UntrackedVariables, List[Typeset`size$$]], \
Rule[SynchronousInitialization, True], RuleDelayed[UnsavedVariables, \
List[Typeset`initDone$$]], RuleDelayed[UndoTrackedVariables, \
List[Typeset`show$$, Typeset`bookmarkMode$$]]], \\\"Manipulate\\\", \
Rule[Deployed, True], Rule[StripOnInput, False]], \
Manipulate`InterpretManipulate[1]], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,102,1057,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854456052017`*^9},
 CellLabel->"",ExpressionUUID->"3b2f628b-b9d9-495b-9980-53d6e16fcdb0"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,102,1062,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185446464964*^9},
 CellLabel->"",ExpressionUUID->"157e4eec-205f-4111-9f5c-158da494b4cb"],

Cell[BoxData[
 TemplateBox[{
  "Manipulate","vsform",
   "\"Manipulate argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"100\\\"}], \\\"}\\\"}]\\) does not have \
the correct form for a variable specification.\"",2,102,1079,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854466135674`*^9},
 CellLabel->"",ExpressionUUID->"1e058f38-1778-4071-af79-7a1befa11095"],

Cell[BoxData[
 TemplateBox[{
  "Manipulate","vsform",
   "\"Manipulate argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3.7`\\\"}], \\\"}\\\"}]\\) does not have \
the correct form for a variable specification.\"",2,102,1080,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185446667465*^9},
 CellLabel->"",ExpressionUUID->"dc19df31-b44b-4555-a15d-261d736eec5e"],

Cell[BoxData[
 TemplateBox[{
  "Manipulate","vsform",
   "\"Manipulate argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"3.7`\\\"}], \\\"}\\\"}]\\) does not have the \
correct form for a variable specification.\"",2,102,1081,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854466764336`*^9},
 CellLabel->"",ExpressionUUID->"9871b988-4369-4b5a-9b77-06c1b610c92f"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Manipulate\\\", \
\\\"::\\\", \\\"vsform\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,102,1082,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185446684377*^9},
 CellLabel->"",ExpressionUUID->"09bfdc44-7e9b-4414-8e8a-b12d8f7b4806"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   102,1083,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185447064396*^9},
 CellLabel->"",ExpressionUUID->"2c517bb9-94bf-4b91-b160-09256a5cd5cc"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,102,1084,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78318544707536*^9},
 CellLabel->"",ExpressionUUID->"7b545c05-e684-4cc3-b6a4-571a136518d6"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,102,1085,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185447099268*^9},
 CellLabel->"",ExpressionUUID->"a86b4bb7-5ad4-4833-9cbf-2142a867a709"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,102,1086,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854471202116`*^9},
 CellLabel->"",ExpressionUUID->"e4cfaead-6e0e-4a51-8350-ed300c243b9d"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,102,1087,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78318544714216*^9},
 CellLabel->"",ExpressionUUID->"ccc6486b-9f45-4a70-be7a-b85fbbf7e27d"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,102,1088,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185447162132*^9},
 CellLabel->"",ExpressionUUID->"71c554f8-1505-4dd6-bf84-39ce8805596d"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,102,1089,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854471830873`*^9},
 CellLabel->"",ExpressionUUID->"cd12d197-77f3-471b-8a8b-8dd7be19a889"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,102,1090,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185447207014*^9},
 CellLabel->"",ExpressionUUID->"1f2501f5-569d-4b7c-a792-6825c316242a"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   102,1091,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854473924828`*^9},
 CellLabel->"",ExpressionUUID->"3f286ea1-c5d4-4c8d-a505-9978663c8f62"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,102,1092,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854474194117`*^9},
 CellLabel->"",ExpressionUUID->"091e675e-5c94-4081-9cd0-a0e6ff6ffe44"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,102,1093,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854474393578`*^9},
 CellLabel->"",ExpressionUUID->"94a86100-4160-4d92-8452-6374275779f2"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,102,1094,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854474613333`*^9},
 CellLabel->"",ExpressionUUID->"d944cddb-ac11-40e9-924f-1578e4162745"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,102,1095,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185447482255*^9},
 CellLabel->"",ExpressionUUID->"8681f0c8-b3b5-4aa3-8dc6-4a89f13e6b3b"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,102,1096,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854475041857`*^9},
 CellLabel->"",ExpressionUUID->"8049e71c-6fc1-4bda-8062-25b6d9a1cbff"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,102,1097,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78318544752514*^9},
 CellLabel->"",ExpressionUUID->"ec2fb689-39c3-4b96-be50-9e8dcd2e9fb6"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,102,1098,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854475460854`*^9},
 CellLabel->"",ExpressionUUID->"afbb350f-e384-42db-ad94-56f14bf57be8"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   102,1099,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185447706644*^9},
 CellLabel->"",ExpressionUUID->"e16aabc6-726b-4bc9-b3c0-ddb41897991b"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,102,1100,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854477156515`*^9},
 CellLabel->"",ExpressionUUID->"b8af97f3-c375-4b89-b2af-42c8f94cfdad"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,102,1101,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854477415504`*^9},
 CellLabel->"",ExpressionUUID->"c25d3c92-62ee-452c-afb2-1803494dbaa5"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,102,1102,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854477635307`*^9},
 CellLabel->"",ExpressionUUID->"abb15978-ea87-4616-92e6-a14596b52b01"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,102,1103,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854477844725`*^9},
 CellLabel->"",ExpressionUUID->"dc9bf369-dcae-4efb-9c01-8ab92f0941d9"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,102,1104,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854478064137`*^9},
 CellLabel->"",ExpressionUUID->"7025eaf3-330c-4e11-b87a-4ca792e99200"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,102,1105,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854478273215`*^9},
 CellLabel->"",ExpressionUUID->"89f90758-ca0f-417f-8e9d-b941490b2c53"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,102,1106,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831854478482637`*^9},
 CellLabel->"",ExpressionUUID->"49e4d6c2-a188-4f47-b4cc-0bad19c86259"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
TagBox[StyleBox[DynamicModuleBox[{Dbrk$$1314$$ = 10, Set[Deng$$1314$$, 10], \
Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0], Set[Typeset`show$$, True], Set[Typeset`bookmarkList$$, \
List[]], Set[Typeset`bookmarkMode$$, \\\"Menu\\\"], Typeset`animator$$, \
Set[Typeset`animvar$$, 1], Set[Typeset`name$$, \\\"\\\\\\\"untitled\\\\\\\"\\\
\"], Set[Typeset`specs$$, List[List[Hold[FE`t$$1314], 1, 100], \
List[Hold[FE`Vtar$$1314], 0, 3.7`], List[List[Hold[FE`Vcur$$1314], 0], 0, \
3.7`], List[List[Hold[FE`Mveh$$1314], 1200], 1000, 2000, 10], \
List[List[Hold[FE`Dbrk$$1314], 10], 1, 100], List[List[Hold[FE`Deng$$1314], \
10], 1, 100]]], Set[Typeset`size$$, Automatic], Set[Typeset`update$$, 0], \
Set[Typeset`initDone$$, False], Set[Typeset`skipInitDone$$, True], \
Set[t$$1314$143994$$, 0], Set[Vtar$$1314$143995$$, 0], \
Set[Vcur$$1314$143996$$, 0], Set[Mveh$$1314$143997$$, 0], \
Set[Dbrk$$1314$143998$$, 0], Set[Deng$$1314$143999$$, 0]}, \
DynamicBox[Manipulate`ManipulateBoxes[1, StandardForm, \
RuleDelayed[\\\"Variables\\\", List[Set[Dbrk$$1314$$, 10], Set[Deng$$1314$$, \
10], Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0]]], RuleDelayed[\\\"ControllerVariables\\\", \
List[Hold[t$$1314$$, t$$1314$143994$$, 0], Hold[Vtar$$1314$$, \
Vtar$$1314$143995$$, 0], Hold[Vcur$$1314$$, Vcur$$1314$143996$$, 0], \
Hold[Mveh$$1314$$, Mveh$$1314$143997$$, 0], Hold[Dbrk$$1314$$, \
Dbrk$$1314$143998$$, 0], Hold[Deng$$1314$$, Deng$$1314$143999$$, 0]]], \
RuleDelayed[\\\"OtherVariables\\\", List[Typeset`show$$, \
Typeset`bookmarkList$$, Typeset`bookmarkMode$$, Typeset`animator$$, \
Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, Typeset`size$$, \
Typeset`update$$, Typeset`initDone$$, Typeset`skipInitDone$$]], \
RuleDelayed[\\\"Body\\\", Plot[Evaluate[ReplaceAll[ReplaceAll[y[x], \
List[List[Skeleton[1]]]], List[List[Rule[Skeleton[2]]], \
List[Rule[Skeleton[2]]], List[Rule[Skeleton[2]]]]]], List[x, 0, 18]]], \
RuleDelayed[\\\"Specifications\\\", List[List[t$$1314$$, 1, 100], \
List[Vtar$$1314$$, 0, 3.7`], List[List[Vcur$$1314$$, 0], 0, 3.7`], \
List[List[Mveh$$1314$$, 1200], 1000, 2000, 10], List[List[Dbrk$$1314$$, 10], \
1, 100], List[List[Deng$$1314$$, 10], 1, 100]]], RuleDelayed[\\\"Options\\\", \
List[Rule[ContentSize, List[1000, 1000]]]], \
RuleDelayed[\\\"DefaultOptions\\\", List[]]], Rule[SingleEvaluation, True]], \
RuleDelayed[DynamicModuleValues, List[]], RuleDelayed[Deinitialization, \
None], RuleDelayed[UntrackedVariables, List[Typeset`size$$]], \
Rule[SynchronousInitialization, True], RuleDelayed[UnsavedVariables, \
List[Typeset`initDone$$]], RuleDelayed[UndoTrackedVariables, \
List[Typeset`show$$, Typeset`bookmarkMode$$]]], \\\"Manipulate\\\", \
Rule[Deployed, True], Rule[StripOnInput, False]], \
Manipulate`InterpretManipulate[1]], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,104,1109,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855679697027`*^9},
 CellLabel->"",ExpressionUUID->"12439431-1bff-430e-bcc7-f2c694614776"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
TagBox[StyleBox[DynamicModuleBox[{Dbrk$$1314$$ = 10, Set[Deng$$1314$$, 10], \
Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0], Set[Typeset`show$$, True], Set[Typeset`bookmarkList$$, \
List[]], Set[Typeset`bookmarkMode$$, \\\"Menu\\\"], Typeset`animator$$, \
Set[Typeset`animvar$$, 1], Set[Typeset`name$$, \\\"\\\\\\\"untitled\\\\\\\"\\\
\"], Set[Typeset`specs$$, List[List[Hold[FE`t$$1314], 1, 100], \
List[Hold[FE`Vtar$$1314], 0, 3.7`], List[List[Hold[FE`Vcur$$1314], 0], 0, \
3.7`], List[List[Hold[FE`Mveh$$1314], 1200], 1000, 2000, 10], \
List[List[Hold[FE`Dbrk$$1314], 10], 1, 100], List[List[Hold[FE`Deng$$1314], \
10], 1, 100]]], Set[Typeset`size$$, Automatic], Set[Typeset`update$$, 0], \
Set[Typeset`initDone$$, False], Set[Typeset`skipInitDone$$, True], \
Set[t$$1314$144047$$, 0], Set[Vtar$$1314$144048$$, 0], \
Set[Vcur$$1314$144049$$, 0], Set[Mveh$$1314$144050$$, 0], \
Set[Dbrk$$1314$144051$$, 0], Set[Deng$$1314$144052$$, 0]}, \
DynamicBox[Manipulate`ManipulateBoxes[1, StandardForm, \
RuleDelayed[\\\"Variables\\\", List[Set[Dbrk$$1314$$, 10], Set[Deng$$1314$$, \
10], Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0]]], RuleDelayed[\\\"ControllerVariables\\\", \
List[Hold[t$$1314$$, t$$1314$144047$$, 0], Hold[Vtar$$1314$$, \
Vtar$$1314$144048$$, 0], Hold[Vcur$$1314$$, Vcur$$1314$144049$$, 0], \
Hold[Mveh$$1314$$, Mveh$$1314$144050$$, 0], Hold[Dbrk$$1314$$, \
Dbrk$$1314$144051$$, 0], Hold[Deng$$1314$$, Deng$$1314$144052$$, 0]]], \
RuleDelayed[\\\"OtherVariables\\\", List[Typeset`show$$, \
Typeset`bookmarkList$$, Typeset`bookmarkMode$$, Typeset`animator$$, \
Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, Typeset`size$$, \
Typeset`update$$, Typeset`initDone$$, Typeset`skipInitDone$$]], \
RuleDelayed[\\\"Body\\\", Plot[Evaluate[ReplaceAll[ReplaceAll[y[x], \
List[List[Skeleton[1]]]], List[List[Rule[Skeleton[2]]], \
List[Rule[Skeleton[2]]], List[Rule[Skeleton[2]]]]]], List[x, 0, 18]]], \
RuleDelayed[\\\"Specifications\\\", List[List[t$$1314$$, 1, 100], \
List[Vtar$$1314$$, 0, 3.7`], List[List[Vcur$$1314$$, 0], 0, 3.7`], \
List[List[Mveh$$1314$$, 1200], 1000, 2000, 10], List[List[Dbrk$$1314$$, 10], \
1, 100], List[List[Deng$$1314$$, 10], 1, 100]]], RuleDelayed[\\\"Options\\\", \
List[Rule[ContentSize, List[1000, 1000]]]], \
RuleDelayed[\\\"DefaultOptions\\\", List[]]], Rule[SingleEvaluation, True]], \
RuleDelayed[DynamicModuleValues, List[]], RuleDelayed[Deinitialization, \
None], RuleDelayed[UntrackedVariables, List[Typeset`size$$]], \
Rule[SynchronousInitialization, True], RuleDelayed[UnsavedVariables, \
List[Typeset`initDone$$]], RuleDelayed[UndoTrackedVariables, \
List[Typeset`show$$, Typeset`bookmarkMode$$]]], \\\"Manipulate\\\", \
Rule[Deployed, True], Rule[StripOnInput, False]], \
Manipulate`InterpretManipulate[1]], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,104,1110,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855685073028`*^9},
 CellLabel->"",ExpressionUUID->"41496185-d7e9-49b1-9116-77bb1f40bb30"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
TagBox[StyleBox[DynamicModuleBox[{Dbrk$$1314$$ = 10, Set[Deng$$1314$$, 10], \
Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0], Set[Typeset`show$$, True], Set[Typeset`bookmarkList$$, \
List[]], Set[Typeset`bookmarkMode$$, \\\"Menu\\\"], Typeset`animator$$, \
Set[Typeset`animvar$$, 1], Set[Typeset`name$$, \\\"\\\\\\\"untitled\\\\\\\"\\\
\"], Set[Typeset`specs$$, List[List[Hold[FE`t$$1314], 1, 100], \
List[Hold[FE`Vtar$$1314], 0, 3.7`], List[List[Hold[FE`Vcur$$1314], 0], 0, \
3.7`], List[List[Hold[FE`Mveh$$1314], 1200], 1000, 2000, 10], \
List[List[Hold[FE`Dbrk$$1314], 10], 1, 100], List[List[Hold[FE`Deng$$1314], \
10], 1, 100]]], Set[Typeset`size$$, Automatic], Set[Typeset`update$$, 0], \
Set[Typeset`initDone$$, False], Set[Typeset`skipInitDone$$, True], \
Set[t$$1314$144191$$, 0], Set[Vtar$$1314$144192$$, 0], \
Set[Vcur$$1314$144193$$, 0], Set[Mveh$$1314$144194$$, 0], \
Set[Dbrk$$1314$144195$$, 0], Set[Deng$$1314$144196$$, 0]}, \
DynamicBox[Manipulate`ManipulateBoxes[1, StandardForm, \
RuleDelayed[\\\"Variables\\\", List[Set[Dbrk$$1314$$, 10], Set[Deng$$1314$$, \
10], Set[Mveh$$1314$$, 1200], Set[t$$1314$$, 1], Set[Vcur$$1314$$, 0], \
Set[Vtar$$1314$$, 0]]], RuleDelayed[\\\"ControllerVariables\\\", \
List[Hold[t$$1314$$, t$$1314$144191$$, 0], Hold[Vtar$$1314$$, \
Vtar$$1314$144192$$, 0], Hold[Vcur$$1314$$, Vcur$$1314$144193$$, 0], \
Hold[Mveh$$1314$$, Mveh$$1314$144194$$, 0], Hold[Dbrk$$1314$$, \
Dbrk$$1314$144195$$, 0], Hold[Deng$$1314$$, Deng$$1314$144196$$, 0]]], \
RuleDelayed[\\\"OtherVariables\\\", List[Typeset`show$$, \
Typeset`bookmarkList$$, Typeset`bookmarkMode$$, Typeset`animator$$, \
Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, Typeset`size$$, \
Typeset`update$$, Typeset`initDone$$, Typeset`skipInitDone$$]], \
RuleDelayed[\\\"Body\\\", Plot[Evaluate[ReplaceAll[ReplaceAll[y[x], \
List[List[Skeleton[1]]]], List[List[Rule[Skeleton[2]]], \
List[Rule[Skeleton[2]]], List[Rule[Skeleton[2]]]]]], List[x, 0, 18]]], \
RuleDelayed[\\\"Specifications\\\", List[List[t$$1314$$, 1, 100], \
List[Vtar$$1314$$, 0, 3.7`], List[List[Vcur$$1314$$, 0], 0, 3.7`], \
List[List[Mveh$$1314$$, 1200], 1000, 2000, 10], List[List[Dbrk$$1314$$, 10], \
1, 100], List[List[Deng$$1314$$, 10], 1, 100]]], RuleDelayed[\\\"Options\\\", \
List[Rule[ContentSize, List[1000, 1000]]]], \
RuleDelayed[\\\"DefaultOptions\\\", List[]]], Rule[SingleEvaluation, True]], \
RuleDelayed[DynamicModuleValues, List[]], RuleDelayed[Deinitialization, \
None], RuleDelayed[UntrackedVariables, List[Typeset`size$$]], \
Rule[SynchronousInitialization, True], RuleDelayed[UnsavedVariables, \
List[Typeset`initDone$$]], RuleDelayed[UndoTrackedVariables, \
List[Typeset`show$$, Typeset`bookmarkMode$$]]], \\\"Manipulate\\\", \
Rule[Deployed, True], Rule[StripOnInput, False]], \
Manipulate`InterpretManipulate[1]], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,104,1118,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185569212378*^9},
 CellLabel->"",ExpressionUUID->"9c3defd2-d5da-4d9c-86cb-218ab087d2a0"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,104,1123,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185569941427*^9},
 CellLabel->"",ExpressionUUID->"810f3ded-93c1-401a-92e4-4b7a2e965072"],

Cell[BoxData[
 TemplateBox[{
  "Manipulate","vsform",
   "\"Manipulate argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"100\\\"}], \\\"}\\\"}]\\) does not have \
the correct form for a variable specification.\"",2,104,1140,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855700840454`*^9},
 CellLabel->"",ExpressionUUID->"37874c4f-713d-4b13-abe2-949ee468e2c4"],

Cell[BoxData[
 TemplateBox[{
  "Manipulate","vsform",
   "\"Manipulate argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"3.7`\\\"}], \\\"}\\\"}]\\) does not have \
the correct form for a variable specification.\"",2,104,1141,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185570092025*^9},
 CellLabel->"",ExpressionUUID->"382b473e-421f-4a1c-b448-4b2a74e00973"],

Cell[BoxData[
 TemplateBox[{
  "Manipulate","vsform",
   "\"Manipulate argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"3.7`\\\"}], \\\"}\\\"}]\\) does not have the \
correct form for a variable specification.\"",2,104,1142,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78318557014594*^9},
 CellLabel->"",ExpressionUUID->"5b5060bd-9834-4f0b-b170-4068b6612d9e"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Manipulate\\\", \
\\\"::\\\", \\\"vsform\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,104,1143,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855701558905`*^9},
 CellLabel->"",ExpressionUUID->"5e64ef74-9ca2-4047-95fa-2a319ac401b8"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   104,1146,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855706934147`*^9},
 CellLabel->"",ExpressionUUID->"79c0ab0a-58de-4cad-b24b-ba5165c67d63"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,104,1147,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855707353354`*^9},
 CellLabel->"",ExpressionUUID->"b690c762-a6f3-4d30-8d8c-c33f46646a68"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,104,1148,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185570756281*^9},
 CellLabel->"",ExpressionUUID->"0395725a-3096-4385-b21a-07fc63522a5b"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,104,1149,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855707791862`*^9},
 CellLabel->"",ExpressionUUID->"278ab427-6856-4c27-858c-34a78e0a7a0c"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,104,1150,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855708001623`*^9},
 CellLabel->"",ExpressionUUID->"7d601d87-ae2b-4082-96a6-6261037ed9ad"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,104,1151,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855708211064`*^9},
 CellLabel->"",ExpressionUUID->"09144358-bc4c-422f-822f-cbaf5f7c3ec3"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,104,1152,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185570841053*^9},
 CellLabel->"",ExpressionUUID->"0f672fb9-3d75-4ec3-ad02-abe5dbd18b26"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,104,1153,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185570861964*^9},
 CellLabel->"",ExpressionUUID->"21167953-adf4-42b1-9311-5abed2c22f4b"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   104,1154,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855709906197`*^9},
 CellLabel->"",ExpressionUUID->"ce0636a5-6038-4eeb-86de-5f3bf274bb0d"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,104,1155,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855709995966`*^9},
 CellLabel->"",ExpressionUUID->"b300cda6-7f7e-49a0-bed8-0b3cce5ecede"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,104,1156,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855710235715`*^9},
 CellLabel->"",ExpressionUUID->"469456f5-96a1-4351-9685-f6185502d83e"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,104,1157,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855710444746`*^9},
 CellLabel->"",ExpressionUUID->"446ece93-9c8d-441b-8974-4035d24778f7"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,104,1158,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185571066451*^9},
 CellLabel->"",ExpressionUUID->"8d0d20fa-67bb-4752-9412-d6432372cfef"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,104,1159,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855710883913`*^9},
 CellLabel->"",ExpressionUUID->"e6099f85-3228-40fe-a996-7ce8d85b8509"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,104,1160,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855711093035`*^9},
 CellLabel->"",ExpressionUUID->"38ba2b59-f0fe-4ae1-a9d7-f342fe31efd2"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,104,1161,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855711312437`*^9},
 CellLabel->"",ExpressionUUID->"219171e2-8bfa-46ac-b101-e2f2c76ada27"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   104,1162,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855712349653`*^9},
 CellLabel->"",ExpressionUUID->"5f89b2f2-c15e-4b4f-a98e-7ac601bcb5b1"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,104,1163,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185571260933*^9},
 CellLabel->"",ExpressionUUID->"3c9e0136-7dc5-4db2-b36c-2897923996b7"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,104,1164,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185571282869*^9},
 CellLabel->"",ExpressionUUID->"1cf16369-395e-4842-afbb-d9c6e827f2dd"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,104,1165,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855713027835`*^9},
 CellLabel->"",ExpressionUUID->"4c2a1708-2e6a-411f-b923-abf460e65015"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,104,1166,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855713247657`*^9},
 CellLabel->"",ExpressionUUID->"5613aef6-2ad9-412d-ad06-ee870ab66519"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,104,1167,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855713446712`*^9},
 CellLabel->"",ExpressionUUID->"a177754e-e417-43de-b7c9-38e943ce1164"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,104,1168,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831855713666506`*^9},
 CellLabel->"",ExpressionUUID->"18637b0d-f958-44f0-a625-8ad860c2dcfc"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,104,1169,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783185571387557*^9},
 CellLabel->"",ExpressionUUID->"ecde3b18-33d0-436e-82dd-b3515877ecaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"Sin", "[", "x", "]"}]}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"3", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}]}]}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"4", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"4", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"5", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"5", ",", 
                RowBox[{"Sin", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"240", "Degree"}]}], "]"}]}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"6", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"6", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"7", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"7", ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"8", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"8", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"9", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"9", ",", 
                RowBox[{"Sin", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"120", "Degree"}]}], "]"}]}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"10", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", 
                  "2"}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"11", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"11", ",", 
                RowBox[{"Sin", "[", 
                 RowBox[{"x", "+", "240"}], "]"}]}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"12", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"12", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}],
                  "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}]}], 
             "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7762449690289106`*^9, 3.7762450605662785`*^9}, {
   3.776245309881672*^9, 3.7762453463170457`*^9}, {3.776245377928497*^9, 
   3.7762453853950386`*^9}, {3.7762454445533295`*^9, 3.776245460482154*^9}, 
   3.7762455145294952`*^9, {3.7762455691335897`*^9, 3.7762455789996467`*^9}, {
   3.7762457270858417`*^9, 3.7762458107863073`*^9}, {3.776245966410675*^9, 
   3.776246053295764*^9}, {3.776246161638256*^9, 3.776246207537467*^9}, {
   3.7762462488948193`*^9, 3.776246435158884*^9}, {3.7762464760842686`*^9, 
   3.776246491527777*^9}, {3.776246529926833*^9, 3.77624654404292*^9}, {
   3.776246592775745*^9, 3.776246593225543*^9}, {3.7762466589924583`*^9, 
   3.776246698520618*^9}, {3.7762467371614647`*^9, 3.776246740547331*^9}, {
   3.7762467719559793`*^9, 3.776246785481386*^9}, {3.776246858903221*^9, 
   3.7762468748539686`*^9}, {3.7762469053433285`*^9, 3.776246939629203*^9}, {
   3.7762469760976486`*^9, 3.776247025338337*^9}, {3.776247230731118*^9, 
   3.7762472325874195`*^9}, {3.776247328827531*^9, 3.7762474783868637`*^9}, {
   3.7762475300335674`*^9, 3.77624759183002*^9}, 3.7762476288727508`*^9, {
   3.776247890156777*^9, 3.7762478928210735`*^9}, {3.7762479636495395`*^9, 
   3.776248040476509*^9}, {3.7762481334245214`*^9, 3.7762481674585814`*^9}, {
   3.7762482453504972`*^9, 3.776248293453601*^9}, {3.776248324986379*^9, 
   3.776248330392412*^9}, {3.7762484628895826`*^9, 3.7762485492312374`*^9}, {
   3.7762486040964108`*^9, 3.77624860541604*^9}, {3.7762487376151795`*^9, 
   3.776248762969157*^9}, {3.7762489113584657`*^9, 3.7762489239940205`*^9}, {
   3.7762489942395487`*^9, 3.776249015055442*^9}, {3.7762492823811564`*^9, 
   3.776249380934408*^9}, {3.776249418658967*^9, 3.776249418881044*^9}, {
   3.7762496550446444`*^9, 3.7762497079439783`*^9}, {3.7762502573466063`*^9, 
   3.7762502626155667`*^9}, {3.776250297888674*^9, 3.7762503038766537`*^9}, {
   3.776250758540631*^9, 3.7762507608885183`*^9}, {3.776257780916114*^9, 
   3.7762578113520937`*^9}, 3.7762584976156335`*^9, {3.776258530155101*^9, 
   3.7762585782416635`*^9}, 3.7762589199114966`*^9, {3.7762597761452665`*^9, 
   3.77625979479117*^9}, {3.776259859772766*^9, 3.776259860787538*^9}, {
   3.7762599389191523`*^9, 3.7762599393769283`*^9}, 3.776260025537594*^9, {
   3.776260090564295*^9, 3.7762600922188663`*^9}, {3.7762601994082203`*^9, 
   3.7762602153827143`*^9}, 3.776260308763921*^9, {3.7762625807884316`*^9, 
   3.7762626163135805`*^9}, {3.776262757353982*^9, 3.776262822152968*^9}, {
   3.7762629119065504`*^9, 3.776263254791382*^9}, {3.7762632935835934`*^9, 
   3.77626331722681*^9}, {3.7762633896819887`*^9, 3.7762634189520645`*^9}, {
   3.776263485908491*^9, 3.776263520470005*^9}, {3.776263551345936*^9, 
   3.7762636038950686`*^9}, {3.7762636491909237`*^9, 
   3.7762636550673294`*^9}, {3.7762637082993145`*^9, 3.776263711777449*^9}, {
   3.776263768906886*^9, 3.7762638313266144`*^9}, {3.7762639462354436`*^9, 
   3.776264001638835*^9}, {3.7762640481551323`*^9, 3.7762640486239004`*^9}, {
   3.776264230186479*^9, 3.7762642309363127`*^9}, {3.7762643073714542`*^9, 
   3.776264520437558*^9}, {3.7762645539558334`*^9, 3.776264554846249*^9}, {
   3.776264621413288*^9, 3.776264667797309*^9}, 3.7817895980756216`*^9, {
   3.7818029544968014`*^9, 3.7818029922278757`*^9}, {3.78197954353437*^9, 
   3.781979543544374*^9}, {3.7819796480061293`*^9, 3.7819796480330615`*^9}, {
   3.783177927432554*^9, 3.783177932587796*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"a8b197d0-4289-4a65-8e5d-e613db90c31b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {396., {61., 67.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$4385$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$4385$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, Thick, 
         Line[{{{1, 0}, {1, 
             Sin[$CellContext`x]}}, {{2, 0}, {
            2, Sin[$CellContext`x]/2 - Sin[$CellContext`x + 120 Degree]/
             2}}, {{3, 0}, {3, -Sin[$CellContext`x + 120 Degree]}}, {{4, 0}, {
            4, (-Sin[$CellContext`x + 120 Degree])/2 + 
             Sin[$CellContext`x + 240 Degree]/2}}, {{5, 0}, {5, 
             Sin[$CellContext`x + 240 Degree]}}, {{6, 0}, {
            6, Sin[$CellContext`x + 240 Degree]/2 - Sin[$CellContext`x]/
             2}}, {{7, 0}, {7, -Sin[$CellContext`x]}}, {{8, 0}, {
            8, (-Sin[$CellContext`x])/2 + 
             Sin[$CellContext`x + 120 Degree]/2}}, {{9, 0}, {9, 
             Sin[$CellContext`x + 120 Degree]}}, {{10, 0}, {
            10, Sin[$CellContext`x + 120 Degree]/2 - 
             Sin[$CellContext`x + 2 (120 Degree)]/2}}, {{11, 0}, {11, 
             Sin[$CellContext`x + 240]}}, {{12, 0}, {
            12, (-Sin[$CellContext`x + 2 (120 Degree)])/2 + 
             Sin[$CellContext`x]/2}}}]}, Axes -> True, GridLines -> Automatic,
         PlotRange -> {{-1, 13}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{451., {111., 118.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.783177940340019*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"230f54e4-ef63-4209-9a4b-80efdcfd9b63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",ExpressionUUID->"37e83be1-69ae-472e-98df-32a4ad1d9ca9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 25.132741228718345`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 8 Pi}}, Typeset`size$$ = {396., {61., 67.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$11521942$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$11521942$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, Thick, 
         Line[{{{1, 0}, {1, 
             Sin[$CellContext`x$$]}}, {{2, 0}, {
            2, Sin[$CellContext`x$$]/2 - Sin[$CellContext`x$$ + 120 Degree]/
             2}}, {{3, 0}, {3, -Sin[$CellContext`x$$ + 120 Degree]}}, {{4, 
            0}, {4, (-Sin[$CellContext`x$$ + 120 Degree])/2 + 
             Sin[$CellContext`x$$ + 240 Degree]/2}}, {{5, 0}, {5, 
             Sin[$CellContext`x$$ + 240 Degree]}}, {{6, 0}, {
            6, Sin[$CellContext`x$$ + 240 Degree]/2 - Sin[$CellContext`x$$]/
             2}}, {{7, 0}, {7, -Sin[$CellContext`x$$]}}, {{8, 0}, {
            8, (-Sin[$CellContext`x$$])/2 + 
             Sin[$CellContext`x$$ + 120 Degree]/2}}, {{9, 0}, {9, 
             Sin[$CellContext`x$$ + 120 Degree]}}, {{10, 0}, {
            10, Sin[$CellContext`x$$ + 120 Degree]/2 - 
             Sin[$CellContext`x$$ + 2 (120 Degree)]/2}}, {{11, 0}, {11, 
             Sin[$CellContext`x$$ + 240]}}, {{12, 0}, {
            12, (-Sin[$CellContext`x$$ + 2 (120 Degree)])/2 + 
             Sin[$CellContext`x$$]/2}}}]}, Axes -> True, GridLines -> 
        Automatic, PlotRange -> {{-1, 13}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`x$$, 0, 8 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{451., {125., 132.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.776248172112703*^9, 3.7762482949063764`*^9, 3.776248332416596*^9, {
   3.776248485969389*^9, 3.7762485051805077`*^9}, 3.776248551710824*^9, 
   3.776248607175286*^9, {3.77624874004272*^9, 3.776248764419879*^9}, 
   3.7762489330253615`*^9, 3.7762490165171986`*^9, 3.776249525806875*^9, {
   3.776249699187179*^9, 3.776249709410354*^9}, 3.7762502635027027`*^9, 
   3.776250762718732*^9, 3.7762508210760403`*^9, 3.776257817685461*^9, 
   3.7762585151978474`*^9, 3.7762589231523747`*^9, 3.7762597993297343`*^9, 
   3.776259871558988*^9, 3.776259976104507*^9, 3.7762600571043334`*^9, 
   3.7762600934650197`*^9, 3.7762602178747873`*^9, 3.7762603098294153`*^9, {
   3.7762625870929747`*^9, 3.7762626018213043`*^9}, {3.7762627629961863`*^9, 
   3.776262792256454*^9}, 3.776262825415874*^9, {3.776262935860692*^9, 
   3.776263008238638*^9}, {3.776263047806803*^9, 3.7762630802105947`*^9}, 
   3.7762631126964726`*^9, {3.7762632156129923`*^9, 3.7762632189093895`*^9}, 
   3.776263319642626*^9, {3.776263404665512*^9, 3.77626342027991*^9}, 
   3.7762636311256104`*^9, {3.776263776421623*^9, 3.776263803418232*^9}, 
   3.7762638345455723`*^9, 3.7762640066890154`*^9, 3.776264050467695*^9, 
   3.7762643198585916`*^9, 3.776264355214696*^9, {3.776264420268625*^9, 
   3.7762644489484596`*^9}, 3.7762645246104064`*^9, 3.7762646224446497`*^9, {
   3.776264653745229*^9, 3.776264672256291*^9}, {3.7818029973342247`*^9, 
   3.781803000042986*^9}, {3.782066878498183*^9, 3.782066923209853*^9}, 
   3.7831765541153097`*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"823de008-e6aa-4b67-bf0e-5956d0ccd4b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Red", ",", "Thick", ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "10"}], "]"}], ",", "Blue", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"345", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"15", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Black", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Green", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"105", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"135", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Blue", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Black", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"225", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"255", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Green", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Red", ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"magnetic", " ", "induction", " ", "vectors"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"0", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"0", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", "x", "]"}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", "x", "]"}], ")"}]}]}]}], "}"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"30", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"30", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"60", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"60", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"90", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"90", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"120", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"120", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"240", "Degree"}]}], "]"}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"240", "Degree"}]}], "]"}], ")"}]}]}]}], "}"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"150", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"150", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", "10"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"180", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"180", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]}], "}"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"210", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"210", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"240", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"240", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}], ")"}]}]}]}], "}"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"270", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"270", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", "2"}]}],
                  ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", "2"}]}],
                  ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"300", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"300", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", "240"}], "]"}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", "240"}], "]"}], ")"}]}]}]}], "}"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"330", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"330", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}],
                   "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}],
                   "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "rotating", " ", "magnetic", " ", "induction", " ", "vector"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", "x", "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}]}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"240", "Degree"}]}], "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}], "+",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", "2"}]}],
                  ")"}]}], "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", "240"}], "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}],
                   "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", "x", "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"240", "Degree"}]}], "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}], "+",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", "2"}]}],
                  ")"}]}], "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", "240"}], "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}],
                   "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "11"}], ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "11"}], ",", "11"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"8", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781783895613417*^9, 3.7817838958188086`*^9}, {
   3.781784045610384*^9, 3.781784070141843*^9}, {3.781784130461586*^9, 
   3.7817842175627627`*^9}, {3.781784252896265*^9, 3.78178432063718*^9}, {
   3.781784354270313*^9, 3.781784396656995*^9}, {3.7817844306087265`*^9, 
   3.7817844632275577`*^9}, {3.7817847898314524`*^9, 3.781784845537565*^9}, {
   3.7817848894152517`*^9, 3.781784892719408*^9}, {3.7817849341925416`*^9, 
   3.78178496689412*^9}, {3.7817850071874046`*^9, 3.78178500819073*^9}, {
   3.7817850465980644`*^9, 3.7817850750101085`*^9}, {3.7817851343514414`*^9, 
   3.78178513495786*^9}, {3.7817855408438396`*^9, 3.781785550641647*^9}, {
   3.78178560637965*^9, 3.781785687179655*^9}, {3.781785750411622*^9, 
   3.7817858164032135`*^9}, {3.7817858978275414`*^9, 3.781785935769122*^9}, {
   3.781786016419527*^9, 3.7817860192908163`*^9}, {3.7817861127978516`*^9, 
   3.7817861268223763`*^9}, {3.7817861917039657`*^9, 
   3.7817861922155504`*^9}, {3.781786303838191*^9, 3.781786312373344*^9}, {
   3.7817863796195803`*^9, 3.781786456165988*^9}, 3.781786511912964*^9, {
   3.7817866364601164`*^9, 3.7817866621843224`*^9}, {3.7817870767716846`*^9, 
   3.7817871542036877`*^9}, {3.781787225270745*^9, 3.7817872439009123`*^9}, {
   3.781787315887333*^9, 3.7817874097248454`*^9}, {3.7817874653720026`*^9, 
   3.781787595824313*^9}, {3.781787641208954*^9, 3.781787688276168*^9}, {
   3.7817877545463142`*^9, 3.7817878680838127`*^9}, {3.781787901387783*^9, 
   3.7817879072989483`*^9}, {3.7817881582491055`*^9, 
   3.7817881662936316`*^9}, {3.7817882097205563`*^9, 
   3.7817882698617725`*^9}, {3.781788395366871*^9, 3.781788413997045*^9}, {
   3.781788534749242*^9, 3.7817885365892963`*^9}, {3.7817886464705987`*^9, 
   3.78178865382294*^9}, {3.781788699218585*^9, 3.7817888623096113`*^9}, {
   3.7817889072016077`*^9, 3.781788974523642*^9}, {3.781789015242753*^9, 
   3.7817890440816984`*^9}, {3.7817892444060936`*^9, 3.781789279050476*^9}, {
   3.7817893950015182`*^9, 3.781789399855506*^9}, {3.781789441711623*^9, 
   3.7817894622437677`*^9}, {3.7817895314098644`*^9, 3.78178958094744*^9}, {
   3.7817896119036913`*^9, 3.7817896490254564`*^9}, {3.7817905670495577`*^9, 
   3.781790568576501*^9}, {3.7817915278830123`*^9, 3.7817915318514357`*^9}, {
   3.7817924393165607`*^9, 3.781792440664956*^9}, 3.7817925174706764`*^9, {
   3.781792563872597*^9, 3.781792639724867*^9}, {3.781792879108904*^9, 
   3.7817928823542957`*^9}, {3.7817930130582137`*^9, 3.781793067569532*^9}, {
   3.7817931405332594`*^9, 3.781793151134012*^9}, {3.7817931904740877`*^9, 
   3.7817931913128705`*^9}, 3.7817932657817755`*^9, {3.7817933100314684`*^9, 
   3.7817933283624897`*^9}, {3.7817933890821323`*^9, 
   3.7817934106235857`*^9}, {3.7817934538191133`*^9, 3.78179350551292*^9}, {
   3.7817935769888525`*^9, 3.7817936089105234`*^9}, {3.7817936509401646`*^9, 
   3.781793708516218*^9}, {3.781793781119135*^9, 3.781793851230756*^9}, {
   3.7817939182535477`*^9, 3.7817939403904047`*^9}, {3.781793970586649*^9, 
   3.7817939718004036`*^9}, {3.781794010857995*^9, 3.7817940373102837`*^9}, {
   3.7817962352914047`*^9, 3.7817962781099453`*^9}, {3.781796311317174*^9, 
   3.781796380012564*^9}, {3.7817964560343075`*^9, 3.781796459340466*^9}, {
   3.7817965295118923`*^9, 3.7817965527288284`*^9}, {3.7817966035778656`*^9, 
   3.7817966352273235`*^9}, {3.7817966755624714`*^9, 
   3.7817969065300694`*^9}, {3.7817971354919806`*^9, 
   3.7817971617837076`*^9}, {3.7817972599532747`*^9, 3.781797278330117*^9}, {
   3.7817975760104203`*^9, 3.781797623240101*^9}, {3.7817976791895967`*^9, 
   3.7817976951099777`*^9}, {3.781797789349069*^9, 3.7817978008633156`*^9}, {
   3.781797955730285*^9, 3.781798002674793*^9}, {3.781798058319103*^9, 
   3.7817980814263105`*^9}, {3.781798231210667*^9, 3.781798248780631*^9}, {
   3.7817983065322943`*^9, 3.7817983574760747`*^9}, {3.781798390086899*^9, 
   3.781798511958112*^9}, {3.7817985842568426`*^9, 3.7817986004765253`*^9}, {
   3.781798634494602*^9, 3.78179869496795*^9}, {3.781798745939662*^9, 
   3.781798747064623*^9}, {3.7817987842193336`*^9, 3.7817988463353076`*^9}, {
   3.781798886855968*^9, 3.781799095979568*^9}, {3.7817992087750187`*^9, 
   3.781799222594098*^9}, {3.7817992563917503`*^9, 3.781799334140851*^9}, {
   3.781799612974471*^9, 3.7817996651660137`*^9}, {3.7817997131064205`*^9, 
   3.781799720641341*^9}, {3.781800014506775*^9, 3.781800081492647*^9}, {
   3.7818001440890083`*^9, 3.7818001774089975`*^9}, {3.7818002361798306`*^9, 
   3.781800324379114*^9}, {3.7818010452641354`*^9, 3.7818010623764267`*^9}, {
   3.781801111747695*^9, 3.781801148950241*^9}, 3.781801434768199*^9, {
   3.781801483540753*^9, 3.781801496318595*^9}, {3.781801898277136*^9, 
   3.7818019035919275`*^9}, {3.7818019358011103`*^9, 
   3.7818019636626215`*^9}, {3.7818024892015*^9, 3.7818025132203226`*^9}, {
   3.7818029742081013`*^9, 3.781802982689432*^9}, {3.7818031568658223`*^9, 
   3.7818031710080214`*^9}, {3.781975862811568*^9, 3.781975863301313*^9}, {
   3.7819795435533504`*^9, 3.7819796067374754`*^9}, {3.7819796480500364`*^9, 
   3.7819796579914637`*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"672bb44d-add1-4546-9303-845437d3d5d2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 8 Pi}}, Typeset`size$$ = {
    396., {195., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`x$11521965$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$11521965$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, Thick, 
         Circle[{0, 0}, 10], Blue, 
         Circle[{Sin[345 Degree] 10, Cos[345 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[345 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[345 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[345 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[345 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[345 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[345 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[345 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[345 Degree] 10}}], 
         Circle[{Sin[15 Degree] 10, Cos[15 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[15 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[15 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[15 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[15 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[15 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[15 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[15 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[15 Degree] 10}}], Black, 
         Circle[{Sin[45 Degree] 10, Cos[45 Degree] 10}, 1], 
         Disk[{Sin[45 Degree] 10, Cos[45 Degree] 10}, 0.5], 
         Circle[{Sin[75 Degree] 10, Cos[75 Degree] 10}, 1], 
         Disk[{Sin[75 Degree] 10, Cos[75 Degree] 10}, 0.5], Green, 
         Circle[{Sin[105 Degree] 10, Cos[105 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[105 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[105 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[105 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[105 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[105 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[105 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[105 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[105 Degree] 10}}], 
         Circle[{Sin[135 Degree] 10, Cos[135 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[135 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[135 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[135 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[135 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[135 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[135 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[135 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[135 Degree] 10}}], Blue, 
         Circle[{Sin[165 Degree] 10, Cos[165 Degree] 10}, 1], 
         Disk[{Sin[165 Degree] 10, Cos[165 Degree] 10}, 0.5], 
         Circle[{Sin[195 Degree] 10, Cos[195 Degree] 10}, 1], 
         Disk[{Sin[195 Degree] 10, Cos[195 Degree] 10}, 0.5], Black, 
         Circle[{Sin[225 Degree] 10, Cos[225 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[225 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[225 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[225 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[225 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[225 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[225 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[225 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[225 Degree] 10}}], 
         Circle[{Sin[255 Degree] 10, Cos[255 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[255 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[255 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[255 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[255 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[255 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[255 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[255 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[255 Degree] 10}}], Green, 
         Circle[{Sin[285 Degree] 10, Cos[285 Degree] 10}, 1], 
         Disk[{Sin[285 Degree] 10, Cos[285 Degree] 10}, 0.5], 
         Circle[{Sin[315 Degree] 10, Cos[315 Degree] 10}, 1], 
         Disk[{Sin[315 Degree] 10, Cos[315 Degree] 10}, 0.5], Red, 
         Line[{{{Sin[0 Degree] 10, Cos[0 Degree] 10}, {
            Sin[0 Degree] 10 + Sin[0 Degree] Sin[$CellContext`x$$], 
             Cos[0 Degree] 10 + Cos[0 Degree] Sin[$CellContext`x$$]}}, {{
            Sin[30 Degree] 10, Cos[30 Degree] 10}, {
            Sin[30 Degree] 10 + 
             Sin[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2), Cos[30 Degree] 10 + 
             Cos[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2)}}, {{
            Sin[60 Degree] 10, Cos[60 Degree] 10}, {
            Sin[60 Degree] 10 + 
             Sin[60 Degree] (-Sin[$CellContext`x$$ + 120 Degree]), 
             Cos[60 Degree] 10 + 
             Cos[60 Degree] (-Sin[$CellContext`x$$ + 120 Degree])}}, {{
            Sin[90 Degree] 10, Cos[90 Degree] 10}, {
            Sin[90 Degree] 10 + 
             Sin[90 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2), Cos[90 Degree] 10 + 
             Cos[90 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2)}}, {{
            Sin[120 Degree] 10, Cos[120 Degree] 10}, {
            Sin[120 Degree] 10 + 
             Sin[120 Degree] Sin[$CellContext`x$$ + 240 Degree], 
             Cos[120 Degree] 10 + 
             Cos[120 Degree] Sin[$CellContext`x$$ + 240 Degree]}}, {{
            Sin[150 Degree] 10, Cos[150 Degree] 10}, {
            Sin[150 Degree] 10 + 
             Sin[150 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$]/2), Cos[150 Degree] 10 + 
             Cos[150 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$]/2)}}, {{
            Sin[180 Degree] 10, Cos[180 Degree] 10}, {
            Sin[180 Degree] 10 + Sin[180 Degree] (-Sin[$CellContext`x$$]), 
             Cos[180 Degree] 10 + 
             Cos[180 Degree] (-Sin[$CellContext`x$$])}}, {{
            Sin[210 Degree] 10, Cos[210 Degree] 10}, {
            Sin[210 Degree] 10 + 
             Sin[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2), Cos[210 Degree] 10 + 
             Cos[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2)}}, {{
            Sin[240 Degree] 10, Cos[240 Degree] 10}, {
            Sin[240 Degree] 10 + 
             Sin[240 Degree] Sin[$CellContext`x$$ + 120 Degree], 
             Cos[240 Degree] 10 + 
             Cos[240 Degree] Sin[$CellContext`x$$ + 120 Degree]}}, {{
            Sin[270 Degree] 10, Cos[270 Degree] 10}, {
            Sin[270 Degree] 10 + 
             Sin[270 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$ + 2 (120 Degree)]/2), Cos[270 Degree] 10 + 
             Cos[270 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$ + 2 (120 Degree)]/2)}}, {{
            Sin[300 Degree] 10, Cos[300 Degree] 10}, {
            Sin[300 Degree] 10 + Sin[300 Degree] Sin[$CellContext`x$$ + 240], 
             Cos[300 Degree] 10 + 
             Cos[300 Degree] Sin[$CellContext`x$$ + 240]}}, {{
            Sin[330 Degree] 10, Cos[330 Degree] 10}, {
            Sin[330 Degree] 10 + 
             Sin[330 Degree] ((-Sin[$CellContext`x$$ + 2 (120 Degree)])/2 + 
               Sin[$CellContext`x$$]/2), Cos[330 Degree] 10 + 
             Cos[330 Degree] ((-Sin[$CellContext`x$$ + 2 (120 Degree)])/2 + 
               Sin[$CellContext`x$$]/2)}}, {{0, 0}, {
            Sin[0 Degree] Sin[$CellContext`x$$] + 
             Sin[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Sin[60 Degree] (-Sin[$CellContext`x$$ + 120 Degree]) + 
             Sin[90 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Sin[120 Degree] Sin[$CellContext`x$$ + 240 Degree] + 
             Sin[150 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$]/2) + 
             Sin[180 Degree] (-Sin[$CellContext`x$$]) + 
             Sin[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Sin[240 Degree] Sin[$CellContext`x$$ + 120 Degree] + 
             Sin[270 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$ + 2 (120 Degree)]/2) + 
             Sin[300 Degree] Sin[$CellContext`x$$ + 240] + 
             Sin[330 Degree] ((-Sin[$CellContext`x$$ + 2 (120 Degree)])/2 + 
               Sin[$CellContext`x$$]/2), Cos[0 Degree] Sin[$CellContext`x$$] + 
             Cos[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Cos[60 Degree] (-Sin[$CellContext`x$$ + 120 Degree]) + 
             Cos[90 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Cos[120 Degree] Sin[$CellContext`x$$ + 240 Degree] + 
             Cos[150 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$]/2) + 
             Cos[180 Degree] (-Sin[$CellContext`x$$]) + 
             Cos[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Cos[240 Degree] Sin[$CellContext`x$$ + 120 Degree] + 
             Cos[270 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$ + 2 (120 Degree)]/2) + 
             Cos[300 Degree] Sin[$CellContext`x$$ + 240] + 
             Cos[330 Degree] ((-Sin[$CellContext`x$$ + 2 (120 Degree)])/2 + 
               Sin[$CellContext`x$$]/2)}}}]}, Axes -> True, GridLines -> 
        Automatic, PlotRange -> {{-11, 11}, {-11, 11}}], 
      "Specifications" :> {{$CellContext`x$$, 0, 8 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{451., {245., 252.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7820668786707153`*^9, 3.7820669233804035`*^9}},
 CellLabel->
  "Out[339]=",ExpressionUUID->"d58a95a9-9465-47a1-9cb9-040b64c15486"]
}, Open  ]],

Cell[TextData[{
 StyleBox["U1",
  FontColor->RGBColor[0, 0, 1]],
 ": \t0\[Degree]\t\tV1:\t120\[Degree]\t\t",
 StyleBox["W1",
  FontColor->RGBColor[0, 1, 0]],
 ":\t240\[Degree]\t\n",
 StyleBox["U2",
  FontColor->RGBColor[0, 0, 1]],
 ":\t180\[Degree]\t\tV2:\t300\[Degree]\t\t",
 StyleBox["W2",
  FontColor->RGBColor[0, 1, 0]],
 ":\t 60\[Degree]"
}], "Text",
 CellChangeTimes->{{3.7820594046329155`*^9, 3.782059659928439*^9}, {
  3.7821512158717422`*^9, 3.7821512381920757`*^9}, {3.782151271144985*^9, 
  3.782151378421214*^9}, {3.7821517074935455`*^9, 3.7821517838603897`*^9}, {
  3.7821518230775547`*^9, 3.7821518611408033`*^9}, {3.7821524876938963`*^9, 
  3.7821524943411264`*^9}, {3.78215403722403*^9, 
  3.782154040823409*^9}},ExpressionUUID->"10217bba-e252-4b71-ba3e-\
f224df62e1e1"],

Cell[CellGroupData[{

Cell["Wiring diagram", "Subtitle",
 CellChangeTimes->{{3.782067767992212*^9, 3.782067770890467*^9}, {
  3.7820678015145664`*^9, 
  3.7820678017778606`*^9}},ExpressionUUID->"f451f82b-1ccb-44b1-b89a-\
8324c07be050"],

Cell[BoxData[
 RowBox[{
  RowBox[{"circuit", "[", 
   RowBox[{"x_:", "0"}], "]"}], ":=", 
  RowBox[{"Line", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", "x"}], ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", "x"}], ",", "10"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4.5", "+", "x"}], ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"8", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"8", "+", "x"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5", "+", "x"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "x"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4.5", "+", "x"}], ",", "12"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "+", "x"}], ",", 
       RowBox[{"-", "4"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7820649015936193`*^9, 3.7820649018061123`*^9}, {
   3.7820651468467274`*^9, 3.78206519785039*^9}, {3.7820652420452137`*^9, 
   3.7820652558762703`*^9}, {3.7820652917902355`*^9, 3.782065313941027*^9}, 
   3.7820668489381895`*^9, {3.7821483635801463`*^9, 3.78214836400605*^9}, {
   3.782148461813548*^9, 3.782148462885724*^9}, {3.7821504978452234`*^9, 
   3.782150498341889*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"c8d31eed-5ed6-4861-8d7f-c851461bc293"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"circuit", "[", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"U1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"U2", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "Black", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"9", ",", 
          RowBox[{"-", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"12.5", ",", "13"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"12.5", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"10", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"12.5", ",", "12"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "13"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "12"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"V2", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"V1", ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "Green", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"circuit", "[", "4", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"W1", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"W2", ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}],
    ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "14"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "14"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7820542317586217`*^9, 3.7820542984742765`*^9}, {
   3.782054334989702*^9, 3.782054376603456*^9}, {3.78205442025174*^9, 
   3.7820545109562674`*^9}, {3.7820545414637156`*^9, 
   3.7820545929580603`*^9}, {3.7820547125752983`*^9, 3.782054779413662*^9}, {
   3.7820548498234396`*^9, 3.782054992007351*^9}, {3.7820550689496355`*^9, 
   3.782055101001954*^9}, {3.7820551533610168`*^9, 3.782055194286584*^9}, {
   3.782055231399435*^9, 3.782055262276831*^9}, {3.7820552939342375`*^9, 
   3.7820553033969398`*^9}, {3.782055364319089*^9, 3.782055375121194*^9}, {
   3.782055431078623*^9, 3.7820554342261753`*^9}, {3.782056783634048*^9, 
   3.782056788029334*^9}, {3.7820577354090385`*^9, 3.7820577618284426`*^9}, {
   3.7820578380566835`*^9, 3.782057904132043*^9}, 3.782057939149399*^9, {
   3.7820579811461716`*^9, 3.7820579813147154`*^9}, {3.782058103412324*^9, 
   3.7820582177715836`*^9}, {3.7820593448377867`*^9, 3.782059345911875*^9}, {
   3.782059738433578*^9, 3.782059758548805*^9}, {3.7820598645843573`*^9, 
   3.782059867894556*^9}, {3.7820599233891535`*^9, 3.782059948102123*^9}, {
   3.7820600320267754`*^9, 3.7820600744533296`*^9}, {3.7820601123151155`*^9, 
   3.782060146228496*^9}, {3.7820602317857804`*^9, 3.7820604431108675`*^9}, {
   3.7820613981228*^9, 3.7820614059199123`*^9}, {3.782064937800831*^9, 
   3.7820649432622643`*^9}, {3.7820653969451323`*^9, 
   3.7820654075836945`*^9}, {3.782066851123372*^9, 3.78206685629852*^9}, 
   3.7821480700079374`*^9, 3.782148100308931*^9, {3.782148308968135*^9, 
   3.782148333942374*^9}, 3.782148476487338*^9, {3.782148532396864*^9, 
   3.7821487320152416`*^9}, {3.7821487791781664`*^9, 3.782148793309432*^9}, {
   3.782148847474595*^9, 3.782148877902291*^9}, {3.7821490297443514`*^9, 
   3.7821491025866275`*^9}, {3.782149138851683*^9, 3.7821491900767536`*^9}, {
   3.7821492277999067`*^9, 3.782149312591242*^9}, {3.782149377750058*^9, 
   3.782149399068071*^9}, {3.782149465326947*^9, 3.7821494937788887`*^9}, {
   3.7821495793930244`*^9, 3.7821496626584387`*^9}, {3.782149714318341*^9, 
   3.7821497168555593`*^9}, {3.7821497599507585`*^9, 3.78214979721012*^9}, {
   3.7821498551023946`*^9, 3.7821500046894855`*^9}, {3.7821501765291667`*^9, 
   3.7821501901078234`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"4da3cc6e-53d9-452c-8b34-f8734ab65142"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], Thickness[Large], 
    LineBox[{{1, -4}, {1, 10}, {4.5, 13}, {8, 10}, {8, 0}, {5, -2}, {2, 0}, {
      2, 10}, {4.5, 12}, {7, 10}, {7, -4}}], InsetBox["U1", {1, -5}], 
    InsetBox["U2", {7, -5}]}, 
   {GrayLevel[0], Thickness[Large], LineBox[{{9, -4}, {9, 10}, {12.5, 13}}], 
    LineBox[{{12.5, -2}, {10, 0}, {10, 10}, {12.5, 12}}], 
    LineBox[{{0.5, 13}, {4, 10}, {4, 0}, {0.5, -2}}], 
    LineBox[{{0.5, 12}, {3, 10}, {3, -4}}], InsetBox["V2", {3, -5}], 
    InsetBox["V1", {9, -5}]}, 
   {RGBColor[0, 1, 0], Thickness[Large], 
    LineBox[{{5, -4}, {5, 10}, {8.5, 13}, {12, 10}, {12, 0}, {9, -2}, {6, 
      0}, {6, 10}, {8.5, 12}, {11, 10}, {11, -4}}], InsetBox["W1", {5, -5}], 
    InsetBox["W2", {11, -5}]}},
  PlotRange->{{-1, 14}, {-6, 14}}]], "Output",
 CellChangeTimes->{{3.782060202725464*^9, 3.7820602075325785`*^9}, {
   3.782060237889429*^9, 3.7820602428940926`*^9}, {3.782060291309656*^9, 
   3.782060444248788*^9}, {3.7820614123467255`*^9, 3.782061438154735*^9}, 
   3.782061704629446*^9, {3.7820619061786423`*^9, 3.7820619221908617`*^9}, 
   3.7820620829122515`*^9, {3.7820621388856773`*^9, 3.7820621660131397`*^9}, {
   3.7820621987097363`*^9, 3.782062220983158*^9}, 3.7820622781692877`*^9, 
   3.782062323780422*^9, 3.782064944757234*^9, {3.782065222904436*^9, 
   3.7820652583935103`*^9}, 3.7820653243562355`*^9, 3.7820654087794976`*^9, {
   3.7820668642452755`*^9, 3.7820669238211865`*^9}, {3.7821481030077105`*^9, 
   3.782148118859377*^9}, {3.782148668138996*^9, 3.782148733277867*^9}, {
   3.7821487862702074`*^9, 3.7821487945879745`*^9}, {3.7821490445587826`*^9, 
   3.7821490763058815`*^9}, 3.782149145779165*^9, {3.7821491800675077`*^9, 
   3.7821491907679005`*^9}, 3.7821493137053227`*^9, {3.7821493856569214`*^9, 
   3.7821494003456554`*^9}, {3.782149467626833*^9, 3.7821494951242933`*^9}, 
   3.7821495893404326`*^9, 3.7821496634642844`*^9, {3.7821497400509214`*^9, 
   3.782149797674881*^9}, {3.7821498421031117`*^9, 3.782149878341243*^9}, 
   3.782149973684368*^9, 3.782150005448494*^9, {3.7821501787043066`*^9, 
   3.782150191112138*^9}, 3.7821505048544397`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"69f1b940-d1c4-4823-ac29-78b80242cd20"]
}, Open  ]],

Cell[TextData[{
 StyleBox["U1",
  FontColor->RGBColor[0, 0, 1]],
 ": \t0\[Degree]\t\tV1:\t120\[Degree]\t\t",
 StyleBox["W1",
  FontColor->RGBColor[0, 1, 0]],
 ":\t240\[Degree]\t\n",
 StyleBox["U2",
  FontColor->RGBColor[0, 0, 1]],
 ":\t180\[Degree]\t\tV2:\t300\[Degree]\t\t",
 StyleBox["W2",
  FontColor->RGBColor[0, 1, 0]],
 ":\t 60\[Degree]"
}], "Text",
 CellChangeTimes->{{3.7820594046329155`*^9, 3.782059659928439*^9}, {
   3.7821512158717422`*^9, 3.7821512381920757`*^9}, {3.782151271144985*^9, 
   3.782151378421214*^9}, {3.7821517074935455`*^9, 3.7821517838603897`*^9}, {
   3.7821518230775547`*^9, 3.7821518611408033`*^9}, {3.7821524876938963`*^9, 
   3.7821524943411264`*^9}, 
   3.782154048695366*^9},ExpressionUUID->"5687f6df-51f3-4ebd-9c94-\
49ae5575dd8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counterclockwise rotation", "Subtitle",
 CellChangeTimes->{{3.7819801560015764`*^9, 3.7819801633619003`*^9}, {
  3.7819804271068563`*^9, 
  3.7819804300479937`*^9}},ExpressionUUID->"67a4a4d5-91dd-428d-a295-\
801003e5034a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", " ", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", " ", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], " ", ",", 
     RowBox[{"-", 
      RowBox[{"Sin", " ", "[", 
       RowBox[{"x", "+", 
        RowBox[{"240", "Degree"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", " ", "[", 
         RowBox[{"x", "+", 
          RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"Sin", " ", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ",", " ", 
     RowBox[{"Sin", " ", "[", 
      RowBox[{"x", "+", 
       RowBox[{"120", "Degree"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", " ", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", " ", "[", "x", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"x", "+", 
       RowBox[{"240", "Degree"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"x", "+", 
        RowBox[{"120", "Degree"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "+", 
          RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"4", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.776239169741642*^9, 3.776239225692113*^9}, {
   3.7762392804766016`*^9, 3.776239284849877*^9}, {3.7762393199490724`*^9, 
   3.77623933910382*^9}, {3.7762394355350356`*^9, 3.77623947531962*^9}, {
   3.7762395456793756`*^9, 3.7762395518010106`*^9}, {3.7762396763761325`*^9, 
   3.77623979448132*^9}, {3.7762398482504077`*^9, 3.77623986573869*^9}, {
   3.776240738306692*^9, 3.7762408137240973`*^9}, {3.7762408513773594`*^9, 
   3.7762408723423185`*^9}, {3.776240918495944*^9, 3.776240927380189*^9}, {
   3.776240963723025*^9, 3.7762409958651123`*^9}, {3.7762581433809104`*^9, 
   3.7762581856990757`*^9}, 3.7762583045474467`*^9, {3.776258359533263*^9, 
   3.7762583623059545`*^9}, 3.776258395690838*^9, {3.7762584446960955`*^9, 
   3.776258445235592*^9}, 3.776258674970976*^9, 3.77625871623116*^9, 
   3.7762587519991446`*^9, {3.7762588302820773`*^9, 3.776258843832451*^9}, {
   3.776259067621396*^9, 3.776259141305867*^9}, {3.7762592825502324`*^9, 
   3.7762592838410234`*^9}, {3.7762595599688635`*^9, 3.776259573322821*^9}, {
   3.7762626215226264`*^9, 3.7762626221080885`*^9}, 3.7762626637019634`*^9, {
   3.776262722268931*^9, 3.7762627480442615`*^9}, {3.7817890783769817`*^9, 
   3.7817890869391484`*^9}, {3.781789203422615*^9, 3.781789235093998*^9}, {
   3.7817892994738827`*^9, 3.781789314719137*^9}, {3.781789354488819*^9, 
   3.7817893846372194`*^9}, {3.7817894999429884`*^9, 3.781789505789366*^9}, {
   3.7817896812931633`*^9, 3.781789709706241*^9}, {3.7817898252331295`*^9, 
   3.781789842349427*^9}, {3.7817926179830065`*^9, 3.781792635408366*^9}, {
   3.7818028185765495`*^9, 3.7818028227134967`*^9}, {3.7818029281402283`*^9, 
   3.781802944248176*^9}, {3.781974385677294*^9, 3.7819743990435295`*^9}, {
   3.7819744432972603`*^9, 3.781974513947363*^9}, 3.781974580196266*^9, {
   3.7819746169400425`*^9, 3.781974673950674*^9}, {3.781974784536023*^9, 
   3.7819748222143364`*^9}, {3.7819748642838807`*^9, 
   3.7819748908937144`*^9}, {3.7819749212156506`*^9, 3.781975286576006*^9}, 
   3.7819753531191196`*^9, {3.781975503207904*^9, 3.7819755039070253`*^9}, {
   3.7819796773686624`*^9, 3.7819796773796043`*^9}, {3.7819800413341413`*^9, 
   3.781980066059046*^9}},
 CellLabel->
  "In[343]:=",ExpressionUUID->"dba499dc-7c15-49e6-9fca-8499b1912fdc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
tndG0wqqMLPu4f/+v5v3fys3Rzg=
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmHk8VN8bx5XKzlizDWLGnhRJKucJ7agoZE+bJCGUKCpZSwjZQrInO4ly
pLRIfVV2WbPMzM0aZQm/+/uH1/s1d+55ns/n85w5925wumR2ZjUbG1sZ+ef/
/9kx95efW6P1j8z3VvpVdiM6s3aHzINLSErag9I43I0Wijed7owJQAnLr3Yv
ifxAwyLOc5Ux95G1e8dlwcs/UNfeoPqsmDTkwS4r9mtjD2p1iFF6FFOESk3l
nhmk9iIzV4muhBiMtqwqHZIp70e8ugjH76tDfmsExRkf+9HkCw/BgYY6pKAd
9zu9rx9Vvmqr8K5/jd4SIaYD3APIsCF9ObXmDbK4+GdfkuMAsmvRjpp69h7N
Nd6hdnMOouhp27L4mP/Qtv9sXbiNf6J7okk76/iakRq3RNeekz/Rt5I7slvN
mtG4ThT1gs9PZMOyHZbpbkYze9mxZ/pP5GbD4zH96yvaId3fdPn3TxS7yzk0
kdKCGDqZ7spxQ6hvlfzzUcsOVH3+pfrLd8OIlsqXZJvSgYq/B2qu7RxGznrz
/l/7O1DD+a1btxLDaNqz2aDmfCcKKDs8fkBgBK0ZuvEl0q8LsbdU9RlajCDV
d93DW9N+IOPgPfLOfSNoR8NBboPL/Si1q/EI0TOKKC3Z/2170I9OFhUFTxKj
aGhwddzGsn6knT/e1zM/iiLZamQlfvejRtqqBndRBhrcobZ10nMAaefYdXkf
YqDQUh7HVM9B5LhWIXSqlIHsXp+jx8YMItkUWpYnZqAtzW9YYaWDiOl2R6j7
EwP9GPPz9p4eRId9FwtODjHQJpVf4caeP5GjMdw1EmGitrSmigWPITSltyrD
4hITPS1U9puMHkJuOlwa+64xUeCrIBgpGUKc5sJHZO4wkUr3zk9fp4bQyO11
aoFJTOQv9qw/12MYfVMYFhZ8y0QK9+7xWHqMIL37+1/bC7HQXDKz2Th6BB1z
Lv5eJsVCTfl74g1KRpDZmEj3OI2FfD4syWlMjSA5P4lMsW0s1MjuprPWYxTV
j+YpqFuzkPs105Nl7gx0fTDE/FwyCx1025nLGcVAdwc1DKcyWEjBSXXCroiB
jHuV8k7ms1DbgXXXOccZ6CAjvWa2ioV2SdQm2F1gIp3ta7ezWlhIjK+grzSc
icq/jojndLPQJFuSImc+Ex11qtE9OMhCmQzv8lIGEwnOD8gYTrAQd9XGZo6z
LJS6hr9zmYNAQ0+l1tvdYaGPNW94xvgIVJvGZV+ayUIdR7ebvhYmkEfIMGH7
k4WOqcj/kpIlUIfFI45SRwKZD9yfTdAmUOnBCFOOQALJz+0QeL6dQBH6vnG2
aQTablzAX6NPIH3F4wocvQTSjKl86rWfQFmzvMjW5hc6afK355k1gW4wF+6U
XPuFsmeSMxfsCWTVw2hal/QL0fDBjRtPEYi34a11SccvxC/43svwAoFGqkof
r5v7hYoqvqspXSIQLkhn2KwfQ6exc9ykJ4E8Y/191lmMIeVQ7KF9jUDGoS6v
bLzHUPmG8J7C6wRS9LdaUxI7hma6x8f4bxKo85R2jM33MTS4v3AiIIRAoPXr
WfGRcXQzKkOe/oBAkkpdM2vdxxGFpWrfFEeg35IfdtjcH0dRIRpKJxIIlL06
8+PaL+Oo1m/eUuERgQL/RFNsxsaR1VaVGkdSB2tWgGUx7wSSW8rMuP2YQHzf
bIatD00gzhrnP75ZZD8NB9SLXSbQnNaQvUkOgepebLu8NnwCOb4VMlqXR6Ck
Z/Rq67wJlFRpkpmZTyCvx8Krij9MoMnXHDeUCwhkGrdq/1rGBJLg/fxf9DMC
xb69su8Z+ySKVTVM6C8k66kdZ1kKTyI2mkqbSDGBLladiVytMIn2eliGapQQ
SOPAUblV2pNoRf+cqEEpgSY7d5auGE0i6fqAUzplpL8uykbLxyfRb9t7Hjzl
5PqLwm3/zk6irWVp+q9J1rm7cm7xyiT6k8/8aFlBoL/SxPx86CR6dPG10H8k
Vz1ri5hLnETZzuniSpUEuqZfT/2bP4nUTBW6HUje+d+zotmaSeQsym3tS/KS
Q+LumaZJNLOwLe4yybWTQd+neybRcGDZXVOSA2+6n5kan0Sf3bKBm2QDIdu/
EyuTKPirXUk2uR77k31h45QpNLRwoE+B5LdaWlJjG6aQ4s3lxptkvcFvZZ4R
W6aQvf4W7zqyv/3HuRHLcAolHca9fWT/XCOzzYxjU2hO+AlnP6lPo8+A0+iZ
KeSntvy7jtTvLsfnmWGfKfTdWyTjVhGpf0JV8FDIFBqkmIjQSb0pKpniPxOm
kKblFuNc0p8HB/129ldPIROvH8JHST+PdZ/90vtpCs3InM3xIf0WczVz7Pkx
hYzFFTmvk3lIuqcS1LU8hWidx/XUybzYyoiKdQpMo/p1mZTWVAJRi9hy2+Wm
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
Ja5VdqP/AR1dc7g=
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
4ieDaM3GZxYzKprg/SHo8cXcQfQ/vszy2Q==
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5Q==
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DUZMdLSwVm//GinQipHQN3ZiIl3bPfabNaWgozj4bkkqE/19uvMlp6UU5JbV
lidJspCXob5ZSrwUGOSL/Z4YZCGOC/Ehdx9KQQXvd3HKBAtFp44XXk2Sgk2x
x3Q2L7DQc66c1aeeSsG0eZcwhzgb9dXKsWlvpEBn5CZrqyEbHT4yH5PfIgWd
Y+OPNtwir0dYV2f8lAKH0fnX1+PZyLO0cPZepxQsR8tLViaz0W2Fc05+/VIg
bd+c2J3HRtW9vzdvm5KC0GMbiwu/s5HehQ9tn8SlgfJs3cAHcQJ9SpVfUSwt
DUoTDZ/15Qlk1eyHsuWl4WFVpm88hUAXdDSf3aBKw1hzqMSEJoGy51Ivm2+S
Btt0zgc7zAikt2HhJdKTBsnJZ0I1lmQ8O5s+ra3S0H0jVlzThkA9FaJmEkbS
oHf4RE2mM4FkI0NX/7KUhvsC9dKqQQTKKu2yqDsiDe33U66VhhJIZ8zg+ltb
aTCXodpoRBLI4sAkK8lRGiYKlRXKYwl0Q+IUdvSSBnnzsXDXTDLebjxl5SsN
luGHY3mek/H8FOjGl6Vh+4O9XeGvCFTV3hKjFioNPhsvK6mVEGgu1diJESMN
/olz7TM1BNrxb3uc9n1pyLaQ/MyqJ1Co+ZYq/0fS0NB9wO1DI4EEFtWpPBnS
oPi4K2/yB4HMDqtY7cuShmc8cwePthMoOnd1WMxzadhbUxV3/zeBpI6t6ltd
KA0XnF5NZPURyCZfQPxUiTQMp/XzXR4kUJIAl1FOuTRY8Y+9Vhsh0B+Hea//
v9U0vClg5o0RiFryN133kzTMn7QpkWQRyHUluzmwVhrsHZRWHiEIlOMyzFnV
IA1OGb5szwkCaUl2OJr/kAZDprXRtv8IdPFsS2x8uzToCMfkj04TqLiqobKj
SxoWs/PSL86Q+cvVTCj3kfn891e0fZZA270wxW1IGn63fV6UmyfQ1dpSy5dj
0rC6p8xVb4Gsp1JB6BRbGpYOR+zbuEggfv/cfIMpadi/QfwZ5xKB9jU+7Q35
Jw2fRM8FvyZxtGqKWM28NNCdGhq2LhOoOejBTmEOGaDq3Y9LI7Fka4yXFY8M
zNlYNfWS2Gb9zfSHAjJkPcvClkj8OCy8uVtYBhwtcl5Mk7i7PYhTVUwGzKzW
HyDfNxFV20/7rJQMDC16OV8msUuUh2O+nAw8eNM+yU3iZ39Ox/5TlIGi6JGZ
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
JlnLQNrbcszmKeow3KGpEVjMQP8D/548hg==
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rkQn2qiTZ/KPvhaO/O0pCy7rRP8DoGI7Rg==
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ge+C1m59azSlqAbTax78//94/w+otjq4
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
v0pfftaF/wdzL384
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
u3DiEF6z8YX5jIomeH4MeH45Zwj/D0IP+dk=
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5Q==
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9rYcs3mKOgx3aGoEFjPw/wCaAzyG
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#11"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rkQn3qiTZ/KPvhaO/O0pCy7rxP8DEd9DRg==
          "]]}, Annotation[#, "Charting`Private`Tag$11522044#12"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 4 Pi}, {-0.9999999846820761, 0.9999999846820761}}, {{
        0, 12.566370614359172`}, {-0.9999999846820761, 0.9999999846820761}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", "x", ")"}], 
       RowBox[{
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"], "-", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{"-", 
         RowBox[{"sin", "(", 
           RowBox[{"x", "+", 
             RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}], "+", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{"sin", "(", 
         RowBox[{"x", "+", 
           RowBox[{"120", " ", "\[Degree]"}]}], ")"}], 
       RowBox[{
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}], "-", 
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"]}], 
       RowBox[{"-", 
         RowBox[{"sin", "(", "x", ")"}]}], 
       RowBox[{
         RowBox[{"-", 
           FractionBox[
            RowBox[{"sin", "(", "x", ")"}], "2"]}], "+", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{"sin", "(", 
         RowBox[{"x", "+", 
           RowBox[{"240", " ", "\[Degree]"}]}], ")"}], 
       RowBox[{
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}], "-", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{"-", 
         RowBox[{"sin", "(", 
           RowBox[{"x", "+", 
             RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm], ",", 
               TagBox[#10, HoldForm], ",", 
               TagBox[#11, HoldForm], ",", 
               TagBox[#12, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.781974674664764*^9, {3.781974816652169*^9, 3.7819748234550157`*^9}, 
   3.781974894271713*^9, 3.7819749264078054`*^9, {3.7819749914369698`*^9, 
   3.7819750026220713`*^9}, {3.781975041244843*^9, 3.781975047832218*^9}, {
   3.7819750895636544`*^9, 3.7819751479066963`*^9}, {3.7819751905676556`*^9, 
   3.781975225894182*^9}, {3.7819752682499948`*^9, 3.7819752882993603`*^9}, 
   3.7819753550379863`*^9, 3.7819755053621387`*^9, {3.782066879330961*^9, 
   3.782066924040657*^9}},
 CellLabel->
  "Out[343]=",ExpressionUUID->"7a4d2f10-1550-4759-82a5-ab7a310c1877"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"Sin", "[", "x", "]"}]}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", " ", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"3", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", " ", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"240", "Degree"}]}], "]"}]}]}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"4", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"4", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", 
                 "+", " ", 
                 RowBox[{
                  RowBox[{"Sin", " ", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"5", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"5", ",", 
                RowBox[{"Sin", " ", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"120", "Degree"}]}], "]"}]}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"6", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"6", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", " ", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"7", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"7", ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"8", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"8", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"9", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"9", ",", 
                RowBox[{"Sin", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"240", "Degree"}]}], "]"}]}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"10", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"11", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"11", ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}]}]}], "}"}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"12", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"12", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}]}], 
             "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"8", "Pi"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7762449690289106`*^9, 3.7762450605662785`*^9}, {
   3.776245309881672*^9, 3.7762453463170457`*^9}, {3.776245377928497*^9, 
   3.7762453853950386`*^9}, {3.7762454445533295`*^9, 3.776245460482154*^9}, 
   3.7762455145294952`*^9, {3.7762455691335897`*^9, 3.7762455789996467`*^9}, {
   3.7762457270858417`*^9, 3.7762458107863073`*^9}, {3.776245966410675*^9, 
   3.776246053295764*^9}, {3.776246161638256*^9, 3.776246207537467*^9}, {
   3.7762462488948193`*^9, 3.776246435158884*^9}, {3.7762464760842686`*^9, 
   3.776246491527777*^9}, {3.776246529926833*^9, 3.77624654404292*^9}, {
   3.776246592775745*^9, 3.776246593225543*^9}, {3.7762466589924583`*^9, 
   3.776246698520618*^9}, {3.7762467371614647`*^9, 3.776246740547331*^9}, {
   3.7762467719559793`*^9, 3.776246785481386*^9}, {3.776246858903221*^9, 
   3.7762468748539686`*^9}, {3.7762469053433285`*^9, 3.776246939629203*^9}, {
   3.7762469760976486`*^9, 3.776247025338337*^9}, {3.776247230731118*^9, 
   3.7762472325874195`*^9}, {3.776247328827531*^9, 3.7762474783868637`*^9}, {
   3.7762475300335674`*^9, 3.77624759183002*^9}, 3.7762476288727508`*^9, {
   3.776247890156777*^9, 3.7762478928210735`*^9}, {3.7762479636495395`*^9, 
   3.776248040476509*^9}, {3.7762481334245214`*^9, 3.7762481674585814`*^9}, {
   3.7762482453504972`*^9, 3.776248293453601*^9}, {3.776248324986379*^9, 
   3.776248330392412*^9}, {3.7762484628895826`*^9, 3.7762485492312374`*^9}, {
   3.7762486040964108`*^9, 3.77624860541604*^9}, {3.7762487376151795`*^9, 
   3.776248762969157*^9}, {3.7762489113584657`*^9, 3.7762489239940205`*^9}, {
   3.7762489942395487`*^9, 3.776249015055442*^9}, {3.7762492823811564`*^9, 
   3.776249380934408*^9}, {3.776249418658967*^9, 3.776249418881044*^9}, {
   3.7762496550446444`*^9, 3.7762497079439783`*^9}, {3.7762502573466063`*^9, 
   3.7762502626155667`*^9}, {3.776250297888674*^9, 3.7762503038766537`*^9}, {
   3.776250758540631*^9, 3.7762507608885183`*^9}, {3.776257780916114*^9, 
   3.7762578113520937`*^9}, 3.7762584976156335`*^9, {3.776258530155101*^9, 
   3.7762585782416635`*^9}, 3.7762589199114966`*^9, {3.7762597761452665`*^9, 
   3.77625979479117*^9}, {3.776259859772766*^9, 3.776259860787538*^9}, {
   3.7762599389191523`*^9, 3.7762599393769283`*^9}, 3.776260025537594*^9, {
   3.776260090564295*^9, 3.7762600922188663`*^9}, {3.7762601994082203`*^9, 
   3.7762602153827143`*^9}, 3.776260308763921*^9, {3.7762625807884316`*^9, 
   3.7762626163135805`*^9}, {3.776262757353982*^9, 3.776262822152968*^9}, {
   3.7762629119065504`*^9, 3.776263254791382*^9}, {3.7762632935835934`*^9, 
   3.77626331722681*^9}, {3.7762633896819887`*^9, 3.7762634189520645`*^9}, {
   3.776263485908491*^9, 3.776263520470005*^9}, {3.776263551345936*^9, 
   3.7762636038950686`*^9}, {3.7762636491909237`*^9, 
   3.7762636550673294`*^9}, {3.7762637082993145`*^9, 3.776263711777449*^9}, {
   3.776263768906886*^9, 3.7762638313266144`*^9}, {3.7762639462354436`*^9, 
   3.776264001638835*^9}, {3.7762640481551323`*^9, 3.7762640486239004`*^9}, {
   3.776264230186479*^9, 3.7762642309363127`*^9}, {3.7762643073714542`*^9, 
   3.776264520437558*^9}, {3.7762645539558334`*^9, 3.776264554846249*^9}, {
   3.776264621413288*^9, 3.776264667797309*^9}, 3.7817895980756216`*^9, {
   3.7818029544968014`*^9, 3.7818029922278757`*^9}, {3.7819753703709993`*^9, 
   3.7819753983611746`*^9}, 3.7819754880903096`*^9, {3.781975526676165*^9, 
   3.7819756178803596`*^9}, 3.781979406428888*^9, {3.7819796773856*^9, 
   3.7819796773995748`*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"71bb48b4-9786-41ed-b234-45620552a2b5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 8 Pi}}, Typeset`size$$ = {396., {61., 67.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$11522169$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$11522169$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, Thick, 
         Line[{{{1, 0}, {1, 
             Sin[$CellContext`x$$]}}, {{2, 0}, {
            2, Sin[$CellContext`x$$]/2 - Sin[$CellContext`x$$ + 240 Degree]/
             2}}, {{3, 0}, {3, -Sin[$CellContext`x$$ + 240 Degree]}}, {{4, 
            0}, {4, (-Sin[$CellContext`x$$ + 240 Degree])/2 + 
             Sin[$CellContext`x$$ + 120 Degree]/2}}, {{5, 0}, {5, 
             Sin[$CellContext`x$$ + 120 Degree]}}, {{6, 0}, {
            6, Sin[$CellContext`x$$ + 120 Degree]/2 - Sin[$CellContext`x$$]/
             2}}, {{7, 0}, {7, -Sin[$CellContext`x$$]}}, {{8, 0}, {
            8, (-Sin[$CellContext`x$$])/2 + 
             Sin[$CellContext`x$$ + 240 Degree]/2}}, {{9, 0}, {9, 
             Sin[$CellContext`x$$ + 240 Degree]}}, {{10, 0}, {
            10, Sin[$CellContext`x$$ + 240 Degree]/2 - 
             Sin[$CellContext`x$$ + 120 Degree]/2}}, {{11, 0}, {
            11, -Sin[$CellContext`x$$ + 120 Degree]}}, {{12, 0}, {
            12, (-Sin[$CellContext`x$$ + 120 Degree])/2 + 
             Sin[$CellContext`x$$]/2}}}]}, Axes -> True, GridLines -> 
        Automatic, PlotRange -> {{-1, 13}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`x$$, 0, 8 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{451., {111., 118.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.776248172112703*^9, 3.7762482949063764`*^9, 3.776248332416596*^9, {
   3.776248485969389*^9, 3.7762485051805077`*^9}, 3.776248551710824*^9, 
   3.776248607175286*^9, {3.77624874004272*^9, 3.776248764419879*^9}, 
   3.7762489330253615`*^9, 3.7762490165171986`*^9, 3.776249525806875*^9, {
   3.776249699187179*^9, 3.776249709410354*^9}, 3.7762502635027027`*^9, 
   3.776250762718732*^9, 3.7762508210760403`*^9, 3.776257817685461*^9, 
   3.7762585151978474`*^9, 3.7762589231523747`*^9, 3.7762597993297343`*^9, 
   3.776259871558988*^9, 3.776259976104507*^9, 3.7762600571043334`*^9, 
   3.7762600934650197`*^9, 3.7762602178747873`*^9, 3.7762603098294153`*^9, {
   3.7762625870929747`*^9, 3.7762626018213043`*^9}, {3.7762627629961863`*^9, 
   3.776262792256454*^9}, 3.776262825415874*^9, {3.776262935860692*^9, 
   3.776263008238638*^9}, {3.776263047806803*^9, 3.7762630802105947`*^9}, 
   3.7762631126964726`*^9, {3.7762632156129923`*^9, 3.7762632189093895`*^9}, 
   3.776263319642626*^9, {3.776263404665512*^9, 3.77626342027991*^9}, 
   3.7762636311256104`*^9, {3.776263776421623*^9, 3.776263803418232*^9}, 
   3.7762638345455723`*^9, 3.7762640066890154`*^9, 3.776264050467695*^9, 
   3.7762643198585916`*^9, 3.776264355214696*^9, {3.776264420268625*^9, 
   3.7762644489484596`*^9}, 3.7762645246104064`*^9, 3.7762646224446497`*^9, {
   3.776264653745229*^9, 3.776264672256291*^9}, {3.7818029973342247`*^9, 
   3.781803000042986*^9}, 3.7819756205830946`*^9, 3.7819794231512213`*^9, {
   3.782066879417712*^9, 3.782066924128394*^9}},
 CellLabel->
  "Out[344]=",ExpressionUUID->"8e177903-6b13-49aa-9414-172d36505ecb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Red", ",", "Thick", ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "10"}], "]"}], ",", "Blue", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"345", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"15", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Black", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Green", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"105", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"135", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Blue", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Black", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"225", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"255", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Green", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Red", ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"magnetic", " ", "induction", " ", "vectors"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"0", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"0", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", "x", "]"}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", "x", "]"}], ")"}]}]}]}], "}"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"30", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"30", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"60", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"60", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", " ", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", " ", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"90", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"90", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"120", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"120", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", " ", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", " ", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}], ")"}]}]}]}], "}"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"150", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"150", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", "10"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"180", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"180", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]}], "}"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"210", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"210", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"240", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"240", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"240", "Degree"}]}], "]"}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"240", "Degree"}]}], "]"}], ")"}]}]}]}], "}"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"270", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"270", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"300", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"300", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"330", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"330", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "rotating", " ", "magnetic", " ", "induction", " ", "vector"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", "x", "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", " ", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}], "+",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"240", "Degree"}]}], "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", "x", "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"60", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"120", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", " ", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"120", "Degree"}]}], "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}], "+",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"180", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"240", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"240", "Degree"}]}], "]"}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"300", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "11"}], ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "11"}], ",", "11"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"8", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781783895613417*^9, 3.7817838958188086`*^9}, {
   3.781784045610384*^9, 3.781784070141843*^9}, {3.781784130461586*^9, 
   3.7817842175627627`*^9}, {3.781784252896265*^9, 3.78178432063718*^9}, {
   3.781784354270313*^9, 3.781784396656995*^9}, {3.7817844306087265`*^9, 
   3.7817844632275577`*^9}, {3.7817847898314524`*^9, 3.781784845537565*^9}, {
   3.7817848894152517`*^9, 3.781784892719408*^9}, {3.7817849341925416`*^9, 
   3.78178496689412*^9}, {3.7817850071874046`*^9, 3.78178500819073*^9}, {
   3.7817850465980644`*^9, 3.7817850750101085`*^9}, {3.7817851343514414`*^9, 
   3.78178513495786*^9}, {3.7817855408438396`*^9, 3.781785550641647*^9}, {
   3.78178560637965*^9, 3.781785687179655*^9}, {3.781785750411622*^9, 
   3.7817858164032135`*^9}, {3.7817858978275414`*^9, 3.781785935769122*^9}, {
   3.781786016419527*^9, 3.7817860192908163`*^9}, {3.7817861127978516`*^9, 
   3.7817861268223763`*^9}, {3.7817861917039657`*^9, 
   3.7817861922155504`*^9}, {3.781786303838191*^9, 3.781786312373344*^9}, {
   3.7817863796195803`*^9, 3.781786456165988*^9}, 3.781786511912964*^9, {
   3.7817866364601164`*^9, 3.7817866621843224`*^9}, {3.7817870767716846`*^9, 
   3.7817871542036877`*^9}, {3.781787225270745*^9, 3.7817872439009123`*^9}, {
   3.781787315887333*^9, 3.7817874097248454`*^9}, {3.7817874653720026`*^9, 
   3.781787595824313*^9}, {3.781787641208954*^9, 3.781787688276168*^9}, {
   3.7817877545463142`*^9, 3.7817878680838127`*^9}, {3.781787901387783*^9, 
   3.7817879072989483`*^9}, {3.7817881582491055`*^9, 
   3.7817881662936316`*^9}, {3.7817882097205563`*^9, 
   3.7817882698617725`*^9}, {3.781788395366871*^9, 3.781788413997045*^9}, {
   3.781788534749242*^9, 3.7817885365892963`*^9}, {3.7817886464705987`*^9, 
   3.78178865382294*^9}, {3.781788699218585*^9, 3.7817888623096113`*^9}, {
   3.7817889072016077`*^9, 3.781788974523642*^9}, {3.781789015242753*^9, 
   3.7817890440816984`*^9}, {3.7817892444060936`*^9, 3.781789279050476*^9}, {
   3.7817893950015182`*^9, 3.781789399855506*^9}, {3.781789441711623*^9, 
   3.7817894622437677`*^9}, {3.7817895314098644`*^9, 3.78178958094744*^9}, {
   3.7817896119036913`*^9, 3.7817896490254564`*^9}, {3.7817905670495577`*^9, 
   3.781790568576501*^9}, {3.7817915278830123`*^9, 3.7817915318514357`*^9}, {
   3.7817924393165607`*^9, 3.781792440664956*^9}, 3.7817925174706764`*^9, {
   3.781792563872597*^9, 3.781792639724867*^9}, {3.781792879108904*^9, 
   3.7817928823542957`*^9}, {3.7817930130582137`*^9, 3.781793067569532*^9}, {
   3.7817931405332594`*^9, 3.781793151134012*^9}, {3.7817931904740877`*^9, 
   3.7817931913128705`*^9}, 3.7817932657817755`*^9, {3.7817933100314684`*^9, 
   3.7817933283624897`*^9}, {3.7817933890821323`*^9, 
   3.7817934106235857`*^9}, {3.7817934538191133`*^9, 3.78179350551292*^9}, {
   3.7817935769888525`*^9, 3.7817936089105234`*^9}, {3.7817936509401646`*^9, 
   3.781793708516218*^9}, {3.781793781119135*^9, 3.781793851230756*^9}, {
   3.7817939182535477`*^9, 3.7817939403904047`*^9}, {3.781793970586649*^9, 
   3.7817939718004036`*^9}, {3.781794010857995*^9, 3.7817940373102837`*^9}, {
   3.7817962352914047`*^9, 3.7817962781099453`*^9}, {3.781796311317174*^9, 
   3.781796380012564*^9}, {3.7817964560343075`*^9, 3.781796459340466*^9}, {
   3.7817965295118923`*^9, 3.7817965527288284`*^9}, {3.7817966035778656`*^9, 
   3.7817966352273235`*^9}, {3.7817966755624714`*^9, 
   3.7817969065300694`*^9}, {3.7817971354919806`*^9, 
   3.7817971617837076`*^9}, {3.7817972599532747`*^9, 3.781797278330117*^9}, {
   3.7817975760104203`*^9, 3.781797623240101*^9}, {3.7817976791895967`*^9, 
   3.7817976951099777`*^9}, {3.781797789349069*^9, 3.7817978008633156`*^9}, {
   3.781797955730285*^9, 3.781798002674793*^9}, {3.781798058319103*^9, 
   3.7817980814263105`*^9}, {3.781798231210667*^9, 3.781798248780631*^9}, {
   3.7817983065322943`*^9, 3.7817983574760747`*^9}, {3.781798390086899*^9, 
   3.781798511958112*^9}, {3.7817985842568426`*^9, 3.7817986004765253`*^9}, {
   3.781798634494602*^9, 3.78179869496795*^9}, {3.781798745939662*^9, 
   3.781798747064623*^9}, {3.7817987842193336`*^9, 3.7817988463353076`*^9}, {
   3.781798886855968*^9, 3.781799095979568*^9}, {3.7817992087750187`*^9, 
   3.781799222594098*^9}, {3.7817992563917503`*^9, 3.781799334140851*^9}, {
   3.781799612974471*^9, 3.7817996651660137`*^9}, {3.7817997131064205`*^9, 
   3.781799720641341*^9}, {3.781800014506775*^9, 3.781800081492647*^9}, {
   3.7818001440890083`*^9, 3.7818001774089975`*^9}, {3.7818002361798306`*^9, 
   3.781800324379114*^9}, {3.7818010452641354`*^9, 3.7818010623764267`*^9}, {
   3.781801111747695*^9, 3.781801148950241*^9}, 3.781801434768199*^9, {
   3.781801483540753*^9, 3.781801496318595*^9}, {3.781801898277136*^9, 
   3.7818019035919275`*^9}, {3.7818019358011103`*^9, 
   3.7818019636626215`*^9}, {3.7818024892015*^9, 3.7818025132203226`*^9}, {
   3.7818029742081013`*^9, 3.781802982689432*^9}, {3.7818031568658223`*^9, 
   3.7818031710080214`*^9}, {3.7819785835851755`*^9, 
   3.7819788397527246`*^9}, {3.7819789204361005`*^9, 
   3.7819792123058133`*^9}, {3.7819792982321653`*^9, 3.781979309848096*^9}, {
   3.781979364843079*^9, 3.78197939231265*^9}, {3.781979448939267*^9, 
   3.78197944933225*^9}, {3.781979677410549*^9, 3.781979677626946*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"bc44fa5f-25ad-45c9-893d-4193779e2eff"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 8 Pi}}, Typeset`size$$ = {
    396., {195., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`x$11522193$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$11522193$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, Thick, 
         Circle[{0, 0}, 10], Blue, 
         Circle[{Sin[345 Degree] 10, Cos[345 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[345 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[345 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[345 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[345 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[345 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[345 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[345 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[345 Degree] 10}}], 
         Circle[{Sin[15 Degree] 10, Cos[15 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[15 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[15 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[15 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[15 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[15 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[15 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[15 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[15 Degree] 10}}], Black, 
         Circle[{Sin[45 Degree] 10, Cos[45 Degree] 10}, 1], 
         Disk[{Sin[45 Degree] 10, Cos[45 Degree] 10}, 0.5], 
         Circle[{Sin[75 Degree] 10, Cos[75 Degree] 10}, 1], 
         Disk[{Sin[75 Degree] 10, Cos[75 Degree] 10}, 0.5], Green, 
         Circle[{Sin[105 Degree] 10, Cos[105 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[105 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[105 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[105 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[105 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[105 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[105 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[105 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[105 Degree] 10}}], 
         Circle[{Sin[135 Degree] 10, Cos[135 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[135 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[135 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[135 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[135 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[135 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[135 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[135 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[135 Degree] 10}}], Blue, 
         Circle[{Sin[165 Degree] 10, Cos[165 Degree] 10}, 1], 
         Disk[{Sin[165 Degree] 10, Cos[165 Degree] 10}, 0.5], 
         Circle[{Sin[195 Degree] 10, Cos[195 Degree] 10}, 1], 
         Disk[{Sin[195 Degree] 10, Cos[195 Degree] 10}, 0.5], Black, 
         Circle[{Sin[225 Degree] 10, Cos[225 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[225 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[225 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[225 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[225 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[225 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[225 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[225 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[225 Degree] 10}}], 
         Circle[{Sin[255 Degree] 10, Cos[255 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[255 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[255 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[255 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[255 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[255 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[255 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[255 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[255 Degree] 10}}], Green, 
         Circle[{Sin[285 Degree] 10, Cos[285 Degree] 10}, 1], 
         Disk[{Sin[285 Degree] 10, Cos[285 Degree] 10}, 0.5], 
         Circle[{Sin[315 Degree] 10, Cos[315 Degree] 10}, 1], 
         Disk[{Sin[315 Degree] 10, Cos[315 Degree] 10}, 0.5], Red, 
         Line[{{{Sin[0 Degree] 10, Cos[0 Degree] 10}, {
            Sin[0 Degree] 10 + Sin[0 Degree] Sin[$CellContext`x$$], 
             Cos[0 Degree] 10 + Cos[0 Degree] Sin[$CellContext`x$$]}}, {{
            Sin[30 Degree] 10, Cos[30 Degree] 10}, {
            Sin[30 Degree] 10 + 
             Sin[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 240 Degree]/2), Cos[30 Degree] 10 + 
             Cos[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 240 Degree]/2)}}, {{
            Sin[60 Degree] 10, Cos[60 Degree] 10}, {
            Sin[60 Degree] 10 + 
             Sin[60 Degree] (-Sin[$CellContext`x$$ + 240 Degree]), 
             Cos[60 Degree] 10 + 
             Cos[60 Degree] (-Sin[$CellContext`x$$ + 240 Degree])}}, {{
            Sin[90 Degree] 10, Cos[90 Degree] 10}, {
            Sin[90 Degree] 10 + 
             Sin[90 Degree] ((-Sin[$CellContext`x$$ + 240 Degree])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2), Cos[90 Degree] 10 + 
             Cos[90 Degree] ((-Sin[$CellContext`x$$ + 240 Degree])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2)}}, {{
            Sin[120 Degree] 10, Cos[120 Degree] 10}, {
            Sin[120 Degree] 10 + 
             Sin[120 Degree] Sin[$CellContext`x$$ + 120 Degree], 
             Cos[120 Degree] 10 + 
             Cos[120 Degree] Sin[$CellContext`x$$ + 120 Degree]}}, {{
            Sin[150 Degree] 10, Cos[150 Degree] 10}, {
            Sin[150 Degree] 10 + 
             Sin[150 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$]/2), Cos[150 Degree] 10 + 
             Cos[150 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$]/2)}}, {{
            Sin[180 Degree] 10, Cos[180 Degree] 10}, {
            Sin[180 Degree] 10 + Sin[180 Degree] (-Sin[$CellContext`x$$]), 
             Cos[180 Degree] 10 + 
             Cos[180 Degree] (-Sin[$CellContext`x$$])}}, {{
            Sin[210 Degree] 10, Cos[210 Degree] 10}, {
            Sin[210 Degree] 10 + 
             Sin[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2), Cos[210 Degree] 10 + 
             Cos[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2)}}, {{
            Sin[240 Degree] 10, Cos[240 Degree] 10}, {
            Sin[240 Degree] 10 + 
             Sin[240 Degree] Sin[$CellContext`x$$ + 240 Degree], 
             Cos[240 Degree] 10 + 
             Cos[240 Degree] Sin[$CellContext`x$$ + 240 Degree]}}, {{
            Sin[270 Degree] 10, Cos[270 Degree] 10}, {
            Sin[270 Degree] 10 + 
             Sin[270 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2), Cos[270 Degree] 10 + 
             Cos[270 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2)}}, {{
            Sin[300 Degree] 10, Cos[300 Degree] 10}, {
            Sin[300 Degree] 10 + 
             Sin[300 Degree] (-Sin[$CellContext`x$$ + 120 Degree]), 
             Cos[300 Degree] 10 + 
             Cos[300 Degree] (-Sin[$CellContext`x$$ + 120 Degree])}}, {{
            Sin[330 Degree] 10, Cos[330 Degree] 10}, {
            Sin[330 Degree] 10 + 
             Sin[330 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$]/2), Cos[330 Degree] 10 + 
             Cos[330 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$]/2)}}, {{0, 0}, {
            Sin[0 Degree] Sin[$CellContext`x$$] + 
             Sin[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Sin[60 Degree] (-Sin[$CellContext`x$$ + 240 Degree]) + 
             Sin[90 Degree] ((-Sin[$CellContext`x$$ + 240 Degree])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Sin[120 Degree] Sin[$CellContext`x$$ + 120 Degree] + 
             Sin[150 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$]/2) + 
             Sin[180 Degree] (-Sin[$CellContext`x$$]) + 
             Sin[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Sin[240 Degree] Sin[$CellContext`x$$ + 240 Degree] + 
             Sin[270 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Sin[300 Degree] (-Sin[$CellContext`x$$ + 120 Degree]) + 
             Sin[330 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$]/2), Cos[0 Degree] Sin[$CellContext`x$$] + 
             Cos[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Cos[60 Degree] (-Sin[$CellContext`x$$ + 240 Degree]) + 
             Cos[90 Degree] ((-Sin[$CellContext`x$$ + 240 Degree])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Cos[120 Degree] Sin[$CellContext`x$$ + 120 Degree] + 
             Cos[150 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$]/2) + 
             Cos[180 Degree] (-Sin[$CellContext`x$$]) + 
             Cos[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Cos[240 Degree] Sin[$CellContext`x$$ + 240 Degree] + 
             Cos[270 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Cos[300 Degree] (-Sin[$CellContext`x$$ + 120 Degree]) + 
             Cos[330 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$]/2)}}}]}, Axes -> True, GridLines -> 
        Automatic, PlotRange -> {{-11, 11}, {-11, 11}}], 
      "Specifications" :> {{$CellContext`x$$, 0, 8 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{451., {245., 252.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.781784151762618*^9, 3.7817841652754974`*^9}, {
   3.781784257427188*^9, 3.7817843220075173`*^9}, {3.781784356257967*^9, 
   3.7817843724815903`*^9}, {3.7817844064024353`*^9, 3.7817844649798126`*^9}, 
   3.781784846920844*^9, 3.7817848943201303`*^9, 3.781784938734371*^9, 
   3.7817849688917503`*^9, 3.7817850113362885`*^9, {3.781785048771249*^9, 
   3.7817850778096247`*^9}, 3.7817851512592793`*^9, 3.781785552145625*^9, {
   3.781785611725355*^9, 3.781785687833867*^9}, 3.781785938575618*^9, 
   3.781786021126942*^9, 3.781786130148506*^9, 3.78178620740897*^9, 
   3.781786316997017*^9, 3.7817868083924785`*^9, {3.781787296194944*^9, 
   3.7817873176745577`*^9}, 3.78178752774131*^9, 3.7817875584262824`*^9, 
   3.781787599323921*^9, 3.781787664085833*^9, 3.78178787224469*^9, 
   3.7817879089714775`*^9, 3.7817881906495275`*^9, 3.7817882754932575`*^9, 
   3.7817884160914516`*^9, 3.7817885380144873`*^9, 3.7817887897141085`*^9, 
   3.781788863479488*^9, 3.7817889220499115`*^9, 3.781788977159591*^9, 
   3.781789045379233*^9, 3.7817892815597363`*^9, 3.7817894670837903`*^9, 
   3.781789651231524*^9, 3.7817899917041245`*^9, 3.7817905750750685`*^9, 
   3.7817915336206756`*^9, 3.7817924426297054`*^9, 3.781792519620922*^9, 
   3.7817925996440077`*^9, 3.781792919034177*^9, 3.78179333177137*^9, 
   3.7817934660803013`*^9, 3.7817935065292063`*^9, 3.781793609838005*^9, {
   3.7817936965253057`*^9, 3.7817937094328146`*^9}, 3.78179385238964*^9, 
   3.781793920674117*^9, 3.7817940670627823`*^9, 3.78179638277516*^9, 
   3.7817964604514723`*^9, 3.7817965545370073`*^9, {3.781796616964119*^9, 
   3.781796638049756*^9}, 3.781796800244136*^9, {3.781796879462369*^9, 
   3.7817969085346813`*^9}, {3.781797149729921*^9, 3.781797163107162*^9}, 
   3.781797280422559*^9, 3.781797624590491*^9, 3.781797696479356*^9, 
   3.781797802651537*^9, 3.7817980058343754`*^9, 3.7817982695860233`*^9, 
   3.781798316394893*^9, 3.7817983587666245`*^9, 3.781798443463213*^9, 
   3.7817985130262566`*^9, 3.7817986094066267`*^9, 3.781798699137742*^9, {
   3.7817987633849955`*^9, 3.781798803626422*^9}, 3.7817988477295256`*^9, 
   3.781798921515315*^9, {3.7817989625446*^9, 3.781798990988564*^9}, 
   3.781799054335829*^9, 3.781799128006891*^9, 3.7817992617982388`*^9, 
   3.78179929233963*^9, 3.7817993354673405`*^9, 3.781799676838749*^9, 
   3.781799721945791*^9, 3.781800117777742*^9, 3.7818002154811625`*^9, 
   3.78180132639384*^9, 3.7818014401477633`*^9, 3.781801904718908*^9, 
   3.7818019443861127`*^9, 3.781803006302252*^9, 3.781979213467708*^9, 
   3.7819793123364477`*^9, 3.781979351772029*^9, 3.78197943594498*^9, {
   3.782066879631109*^9, 3.782066924334852*^9}},
 CellLabel->
  "Out[345]=",ExpressionUUID->"6ac1a07a-b933-4997-89a8-a956bf473af0"]
}, Open  ]],

Cell[TextData[{
 StyleBox["U1",
  FontColor->RGBColor[0, 0, 1]],
 ": \t0\[Degree]\t\t",
 StyleBox["V1",
  FontColor->RGBColor[0, 1, 0]],
 ":\t120\[Degree]\t\t",
 StyleBox["W1",
  FontColor->GrayLevel[0]],
 ":\t240\[Degree]\t\n",
 StyleBox["U2",
  FontColor->RGBColor[0, 0, 1]],
 ":\t180\[Degree]\t\t",
 StyleBox["V2",
  FontColor->RGBColor[0, 1, 0]],
 ":\t 300\[Degree]\t\t",
 StyleBox["W2",
  FontColor->GrayLevel[0]],
 ":\t 60\[Degree]"
}], "Text",
 CellChangeTimes->{{3.7820594046329155`*^9, 3.782059659928439*^9}, {
   3.7821512158717422`*^9, 3.7821512381920757`*^9}, {3.782151271144985*^9, 
   3.782151378421214*^9}, {3.7821517074935455`*^9, 3.7821517838603897`*^9}, {
   3.7821518230775547`*^9, 3.7821518611408033`*^9}, {3.7821522899724483`*^9, 
   3.782152324887113*^9}, {3.782152359247261*^9, 3.7821523599812994`*^9}, 
   3.78215240852952*^9, 
   3.7821540552318926`*^9},ExpressionUUID->"d9d41912-0e2d-485a-b600-\
842803ad7df2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wiring diagram", "Subtitle",
 CellChangeTimes->{{3.782067767992212*^9, 3.782067770890467*^9}, {
  3.7820678015145664`*^9, 
  3.7820678017778606`*^9}},ExpressionUUID->"d247b0e5-69bf-4e55-bd3b-\
e990f9c6b5c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"circuit", "[", 
   RowBox[{"x_:", "0"}], "]"}], ":=", 
  RowBox[{"Line", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", "x"}], ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", "x"}], ",", "10"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4.5", "+", "x"}], ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"8", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"8", "+", "x"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5", "+", "x"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "x"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4.5", "+", "x"}], ",", "12"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "+", "x"}], ",", 
       RowBox[{"-", "4"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7820649015936193`*^9, 3.7820649018061123`*^9}, {
   3.7820651468467274`*^9, 3.78206519785039*^9}, {3.7820652420452137`*^9, 
   3.7820652558762703`*^9}, {3.7820652917902355`*^9, 3.782065313941027*^9}, 
   3.7820668489381895`*^9, {3.7821483635801463`*^9, 3.78214836400605*^9}, {
   3.782148461813548*^9, 3.782148462885724*^9}, {3.7821504978452234`*^9, 
   3.782150498341889*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"1306cbfe-97dd-4c85-bc52-3040791785a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"circuit", "[", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"U1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"U2", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "Black", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"9", ",", 
          RowBox[{"-", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"12.5", ",", "13"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"12.5", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"10", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"12.5", ",", "12"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "13"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "12"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"W2", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"W1", ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "Green", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"circuit", "[", "4", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"V1", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"V2", ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}],
    ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "14"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "14"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7820542317586217`*^9, 3.7820542984742765`*^9}, {
   3.782054334989702*^9, 3.782054376603456*^9}, {3.78205442025174*^9, 
   3.7820545109562674`*^9}, {3.7820545414637156`*^9, 
   3.7820545929580603`*^9}, {3.7820547125752983`*^9, 3.782054779413662*^9}, {
   3.7820548498234396`*^9, 3.782054992007351*^9}, {3.7820550689496355`*^9, 
   3.782055101001954*^9}, {3.7820551533610168`*^9, 3.782055194286584*^9}, {
   3.782055231399435*^9, 3.782055262276831*^9}, {3.7820552939342375`*^9, 
   3.7820553033969398`*^9}, {3.782055364319089*^9, 3.782055375121194*^9}, {
   3.782055431078623*^9, 3.7820554342261753`*^9}, {3.782056783634048*^9, 
   3.782056788029334*^9}, {3.7820577354090385`*^9, 3.7820577618284426`*^9}, {
   3.7820578380566835`*^9, 3.782057904132043*^9}, 3.782057939149399*^9, {
   3.7820579811461716`*^9, 3.7820579813147154`*^9}, {3.782058103412324*^9, 
   3.7820582177715836`*^9}, {3.7820593448377867`*^9, 3.782059345911875*^9}, {
   3.782059738433578*^9, 3.782059758548805*^9}, {3.7820598645843573`*^9, 
   3.782059867894556*^9}, {3.7820599233891535`*^9, 3.782059948102123*^9}, {
   3.7820600320267754`*^9, 3.7820600744533296`*^9}, {3.7820601123151155`*^9, 
   3.782060146228496*^9}, {3.7820602317857804`*^9, 3.7820604431108675`*^9}, {
   3.7820613981228*^9, 3.7820614059199123`*^9}, {3.782064937800831*^9, 
   3.7820649432622643`*^9}, {3.7820653969451323`*^9, 
   3.7820654075836945`*^9}, {3.782066851123372*^9, 3.78206685629852*^9}, 
   3.7821480700079374`*^9, 3.782148100308931*^9, {3.782148308968135*^9, 
   3.782148333942374*^9}, 3.782148476487338*^9, {3.782148532396864*^9, 
   3.7821487320152416`*^9}, {3.7821487791781664`*^9, 3.782148793309432*^9}, {
   3.782148847474595*^9, 3.782148877902291*^9}, {3.7821490297443514`*^9, 
   3.7821491025866275`*^9}, {3.782149138851683*^9, 3.7821491900767536`*^9}, {
   3.7821492277999067`*^9, 3.782149312591242*^9}, {3.782149377750058*^9, 
   3.782149399068071*^9}, {3.782149465326947*^9, 3.7821494937788887`*^9}, {
   3.7821495793930244`*^9, 3.7821496626584387`*^9}, {3.782149714318341*^9, 
   3.7821497168555593`*^9}, {3.7821497599507585`*^9, 3.78214979721012*^9}, {
   3.7821498551023946`*^9, 3.7821500046894855`*^9}, {3.7821501765291667`*^9, 
   3.7821501901078234`*^9}, {3.7821505767532387`*^9, 
   3.7821505773227167`*^9}, {3.782150620162198*^9, 3.782150644257785*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"2392354b-1ec1-44c4-887a-57a45585dd70"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], Thickness[Large], 
    LineBox[{{1, -4}, {1, 10}, {4.5, 13}, {8, 10}, {8, 0}, {5, -2}, {2, 0}, {
      2, 10}, {4.5, 12}, {7, 10}, {7, -4}}], InsetBox["U1", {1, -5}], 
    InsetBox["U2", {7, -5}]}, 
   {GrayLevel[0], Thickness[Large], LineBox[{{9, -4}, {9, 10}, {12.5, 13}}], 
    LineBox[{{12.5, -2}, {10, 0}, {10, 10}, {12.5, 12}}], 
    LineBox[{{0.5, 13}, {4, 10}, {4, 0}, {0.5, -2}}], 
    LineBox[{{0.5, 12}, {3, 10}, {3, -4}}], InsetBox["W2", {3, -5}], 
    InsetBox["W1", {9, -5}]}, 
   {RGBColor[0, 1, 0], Thickness[Large], 
    LineBox[{{5, -4}, {5, 10}, {8.5, 13}, {12, 10}, {12, 0}, {9, -2}, {6, 
      0}, {6, 10}, {8.5, 12}, {11, 10}, {11, -4}}], InsetBox["V1", {5, -5}], 
    InsetBox["V2", {11, -5}]}},
  PlotRange->{{-1, 14}, {-6, 14}}]], "Output",
 CellChangeTimes->{
  3.7820645465599885`*^9, 3.782064619645384*^9, 3.782065442706804*^9, {
   3.782066871597622*^9, 3.7820669245532637`*^9}, 3.7821505497992926`*^9, 
   3.782150645147408*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"7648a214-f32a-4ea8-8da9-655e08802efd"]
}, Open  ]],

Cell[TextData[{
 StyleBox["U1",
  FontColor->RGBColor[0, 0, 1]],
 ": \t0\[Degree]\t\t",
 StyleBox["V1",
  FontColor->RGBColor[0, 1, 0]],
 ":\t120\[Degree]\t\t",
 StyleBox["W1",
  FontColor->GrayLevel[0]],
 ":\t240\[Degree]\t\n",
 StyleBox["U2",
  FontColor->RGBColor[0, 0, 1]],
 ":\t180\[Degree]\t\t",
 StyleBox["V2",
  FontColor->RGBColor[0, 1, 0]],
 ":\t 300\[Degree]\t\t",
 StyleBox["W2",
  FontColor->GrayLevel[0]],
 ":\t 60\[Degree]"
}], "Text",
 CellChangeTimes->{{3.7820594046329155`*^9, 3.782059659928439*^9}, {
   3.7821512158717422`*^9, 3.7821512381920757`*^9}, {3.782151271144985*^9, 
   3.782151378421214*^9}, {3.7821517074935455`*^9, 3.7821517838603897`*^9}, {
   3.7821518230775547`*^9, 3.7821518611408033`*^9}, {3.7821522899724483`*^9, 
   3.782152324887113*^9}, {3.782152359247261*^9, 3.7821523599812994`*^9}, 
   3.78215240852952*^9, 
   3.7821540589878607`*^9},ExpressionUUID->"c03f1087-581d-4ae1-9872-\
8d84bf230c0f"],

Cell[BoxData[
 TemplateBox[{
  "General","prng",
   "\"Value of option PlotRange -> \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is \
not All, Full, Automatic, a positive machine number, or an appropriate list \
of range specifications.\"",2,82,894,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184349548094*^9},
 CellLabel->"",ExpressionUUID->"a610ce41-044b-49d7-80d2-e410e5a29e9a"],

Cell[BoxData[
 TemplateBox[{
  "General","prng",
   "\"Value of option PlotRange -> \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is \
not All, Full, Automatic, a positive machine number, or an appropriate list \
of range specifications.\"",2,82,895,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184349633877*^9},
 CellLabel->"",ExpressionUUID->"587961f4-92a7-4cef-83bc-048aafb3221c"],

Cell[BoxData[
 TemplateBox[{
  "General","prng",
   "\"Value of option PlotRange -> \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is \
not All, Full, Automatic, a positive machine number, or an appropriate list \
of range specifications.\"",2,87,926,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831844505263343`*^9},
 CellLabel->"",ExpressionUUID->"b7b920c2-241a-4f4f-a893-357cb1819c57"],

Cell[BoxData[
 TemplateBox[{
  "General","prng",
   "\"Value of option PlotRange -> \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is \
not All, Full, Automatic, a positive machine number, or an appropriate list \
of range specifications.\"",2,87,927,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184450581188*^9},
 CellLabel->"",ExpressionUUID->"a50506d0-4f1e-4f73-ba2e-540cc2008b50"],

Cell[BoxData[
 TemplateBox[{
  "General","prng",
   "\"Value of option PlotRange -> \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is \
not All, Full, Automatic, a positive machine number, or an appropriate list \
of range specifications.\"",2,91,931,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845610744705`*^9},
 CellLabel->"",ExpressionUUID->"ca855911-1eec-4ba0-b2be-559fa54615fa"],

Cell[BoxData[
 TemplateBox[{
  "General","prng",
   "\"Value of option PlotRange -> \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is \
not All, Full, Automatic, a positive machine number, or an appropriate list \
of range specifications.\"",2,91,932,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845611373005`*^9},
 CellLabel->"",ExpressionUUID->"04717fb5-c715-4b15-b766-0f75bbb3a6fe"],

Cell[BoxData[
 TemplateBox[{
  "General","prng",
   "\"Value of option PlotRange -> \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is \
not All, Full, Automatic, a positive machine number, or an appropriate list \
of range specifications.\"",2,91,935,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184561785597*^9},
 CellLabel->"",ExpressionUUID->"f0306cce-e6ab-4421-8dcf-00e32688ce76"],

Cell[BoxData[
 TemplateBox[{
  "General","prng",
   "\"Value of option PlotRange -> \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is \
not All, Full, Automatic, a positive machine number, or an appropriate list \
of range specifications.\"",2,91,936,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184561853385*^9},
 CellLabel->"",ExpressionUUID->"f7f5a5a8-c279-485a-8b83-fe738869f2b6"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   92,1021,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845851530447`*^9},
 CellLabel->"",ExpressionUUID->"36cf4d60-0a41-49ef-8dd9-e13e413ee635"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1022,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78318458516202*^9},
 CellLabel->"",ExpressionUUID->"87104563-63cf-4fbf-abda-28c95ea8212e"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1023,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845851690426`*^9},
 CellLabel->"",ExpressionUUID->"8a7a543c-961c-41fe-8bbe-1c05f870eaba"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1024,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845851929703`*^9},
 CellLabel->"",ExpressionUUID->"af3efecb-0329-4b08-a37d-a4ca14255bc5"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,92,1025,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78318458521488*^9},
 CellLabel->"",ExpressionUUID->"f0dc0295-c5cd-4e72-b108-d56a86d786a6"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1026,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585236823*^9},
 CellLabel->"",ExpressionUUID->"120d18ac-2aa9-455f-b63f-13313ec30d24"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1027,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845852587633`*^9},
 CellLabel->"",ExpressionUUID->"014f2da1-b63e-404f-988d-a6efe01ce4c2"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,92,1028,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845852787433`*^9},
 CellLabel->"",ExpressionUUID->"c2462df7-e6e0-43f3-87c9-791956af99cb"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   92,1029,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845853634834`*^9},
 CellLabel->"",ExpressionUUID->"38bb3c6d-7f0c-4e00-9c49-37666a1f4ab1"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1030,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845853744545`*^9},
 CellLabel->"",ExpressionUUID->"84ab8720-5637-47dd-9419-7dab06636b55"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1031,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845853814354`*^9},
 CellLabel->"",ExpressionUUID->"99746924-1547-4418-84e2-62ea9de6d046"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1032,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585404373*^9},
 CellLabel->"",ExpressionUUID->"3675e591-42d6-4f02-9665-21dfde4c7f8c"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,92,1033,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585425356*^9},
 CellLabel->"",ExpressionUUID->"4efb27de-015a-4c7a-9bf4-715880d295e4"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1034,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585447296*^9},
 CellLabel->"",ExpressionUUID->"ce5f74f8-0c98-46bc-9785-91dc5736bc02"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1035,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585467205*^9},
 CellLabel->"",ExpressionUUID->"ad4c7067-8cfa-4f80-9cd1-d2d2b0ed2363"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,92,1036,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585489146*^9},
 CellLabel->"",ExpressionUUID->"334e616f-ca1f-470e-b94b-ed1265f894a1"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   92,1037,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845855799036`*^9},
 CellLabel->"",ExpressionUUID->"711d0175-d4bc-49aa-a7ef-ceb12d8887eb"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1038,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585588889*^9},
 CellLabel->"",ExpressionUUID->"2c271ba0-2daf-4bcc-b65a-c231f02eb5a7"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1039,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585595871*^9},
 CellLabel->"",ExpressionUUID->"8b12fc3c-313b-4750-9a75-fe5593cfde24"],

Cell[BoxData[
 TemplateBox[{
  "Rule","argr",
   "\"\\!\\(\\*RowBox[{\\\"Rule\\\"}]\\) called with 1 argument; \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"",2,92,1040,
   26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845856208096`*^9},
 CellLabel->"",ExpressionUUID->"f634bf6f-8c3d-442e-be95-c89e27c90f5f"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rule\\\", \\\"::\\\", \
\\\"argr\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,92,1041,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845856417775`*^9},
 CellLabel->"",ExpressionUUID->"a0927806-cc48-4d7e-b78c-7a84dd642f20"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1042,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845856637125`*^9},
 CellLabel->"",ExpressionUUID->"627e5afa-48ba-4424-a122-23151e305a08"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Rule\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,92,1043,26995569804452135294,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.783184585684657*^9},
 CellLabel->"",ExpressionUUID->"70aa7dce-ab6f-4f56-9222-85feb40a7c09"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,92,1044,26995569804452135294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7831845857075996`*^9},
 CellLabel->"",ExpressionUUID->"3098ed9b-6ec7-49f7-80ad-480a37acce0c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 227, 4, 107, "Title",ExpressionUUID->"c3f926ca-86d0-4817-9387-0a600cd7cc50"],
Cell[810, 28, 217, 4, 57, "Subtitle",ExpressionUUID->"4fe2b41f-a3bc-437e-bc10-5345bc5832f8"],
Cell[CellGroupData[{
Cell[1052, 36, 4450, 105, 121, "Input",ExpressionUUID->"5d96d89e-9e7a-4a27-a5e3-f136196e1629"],
Cell[5505, 143, 225150, 3952, 263, "Output",ExpressionUUID->"85c9fb85-e6eb-4920-a242-d1fc3e7e32c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230692, 4100, 1462, 40, 165, "Input",ExpressionUUID->"234712d2-f5e7-4566-b91a-218ba915e766"],
Cell[232157, 4142, 545, 12, 23, "Message",ExpressionUUID->"36581f0a-1e44-446f-b73f-f299492e6cae"],
Cell[232705, 4156, 179, 2, 36, "Output",ExpressionUUID->"5754e028-9b03-4361-bb1d-067d973d61de"],
Cell[232887, 4160, 195, 3, 36, "Output",ExpressionUUID->"7bc90aca-9f1b-430d-95a0-442886818e88"],
Cell[233085, 4165, 171, 2, 36, "Output",ExpressionUUID->"540109bb-2fd1-4294-ba46-2b293e2b0dec"],
Cell[233259, 4169, 423, 10, 23, "Message",ExpressionUUID->"e3c06b90-fb1f-4f48-bae9-95375ae20ab0"],
Cell[233685, 4181, 246, 5, 36, "Output",ExpressionUUID->"486d2961-db59-475b-83b2-e1416432375a"],
Cell[233934, 4188, 485, 10, 23, "Message",ExpressionUUID->"8b0e0280-bc8f-44d9-9ec0-7686d212fa4b"],
Cell[234422, 4200, 243, 5, 36, "Output",ExpressionUUID->"81e105a2-e502-4820-8e89-60a3600a2c61"],
Cell[234668, 4207, 487, 10, 23, "Message",ExpressionUUID->"e60388d2-0289-4fe3-a6c2-548f301ba464"],
Cell[235158, 4219, 245, 5, 36, "Output",ExpressionUUID->"3483a345-bb42-4b06-b8e6-e1d9691aec79"]
}, Open  ]],
Cell[235418, 4227, 3540, 99, 187, "Input",ExpressionUUID->"d0a9fa04-c684-4355-ba78-cae320e935d6"],
Cell[CellGroupData[{
Cell[238983, 4330, 3809, 74, 486, InheritFromParent,ExpressionUUID->"009f092d-e192-4dbb-a99e-353da1b07024"],
Cell[242795, 4406, 3810, 74, 490, "Output",ExpressionUUID->"48ffbf12-9d4b-4cba-9371-f73a0818d7fb"]
}, Open  ]],
Cell[246620, 4483, 156, 3, 32, "Input",ExpressionUUID->"0c2513a0-135f-4734-b798-45e462afaca7"],
Cell[CellGroupData[{
Cell[246801, 4490, 2122, 47, 121, "Input",ExpressionUUID->"68827845-25ca-4566-a770-175e09ac0cfb"],
Cell[248926, 4539, 1566, 38, 116, "Output",ExpressionUUID->"6c8929b8-8db3-4d5f-921f-76807acd3ff3"],
Cell[250495, 4579, 17336, 304, 245, "Output",ExpressionUUID->"8ebae6bb-e5da-47e3-a455-acb33f32a383"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267868, 4888, 4352, 126, 227, InheritFromParent,ExpressionUUID->"86aa63d6-9d4f-42f6-9b6f-ca3ec9f83411"],
Cell[272223, 5016, 748, 20, 53, "Output",ExpressionUUID->"66fe23be-e724-49e4-a789-9c26a64249db"],
Cell[272974, 5038, 233343, 3896, 1162, "Output",ExpressionUUID->"23ab2e3d-6b65-4e97-926d-823a6a19f77a"],
Cell[506320, 8936, 321, 7, 23, "Message",ExpressionUUID->"9fcabcb5-918f-4539-b923-62d90d0a2b94"],
Cell[506644, 8945, 321, 7, 23, "Message",ExpressionUUID->"595a53c8-4657-492a-aaeb-79208f938af7"],
Cell[506968, 8954, 319, 7, 23, "Message",ExpressionUUID->"a9694932-711b-4239-a03c-99852e076ccb"],
Cell[507290, 8963, 321, 7, 23, "Message",ExpressionUUID->"136ac717-b402-4861-ad83-6e383900f307"],
Cell[507614, 8972, 321, 7, 23, "Message",ExpressionUUID->"cbb11b9c-9ae0-45bd-8d95-b49fb14b9436"],
Cell[507938, 8981, 319, 7, 23, "Message",ExpressionUUID->"bd425421-b388-4a91-8641-87d9df1fb003"],
Cell[508260, 8990, 321, 7, 23, "Message",ExpressionUUID->"4e8ae4a7-4769-4e94-901f-da404d8365b3"],
Cell[508584, 8999, 321, 7, 23, "Message",ExpressionUUID->"7a9a9436-0c1c-4698-817d-8dd308bb1377"],
Cell[508908, 9008, 319, 7, 23, "Message",ExpressionUUID->"adaee77f-c0e0-48ed-924d-e6370d7feaa9"],
Cell[509230, 9017, 319, 7, 23, "Message",ExpressionUUID->"11b065c1-82ec-4295-b77f-b10bcb3a4905"],
Cell[509552, 9026, 319, 7, 23, "Message",ExpressionUUID->"d87a3523-8a1d-4049-aeeb-0844e44fca79"],
Cell[509874, 9035, 319, 7, 23, "Message",ExpressionUUID->"1ab939f4-a8b5-425a-ad22-19a09c426838"],
Cell[510196, 9044, 321, 7, 23, "Message",ExpressionUUID->"49583675-16df-46b1-a9e9-d97b487320a2"],
Cell[510520, 9053, 321, 7, 23, "Message",ExpressionUUID->"386a3278-c3ec-431c-9ff5-257676305365"],
Cell[510844, 9062, 319, 7, 23, "Message",ExpressionUUID->"a40e0aef-3bcb-43c6-b5f4-25f92db71ff7"],
Cell[511166, 9071, 319, 7, 23, "Message",ExpressionUUID->"34bb706f-e8b6-499f-88f7-8ab0ce494ce1"],
Cell[511488, 9080, 321, 7, 23, "Message",ExpressionUUID->"869692a0-7a13-4efe-843b-7f1d5033d671"],
Cell[511812, 9089, 319, 7, 23, "Message",ExpressionUUID->"6c3a29c6-0849-417c-92d3-8d4a8758a7b8"],
Cell[512134, 9098, 321, 7, 23, "Message",ExpressionUUID->"c7f66ebe-d0f6-4d16-94e7-a4250fccbc46"],
Cell[512458, 9107, 321, 7, 23, "Message",ExpressionUUID->"c5201c15-f57f-4a12-b25c-5eb6c6ad2b34"],
Cell[512782, 9116, 321, 7, 23, "Message",ExpressionUUID->"12563e74-cd81-4e95-94c2-a4101540dca7"],
Cell[513106, 9125, 321, 7, 23, "Message",ExpressionUUID->"73d4c898-bec4-4948-bbc2-c5dc802fa019"],
Cell[513430, 9134, 319, 7, 23, "Message",ExpressionUUID->"f171458f-c0b6-4252-a4b2-b01ec12df9c5"],
Cell[513752, 9143, 321, 7, 23, "Message",ExpressionUUID->"87da5e0a-3ef3-423e-9275-dfe807f5c2fd"],
Cell[514076, 9152, 321, 7, 23, "Message",ExpressionUUID->"710c0d7a-9905-4b12-b2bd-2c13b0177912"],
Cell[514400, 9161, 321, 7, 23, "Message",ExpressionUUID->"7dfdf561-af88-45d7-b20f-00ce57a0bc42"],
Cell[514724, 9170, 319, 7, 23, "Message",ExpressionUUID->"5cb1fd27-2ddb-49d9-8af4-cbbab4fd6c63"],
Cell[515046, 9179, 319, 7, 23, "Message",ExpressionUUID->"163c2df6-7c32-401b-910c-aeb758f29b44"],
Cell[515368, 9188, 321, 7, 23, "Message",ExpressionUUID->"de0e09fe-01b3-49e5-b914-e3729791720a"],
Cell[515692, 9197, 319, 7, 23, "Message",ExpressionUUID->"8978168b-b530-4383-a7d3-291ec0a81e7d"],
Cell[516014, 9206, 321, 7, 23, "Message",ExpressionUUID->"b62c0764-7797-483a-aa41-c23ced401f73"],
Cell[516338, 9215, 321, 7, 23, "Message",ExpressionUUID->"dbb7cbbf-576c-4ad2-8203-d820bb12f0fa"],
Cell[516662, 9224, 319, 7, 23, "Message",ExpressionUUID->"45fcb9b8-a357-4fda-937b-edc143e66d9c"],
Cell[516984, 9233, 321, 7, 23, "Message",ExpressionUUID->"6a363611-bb63-4e2d-9b41-ed2f7dedf4f4"],
Cell[517308, 9242, 321, 7, 23, "Message",ExpressionUUID->"d9d4f119-ffac-480f-8fef-1227ab33f5af"],
Cell[517632, 9251, 321, 7, 23, "Message",ExpressionUUID->"22ff2546-e477-46c3-9165-5a12ba3b19f1"],
Cell[517956, 9260, 321, 7, 23, "Message",ExpressionUUID->"7aaab3b8-316a-4fa1-8e6c-78de8ef31673"],
Cell[518280, 9269, 319, 7, 23, "Message",ExpressionUUID->"062cc77a-ab71-4c16-99f7-8493e21ce449"],
Cell[518602, 9278, 319, 7, 23, "Message",ExpressionUUID->"de188487-ec26-4f50-8063-8fa98866c36b"],
Cell[518924, 9287, 321, 7, 23, "Message",ExpressionUUID->"04ebcf05-1351-4ac4-9f75-f5d5f014d2ae"],
Cell[519248, 9296, 321, 7, 23, "Message",ExpressionUUID->"97453823-e7a8-4b96-9d09-1c0cb3c93713"],
Cell[519572, 9305, 321, 7, 23, "Message",ExpressionUUID->"b9cdd681-c78a-4c4d-a993-175e7d9f66c7"],
Cell[519896, 9314, 319, 7, 23, "Message",ExpressionUUID->"88065407-fccb-4170-9484-22a13e09b0c0"],
Cell[520218, 9323, 319, 7, 23, "Message",ExpressionUUID->"be3cea7f-94b9-46bf-9aea-dc737e0e0532"],
Cell[520540, 9332, 319, 7, 23, "Message",ExpressionUUID->"8f368a2b-3450-40ef-84a1-f26c6742cad6"],
Cell[520862, 9341, 321, 7, 23, "Message",ExpressionUUID->"81040954-10b6-4daa-a578-9755194e883e"],
Cell[521186, 9350, 321, 7, 23, "Message",ExpressionUUID->"a71a9915-0260-45b2-8aac-0b2178bc6208"],
Cell[521510, 9359, 319, 7, 23, "Message",ExpressionUUID->"bff4543a-6955-4379-8e54-1f4cd4563b72"],
Cell[521832, 9368, 319, 7, 23, "Message",ExpressionUUID->"1a28e5f1-f86f-4ae4-8e44-a0d47ebcf017"],
Cell[522154, 9377, 319, 7, 23, "Message",ExpressionUUID->"06c0ef73-2fb9-49f2-b134-1333f9e9df9d"],
Cell[522476, 9386, 319, 7, 23, "Message",ExpressionUUID->"f122420a-1769-4e61-9b90-a412b3162a44"],
Cell[522798, 9395, 318, 7, 23, "Message",ExpressionUUID->"9d8ab698-f99f-4d92-b647-ec0350170215"],
Cell[523119, 9404, 319, 7, 23, "Message",ExpressionUUID->"d17a4366-f5b7-42ed-9c9b-9c7b1ae5b942"],
Cell[523441, 9413, 319, 7, 23, "Message",ExpressionUUID->"24885571-6f42-4b77-97b6-693f9235ae93"],
Cell[523763, 9422, 319, 7, 23, "Message",ExpressionUUID->"668dfff7-49f9-454e-ac2e-ad6381d13381"],
Cell[524085, 9431, 319, 7, 23, "Message",ExpressionUUID->"5e2ed255-a868-41e6-b71e-519c72dd6601"],
Cell[524407, 9440, 319, 7, 23, "Message",ExpressionUUID->"845d7a7b-96cf-45c8-97a1-2a9f822e3606"],
Cell[524729, 9449, 319, 7, 23, "Message",ExpressionUUID->"6c5bf00e-0fc3-4300-8845-3a2378353523"],
Cell[525051, 9458, 319, 7, 23, "Message",ExpressionUUID->"4cf6ed4d-7ada-4fc2-a8d1-da79294c6b21"],
Cell[525373, 9467, 319, 7, 23, "Message",ExpressionUUID->"cfff8e43-a312-4bec-9051-20258306923e"],
Cell[525695, 9476, 321, 7, 23, "Message",ExpressionUUID->"74e060b1-aa88-416f-945f-9ca36f91d06b"],
Cell[526019, 9485, 321, 7, 23, "Message",ExpressionUUID->"52caae87-7d11-46e0-92e4-3261b86e7d3f"],
Cell[526343, 9494, 321, 7, 23, "Message",ExpressionUUID->"90d8ae52-cab3-45c1-8368-aa853a25a09b"],
Cell[526667, 9503, 319, 7, 23, "Message",ExpressionUUID->"1041ef8e-4d51-4146-bd0b-d21393f4575d"],
Cell[526989, 9512, 321, 7, 23, "Message",ExpressionUUID->"6727bb20-c36a-45fc-b328-7f331d4ece9c"],
Cell[527313, 9521, 319, 7, 23, "Message",ExpressionUUID->"2e912a63-7022-4834-b4e1-dd750d64f0ec"],
Cell[527635, 9530, 321, 7, 23, "Message",ExpressionUUID->"a1457816-df9f-4868-ab51-1b613f7283c9"],
Cell[527959, 9539, 318, 7, 23, "Message",ExpressionUUID->"47aeea89-5a44-4cc0-88f0-f61838ae503c"],
Cell[528280, 9548, 319, 7, 23, "Message",ExpressionUUID->"df382075-f04c-4b73-90e3-e8ecba0e4617"],
Cell[528602, 9557, 319, 7, 23, "Message",ExpressionUUID->"307672a9-83e5-4d85-8856-5fb741efd70f"],
Cell[528924, 9566, 321, 7, 23, "Message",ExpressionUUID->"7e9cae83-50e9-4809-a26f-8453b43bb280"],
Cell[529248, 9575, 321, 7, 23, "Message",ExpressionUUID->"249ffa06-e03e-4f5d-b87f-b9d377de3258"],
Cell[529572, 9584, 318, 7, 23, "Message",ExpressionUUID->"2ae3e706-84de-4ec1-90df-866a7b698f23"],
Cell[529893, 9593, 321, 7, 23, "Message",ExpressionUUID->"a3fccf23-9d3a-48fa-8686-8b4c09ad0141"],
Cell[530217, 9602, 319, 7, 23, "Message",ExpressionUUID->"14c1cf8b-9218-449c-bea1-8f8b5ede8953"],
Cell[530539, 9611, 319, 7, 23, "Message",ExpressionUUID->"999536f1-2275-427c-ac22-f64c352dd81b"],
Cell[530861, 9620, 321, 7, 23, "Message",ExpressionUUID->"4575273a-8de3-4b02-b05d-6ba9030b707f"],
Cell[531185, 9629, 321, 7, 23, "Message",ExpressionUUID->"80eb7beb-787a-481e-a4ba-0b4d346b51a1"],
Cell[531509, 9638, 319, 7, 23, "Message",ExpressionUUID->"ad410f4d-a016-4697-8ebb-cfbf2c6f7908"],
Cell[531831, 9647, 321, 7, 23, "Message",ExpressionUUID->"897e8c8d-d89a-4e7b-bdb4-c97b7f39d646"],
Cell[532155, 9656, 319, 7, 23, "Message",ExpressionUUID->"146f4f91-73ea-49e9-9ca6-002c5fa748d2"],
Cell[532477, 9665, 319, 7, 23, "Message",ExpressionUUID->"0fb585c7-2c0e-4366-800f-cddda4c21b0e"],
Cell[532799, 9674, 321, 7, 23, "Message",ExpressionUUID->"9e953965-1c28-4542-b4dd-16dbea8717d3"],
Cell[533123, 9683, 319, 7, 23, "Message",ExpressionUUID->"82b5df9f-f239-4f31-a2a4-c07ee09c7d66"],
Cell[533445, 9692, 321, 7, 23, "Message",ExpressionUUID->"c12e5439-cd97-42a9-9581-5177a61446f7"],
Cell[533769, 9701, 321, 7, 23, "Message",ExpressionUUID->"ab72bf49-3388-49c2-b2c0-cb52af443d62"],
Cell[534093, 9710, 319, 7, 23, "Message",ExpressionUUID->"d4f9f7db-ab6f-46b3-981c-4ded6809514b"],
Cell[534415, 9719, 321, 7, 23, "Message",ExpressionUUID->"96449c2d-82a4-4afa-b0ce-a10bc6035e3b"],
Cell[534739, 9728, 319, 7, 23, "Message",ExpressionUUID->"1d9b5bf1-09cf-41e8-8ce0-656043593ffe"],
Cell[535061, 9737, 321, 7, 23, "Message",ExpressionUUID->"9b39e631-19cc-4151-b952-46cd9f117cc5"],
Cell[535385, 9746, 321, 7, 23, "Message",ExpressionUUID->"6b4bad7a-fda0-446a-aedf-a06eaaa11872"],
Cell[535709, 9755, 318, 7, 23, "Message",ExpressionUUID->"b6fdaaed-ec58-43a5-a2b1-23f0130ce033"],
Cell[536030, 9764, 321, 7, 23, "Message",ExpressionUUID->"7e142a75-b546-4a06-a019-0e94ba5b9443"],
Cell[536354, 9773, 321, 7, 23, "Message",ExpressionUUID->"547ea126-e7c7-4a6b-8bc8-611369f56505"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536712, 9785, 3818, 83, 99, "Input",ExpressionUUID->"f7d0a398-ddd9-46c0-a5a2-f199e6327c1c"],
Cell[540533, 9870, 4149, 80, 1342, "Output",ExpressionUUID->"46df72ad-70ec-42f9-abf7-18e782945499"],
Cell[544685, 9952, 3259, 50, 1328, "Message",ExpressionUUID->"645da3d9-effe-4e8d-bb57-bf9282e8b3cc"],
Cell[547947, 10004, 3257, 50, 1328, "Message",ExpressionUUID->"6d46c60c-c29c-402c-a843-e78859634712"],
Cell[551207, 10056, 3259, 50, 1328, "Message",ExpressionUUID->"c8f8bcbe-c6b9-4710-80e0-2c880d93caf5"],
Cell[554469, 10108, 415, 8, 23, "Message",ExpressionUUID->"0a066539-c52f-42a0-9ff0-43004be9df28"],
Cell[554887, 10118, 457, 9, 23, "Message",ExpressionUUID->"34bf80de-68fe-4148-8726-5e366e2fe8e7"],
Cell[555347, 10129, 456, 9, 23, "Message",ExpressionUUID->"28a602c7-d395-4560-ba87-d339481b8c7d"],
Cell[555806, 10140, 522, 10, 23, "Message",ExpressionUUID->"ff8dd94e-1d6f-4eb6-90e6-56eb137749fd"],
Cell[556331, 10152, 417, 8, 23, "Message",ExpressionUUID->"6cd4001b-e3a0-46f1-acec-85b274e5dc4b"],
Cell[556751, 10162, 483, 9, 23, "Message",ExpressionUUID->"92c5a702-a0fe-47b0-bac4-f81fba2191e5"],
Cell[557237, 10173, 371, 8, 23, "Message",ExpressionUUID->"81c213b7-a35a-4998-b474-aaa27817767f"],
Cell[557611, 10183, 369, 8, 23, "Message",ExpressionUUID->"3284bb01-7b93-49df-bccf-0a4c5e62d6b3"],
Cell[557983, 10193, 372, 8, 23, "Message",ExpressionUUID->"3fb8debb-b62d-4a5e-99cb-2669af4fdfe9"],
Cell[558358, 10203, 410, 8, 23, "Message",ExpressionUUID->"1a908490-f31a-43d0-8855-3b2683280756"],
Cell[558771, 10213, 532, 10, 23, "Message",ExpressionUUID->"1d262ebd-b336-4d58-bb87-210ad06f6c1b"],
Cell[559306, 10225, 532, 10, 23, "Message",ExpressionUUID->"dfacece0-4667-4d79-9241-2fd5ecaa379f"],
Cell[559841, 10237, 418, 8, 23, "Message",ExpressionUUID->"bdddf16b-2250-4549-ad65-843487ae4725"],
Cell[560262, 10247, 484, 9, 23, "Message",ExpressionUUID->"44757dc7-5bd3-4971-8393-31ad46d05793"],
Cell[560749, 10258, 370, 8, 23, "Message",ExpressionUUID->"6070d5f4-54ff-463e-81bb-0b2e2aad4942"],
Cell[561122, 10268, 370, 8, 23, "Message",ExpressionUUID->"ca26ab97-12ca-43a9-8aa5-c3c62e2753cf"],
Cell[561495, 10278, 370, 8, 23, "Message",ExpressionUUID->"5c7b9cbc-003a-4087-ad89-3229439e8cee"],
Cell[561868, 10288, 412, 8, 23, "Message",ExpressionUUID->"400d44fa-9dc2-4302-9e0c-5cd1ba5040f9"],
Cell[562283, 10298, 532, 10, 23, "Message",ExpressionUUID->"ac1b3c06-9943-4411-928f-fdb50d7d466a"],
Cell[562818, 10310, 532, 10, 23, "Message",ExpressionUUID->"9391e1ee-a0a6-4aa6-ac47-76b85517aa84"],
Cell[563353, 10322, 416, 8, 23, "Message",ExpressionUUID->"7d710870-32fd-44c3-870d-2b24cfd0ad19"],
Cell[563772, 10332, 484, 9, 23, "Message",ExpressionUUID->"ac08dc27-f6e5-4f9d-a259-6b7f1bb20689"],
Cell[564259, 10343, 370, 8, 23, "Message",ExpressionUUID->"ad656b94-8020-483b-8f57-ea12b2334fef"],
Cell[564632, 10353, 370, 8, 23, "Message",ExpressionUUID->"833df2f7-e3e7-461b-b776-c58c3b36a84b"],
Cell[565005, 10363, 370, 8, 23, "Message",ExpressionUUID->"51f6f943-b5cd-4ae0-8e6b-27720201f476"],
Cell[565378, 10373, 412, 8, 23, "Message",ExpressionUUID->"ecbfdf75-0c85-41a2-ad74-a70d67ff30a7"],
Cell[565793, 10383, 532, 10, 23, "Message",ExpressionUUID->"10e5f0d2-4415-4a73-bb69-42049d8f0d9c"],
Cell[566328, 10395, 530, 10, 23, "Message",ExpressionUUID->"e4ccf893-ea77-4184-b1ff-11d7588005de"],
Cell[566861, 10407, 416, 8, 23, "Message",ExpressionUUID->"d91b2d2a-8161-41b8-813c-db697786db41"],
Cell[567280, 10417, 3261, 50, 1328, "Message",ExpressionUUID->"73c8bb36-6f3d-4469-a42d-1be2e867a984"],
Cell[570544, 10469, 3259, 50, 1328, "Message",ExpressionUUID->"d21b56be-557a-4726-8042-9c9e0a5a48d1"],
Cell[573806, 10521, 3261, 50, 1328, "Message",ExpressionUUID->"3b2f628b-b9d9-495b-9980-53d6e16fcdb0"],
Cell[577070, 10573, 417, 8, 23, "Message",ExpressionUUID->"157e4eec-205f-4111-9f5c-158da494b4cb"],
Cell[577490, 10583, 459, 9, 23, "Message",ExpressionUUID->"1e058f38-1778-4071-af79-7a1befa11095"],
Cell[577952, 10594, 458, 9, 23, "Message",ExpressionUUID->"dc19df31-b44b-4555-a15d-261d736eec5e"],
Cell[578413, 10605, 526, 10, 23, "Message",ExpressionUUID->"9871b988-4369-4b5a-9b77-06c1b610c92f"],
Cell[578942, 10617, 419, 8, 23, "Message",ExpressionUUID->"09bfdc44-7e9b-4414-8e8a-b12d8f7b4806"],
Cell[579364, 10627, 483, 9, 23, "Message",ExpressionUUID->"2c517bb9-94bf-4b91-b160-09256a5cd5cc"],
Cell[579850, 10638, 370, 8, 23, "Message",ExpressionUUID->"7b545c05-e684-4cc3-b6a4-571a136518d6"],
Cell[580223, 10648, 371, 8, 23, "Message",ExpressionUUID->"a86b4bb7-5ad4-4833-9cbf-2142a867a709"],
Cell[580597, 10658, 373, 8, 23, "Message",ExpressionUUID->"e4cfaead-6e0e-4a51-8350-ed300c243b9d"],
Cell[580973, 10668, 410, 8, 23, "Message",ExpressionUUID->"ccc6486b-9f45-4a70-be7a-b85fbbf7e27d"],
Cell[581386, 10678, 531, 10, 23, "Message",ExpressionUUID->"71c554f8-1505-4dd6-bf84-39ce8805596d"],
Cell[581920, 10690, 533, 10, 23, "Message",ExpressionUUID->"cd12d197-77f3-471b-8a8b-8dd7be19a889"],
Cell[582456, 10702, 417, 8, 23, "Message",ExpressionUUID->"1f2501f5-569d-4b7c-a792-6825c316242a"],
Cell[582876, 10712, 485, 9, 23, "Message",ExpressionUUID->"3f286ea1-c5d4-4c8d-a505-9978663c8f62"],
Cell[583364, 10723, 373, 8, 23, "Message",ExpressionUUID->"091e675e-5c94-4081-9cd0-a0e6ff6ffe44"],
Cell[583740, 10733, 373, 8, 23, "Message",ExpressionUUID->"94a86100-4160-4d92-8452-6374275779f2"],
Cell[584116, 10743, 373, 8, 23, "Message",ExpressionUUID->"d944cddb-ac11-40e9-924f-1578e4162745"],
Cell[584492, 10753, 411, 8, 23, "Message",ExpressionUUID->"8681f0c8-b3b5-4aa3-8dc6-4a89f13e6b3b"],
Cell[584906, 10763, 533, 10, 23, "Message",ExpressionUUID->"8049e71c-6fc1-4bda-8062-25b6d9a1cbff"],
Cell[585442, 10775, 530, 10, 23, "Message",ExpressionUUID->"ec2fb689-39c3-4b96-be50-9e8dcd2e9fb6"],
Cell[585975, 10787, 419, 8, 23, "Message",ExpressionUUID->"afbb350f-e384-42db-ad94-56f14bf57be8"],
Cell[586397, 10797, 483, 9, 23, "Message",ExpressionUUID->"e16aabc6-726b-4bc9-b3c0-ddb41897991b"],
Cell[586883, 10808, 373, 8, 23, "Message",ExpressionUUID->"b8af97f3-c375-4b89-b2af-42c8f94cfdad"],
Cell[587259, 10818, 373, 8, 23, "Message",ExpressionUUID->"c25d3c92-62ee-452c-afb2-1803494dbaa5"],
Cell[587635, 10828, 373, 8, 23, "Message",ExpressionUUID->"abb15978-ea87-4616-92e6-a14596b52b01"],
Cell[588011, 10838, 413, 8, 23, "Message",ExpressionUUID->"dc9bf369-dcae-4efb-9c01-8ab92f0941d9"],
Cell[588427, 10848, 533, 10, 23, "Message",ExpressionUUID->"7025eaf3-330c-4e11-b87a-4ca792e99200"],
Cell[588963, 10860, 533, 10, 23, "Message",ExpressionUUID->"89f90758-ca0f-417f-8e9d-b941490b2c53"],
Cell[589499, 10872, 419, 8, 23, "Message",ExpressionUUID->"49e4d6c2-a188-4f47-b4cc-0bad19c86259"],
Cell[589921, 10882, 3261, 50, 1328, "Message",ExpressionUUID->"12439431-1bff-430e-bcc7-f2c694614776"],
Cell[593185, 10934, 3261, 50, 1328, "Message",ExpressionUUID->"41496185-d7e9-49b1-9116-77bb1f40bb30"],
Cell[596449, 10986, 3259, 50, 1328, "Message",ExpressionUUID->"9c3defd2-d5da-4d9c-86cb-218ab087d2a0"],
Cell[599711, 11038, 417, 8, 23, "Message",ExpressionUUID->"810f3ded-93c1-401a-92e4-4b7a2e965072"],
Cell[600131, 11048, 459, 9, 23, "Message",ExpressionUUID->"37874c4f-713d-4b13-abe2-949ee468e2c4"],
Cell[600593, 11059, 458, 9, 23, "Message",ExpressionUUID->"382b473e-421f-4a1c-b448-4b2a74e00973"],
Cell[601054, 11070, 523, 10, 23, "Message",ExpressionUUID->"5b5060bd-9834-4f0b-b170-4068b6612d9e"],
Cell[601580, 11082, 421, 8, 23, "Message",ExpressionUUID->"5e64ef74-9ca2-4047-95fa-2a319ac401b8"],
Cell[602004, 11092, 485, 9, 23, "Message",ExpressionUUID->"79c0ab0a-58de-4cad-b24b-ba5165c67d63"],
Cell[602492, 11103, 373, 8, 23, "Message",ExpressionUUID->"b690c762-a6f3-4d30-8d8c-c33f46646a68"],
Cell[602868, 11113, 371, 8, 23, "Message",ExpressionUUID->"0395725a-3096-4385-b21a-07fc63522a5b"],
Cell[603242, 11123, 373, 8, 23, "Message",ExpressionUUID->"278ab427-6856-4c27-858c-34a78e0a7a0c"],
Cell[603618, 11133, 413, 8, 23, "Message",ExpressionUUID->"7d601d87-ae2b-4082-96a6-6261037ed9ad"],
Cell[604034, 11143, 533, 10, 23, "Message",ExpressionUUID->"09144358-bc4c-422f-822f-cbaf5f7c3ec3"],
Cell[604570, 11155, 531, 10, 23, "Message",ExpressionUUID->"0f672fb9-3d75-4ec3-ad02-abe5dbd18b26"],
Cell[605104, 11167, 417, 8, 23, "Message",ExpressionUUID->"21167953-adf4-42b1-9311-5abed2c22f4b"],
Cell[605524, 11177, 485, 9, 23, "Message",ExpressionUUID->"ce0636a5-6038-4eeb-86de-5f3bf274bb0d"],
Cell[606012, 11188, 373, 8, 23, "Message",ExpressionUUID->"b300cda6-7f7e-49a0-bed8-0b3cce5ecede"],
Cell[606388, 11198, 373, 8, 23, "Message",ExpressionUUID->"469456f5-96a1-4351-9685-f6185502d83e"],
Cell[606764, 11208, 373, 8, 23, "Message",ExpressionUUID->"446ece93-9c8d-441b-8974-4035d24778f7"],
Cell[607140, 11218, 411, 8, 23, "Message",ExpressionUUID->"8d0d20fa-67bb-4752-9412-d6432372cfef"],
Cell[607554, 11228, 533, 10, 23, "Message",ExpressionUUID->"e6099f85-3228-40fe-a996-7ce8d85b8509"],
Cell[608090, 11240, 533, 10, 23, "Message",ExpressionUUID->"38ba2b59-f0fe-4ae1-a9d7-f342fe31efd2"],
Cell[608626, 11252, 419, 8, 23, "Message",ExpressionUUID->"219171e2-8bfa-46ac-b101-e2f2c76ada27"],
Cell[609048, 11262, 485, 9, 23, "Message",ExpressionUUID->"5f89b2f2-c15e-4b4f-a98e-7ac601bcb5b1"],
Cell[609536, 11273, 371, 8, 23, "Message",ExpressionUUID->"3c9e0136-7dc5-4db2-b36c-2897923996b7"],
Cell[609910, 11283, 371, 8, 23, "Message",ExpressionUUID->"1cf16369-395e-4842-afbb-d9c6e827f2dd"],
Cell[610284, 11293, 373, 8, 23, "Message",ExpressionUUID->"4c2a1708-2e6a-411f-b923-abf460e65015"],
Cell[610660, 11303, 413, 8, 23, "Message",ExpressionUUID->"5613aef6-2ad9-412d-ad06-ee870ab66519"],
Cell[611076, 11313, 533, 10, 23, "Message",ExpressionUUID->"a177754e-e417-43de-b7c9-38e943ce1164"],
Cell[611612, 11325, 533, 10, 23, "Message",ExpressionUUID->"18637b0d-f958-44f0-a625-8ad860c2dcfc"],
Cell[612148, 11337, 417, 8, 23, "Message",ExpressionUUID->"ecde3b18-33d0-436e-82dd-b3515877ecaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612602, 11350, 10257, 225, 363, "Input",ExpressionUUID->"a8b197d0-4289-4a65-8e5d-e613db90c31b"],
Cell[622862, 11577, 2706, 51, 250, "Output",ExpressionUUID->"230f54e4-ef63-4209-9a4b-80efdcfd9b63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[625605, 11633, 81, 0, 32, "Input",ExpressionUUID->"37e83be1-69ae-472e-98df-32a4ad1d9ca9"],
Cell[625689, 11635, 4262, 73, 278, "Output",ExpressionUUID->"823de008-e6aa-4b67-bf0e-5956d0ccd4b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629988, 11713, 59896, 1519, 1595, "Input",ExpressionUUID->"672bb44d-add1-4546-9303-845437d3d5d2"],
Cell[689887, 13234, 11568, 211, 518, "Output",ExpressionUUID->"d58a95a9-9465-47a1-9cb9-040b64c15486"]
}, Open  ]],
Cell[701470, 13448, 786, 20, 65, "Text",ExpressionUUID->"10217bba-e252-4b71-ba3e-f224df62e1e1"],
Cell[CellGroupData[{
Cell[702281, 13472, 213, 4, 57, "Subtitle",ExpressionUUID->"f451f82b-1ccb-44b1-b89a-8324c07be050"],
Cell[702497, 13478, 1878, 52, 165, "Input",ExpressionUUID->"c8d31eed-5ed6-4861-8d7f-c851461bc293"],
Cell[CellGroupData[{
Cell[704400, 13534, 5859, 128, 627, "Input",ExpressionUUID->"4da3cc6e-53d9-452c-8b34-f8734ab65142"],
Cell[710262, 13664, 2230, 34, 494, "Output",ExpressionUUID->"69f1b940-d1c4-4823-ac29-78b80242cd20"]
}, Open  ]],
Cell[712507, 13701, 768, 20, 65, "Text",ExpressionUUID->"5687f6df-51f3-4ebd-9c94-49ae5575dd8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713312, 13726, 228, 4, 57, "Subtitle",ExpressionUUID->"67a4a4d5-91dd-428d-a295-801003e5034a"],
Cell[CellGroupData[{
Cell[713565, 13734, 4696, 107, 55, "Input",ExpressionUUID->"dba499dc-7c15-49e6-9fca-8499b1912fdc"],
Cell[718264, 13843, 225034, 3949, 263, "Output",ExpressionUUID->"7a4d2f10-1550-4759-82a5-ab7a310c1877"]
}, Open  ]],
Cell[CellGroupData[{
Cell[943335, 17797, 10289, 226, 363, "Input",ExpressionUUID->"71bb48b4-9786-41ed-b234-45620552a2b5"],
Cell[953627, 18025, 4268, 73, 250, "Output",ExpressionUUID->"8e177903-6b13-49aa-9414-172d36505ecb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[957932, 18103, 59899, 1514, 1595, "Input",ExpressionUUID->"bc44fa5f-25ad-45c9-893d-4193779e2eff"],
Cell[1017834, 19619, 14195, 248, 518, "Output",ExpressionUUID->"6ac1a07a-b933-4997-89a8-a956bf473af0"]
}, Open  ]],
Cell[1032044, 19870, 936, 27, 65, "Text",ExpressionUUID->"d9d41912-0e2d-485a-b600-842803ad7df2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1033017, 19902, 213, 4, 57, "Subtitle",ExpressionUUID->"d247b0e5-69bf-4e55-bd3b-e990f9c6b5c3"],
Cell[1033233, 19908, 1878, 52, 165, "Input",ExpressionUUID->"1306cbfe-97dd-4c85-bc52-3040791785a8"],
Cell[CellGroupData[{
Cell[1035136, 19964, 5959, 129, 627, "Input",ExpressionUUID->"2392354b-1ec1-44c4-887a-57a45585dd70"],
Cell[1041098, 20095, 1089, 20, 494, "Output",ExpressionUUID->"7648a214-f32a-4ea8-8da9-655e08802efd"]
}, Open  ]],
Cell[1042202, 20118, 936, 27, 65, "Text",ExpressionUUID->"c03f1087-581d-4ae1-9872-8d84bf230c0f"],
Cell[1043141, 20147, 505, 9, 23, "Message",ExpressionUUID->"a610ce41-044b-49d7-80d2-e410e5a29e9a"],
Cell[1043649, 20158, 505, 9, 23, "Message",ExpressionUUID->"587961f4-92a7-4cef-83bc-048aafb3221c"],
Cell[1044157, 20169, 507, 9, 23, "Message",ExpressionUUID->"b7b920c2-241a-4f4f-a893-357cb1819c57"],
Cell[1044667, 20180, 505, 9, 23, "Message",ExpressionUUID->"a50506d0-4f1e-4f73-ba2e-540cc2008b50"],
Cell[1045175, 20191, 507, 9, 23, "Message",ExpressionUUID->"ca855911-1eec-4ba0-b2be-559fa54615fa"],
Cell[1045685, 20202, 507, 9, 23, "Message",ExpressionUUID->"04717fb5-c715-4b15-b766-0f75bbb3a6fe"],
Cell[1046195, 20213, 505, 9, 23, "Message",ExpressionUUID->"f0306cce-e6ab-4421-8dcf-00e32688ce76"],
Cell[1046703, 20224, 505, 9, 23, "Message",ExpressionUUID->"f7f5a5a8-c279-485a-8b83-fe738869f2b6"],
Cell[1047211, 20235, 484, 9, 23, "Message",ExpressionUUID->"36cf4d60-0a41-49ef-8dd9-e13e413ee635"],
Cell[1047698, 20246, 369, 8, 23, "Message",ExpressionUUID->"87104563-63cf-4fbf-abda-28c95ea8212e"],
Cell[1048070, 20256, 372, 8, 23, "Message",ExpressionUUID->"8a7a543c-961c-41fe-8bbe-1c05f870eaba"],
Cell[1048445, 20266, 372, 8, 23, "Message",ExpressionUUID->"af3efecb-0329-4b08-a37d-a4ca14255bc5"],
Cell[1048820, 20276, 409, 8, 23, "Message",ExpressionUUID->"f0dc0295-c5cd-4e72-b108-d56a86d786a6"],
Cell[1049232, 20286, 530, 10, 23, "Message",ExpressionUUID->"120d18ac-2aa9-455f-b63f-13313ec30d24"],
Cell[1049765, 20298, 532, 10, 23, "Message",ExpressionUUID->"014f2da1-b63e-404f-988d-a6efe01ce4c2"],
Cell[1050300, 20310, 418, 8, 23, "Message",ExpressionUUID->"c2462df7-e6e0-43f3-87c9-791956af99cb"],
Cell[1050721, 20320, 484, 9, 23, "Message",ExpressionUUID->"38bb3c6d-7f0c-4e00-9c49-37666a1f4ab1"],
Cell[1051208, 20331, 372, 8, 23, "Message",ExpressionUUID->"84ab8720-5637-47dd-9419-7dab06636b55"],
Cell[1051583, 20341, 372, 8, 23, "Message",ExpressionUUID->"99746924-1547-4418-84e2-62ea9de6d046"],
Cell[1051958, 20351, 370, 8, 23, "Message",ExpressionUUID->"3675e591-42d6-4f02-9665-21dfde4c7f8c"],
Cell[1052331, 20361, 410, 8, 23, "Message",ExpressionUUID->"4efb27de-015a-4c7a-9bf4-715880d295e4"],
Cell[1052744, 20371, 530, 10, 23, "Message",ExpressionUUID->"ce5f74f8-0c98-46bc-9785-91dc5736bc02"],
Cell[1053277, 20383, 530, 10, 23, "Message",ExpressionUUID->"ad4c7067-8cfa-4f80-9cd1-d2d2b0ed2363"],
Cell[1053810, 20395, 416, 8, 23, "Message",ExpressionUUID->"334e616f-ca1f-470e-b94b-ed1265f894a1"],
Cell[1054229, 20405, 484, 9, 23, "Message",ExpressionUUID->"711d0175-d4bc-49aa-a7ef-ceb12d8887eb"],
Cell[1054716, 20416, 370, 8, 23, "Message",ExpressionUUID->"2c271ba0-2daf-4bcc-b65a-c231f02eb5a7"],
Cell[1055089, 20426, 370, 8, 23, "Message",ExpressionUUID->"8b12fc3c-313b-4750-9a75-fe5593cfde24"],
Cell[1055462, 20436, 372, 8, 23, "Message",ExpressionUUID->"f634bf6f-8c3d-442e-be95-c89e27c90f5f"],
Cell[1055837, 20446, 412, 8, 23, "Message",ExpressionUUID->"a0927806-cc48-4d7e-b78c-7a84dd642f20"],
Cell[1056252, 20456, 532, 10, 23, "Message",ExpressionUUID->"627e5afa-48ba-4424-a122-23151e305a08"],
Cell[1056787, 20468, 530, 10, 23, "Message",ExpressionUUID->"70aa7dce-ab6f-4f56-9222-85feb40a7c09"],
Cell[1057320, 20480, 418, 8, 23, "Message",ExpressionUUID->"3098ed9b-6ec7-49f7-80ad-480a37acce0c"]
}, Open  ]]
}, Open  ]]
}
]
*)

