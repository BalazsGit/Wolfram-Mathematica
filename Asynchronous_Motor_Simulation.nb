(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    445856,       9196]
NotebookOptionsPosition[    442619,       9135]
NotebookOutlinePosition[    442961,       9150]
CellTagsIndexPosition[    442918,       9147]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Asynchronous motor simulation", "Title",
 CellChangeTimes->{{3.7819800787531176`*^9, 
  3.7819801287873287`*^9}},ExpressionUUID->"c3f926ca-86d0-4817-9387-\
0a600cd7cc50"],

Cell["\<\
Clockwise rotation
3 phase 2 pole 12 slot induction motor\
\>", "Subtitle",
 CellChangeTimes->{{3.7819801808581705`*^9, 3.781980187609121*^9}, {
  3.781980422051383*^9, 3.7819804345081043`*^9}, {3.8385419206084146`*^9, 
  3.8385419311522655`*^9}, {3.8385435416197042`*^9, 3.838543541954096*^9}, {
  3.8385585459900618`*^9, 
  3.838558547965536*^9}},ExpressionUUID->"4fe2b41f-a3bc-437e-bc10-\
5345bc5832f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Sin", " ", "[", "x", "]"}], ","}], "*)"}], 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", " ", "[", 
         RowBox[{"x", "+", 
          RowBox[{"120", "Degree"}]}], "]"}]}], ","}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "+", 
          RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{"Sin", "[", 
       RowBox[{"x", "+", 
        RowBox[{"240", "Degree"}]}], "]"}], "*)"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "x", "]"}]}], ","}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], ","}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"2", "*", 
          RowBox[{"(", 
           RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", "240"}], "]"}], ","}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "+", 
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"4", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.776239169741642*^9, 3.776239225692113*^9}, {
   3.7762392804766016`*^9, 3.776239284849877*^9}, {3.7762393199490724`*^9, 
   3.77623933910382*^9}, {3.7762394355350356`*^9, 3.77623947531962*^9}, {
   3.7762395456793756`*^9, 3.7762395518010106`*^9}, {3.7762396763761325`*^9, 
   3.77623979448132*^9}, {3.7762398482504077`*^9, 3.77623986573869*^9}, {
   3.776240738306692*^9, 3.7762408137240973`*^9}, {3.7762408513773594`*^9, 
   3.7762408723423185`*^9}, {3.776240918495944*^9, 3.776240927380189*^9}, {
   3.776240963723025*^9, 3.7762409958651123`*^9}, {3.7762581433809104`*^9, 
   3.7762581856990757`*^9}, 3.7762583045474467`*^9, {3.776258359533263*^9, 
   3.7762583623059545`*^9}, 3.776258395690838*^9, {3.7762584446960955`*^9, 
   3.776258445235592*^9}, 3.776258674970976*^9, 3.77625871623116*^9, 
   3.7762587519991446`*^9, {3.7762588302820773`*^9, 3.776258843832451*^9}, {
   3.776259067621396*^9, 3.776259141305867*^9}, {3.7762592825502324`*^9, 
   3.7762592838410234`*^9}, {3.7762595599688635`*^9, 3.776259573322821*^9}, {
   3.7762626215226264`*^9, 3.7762626221080885`*^9}, 3.7762626637019634`*^9, {
   3.776262722268931*^9, 3.7762627480442615`*^9}, {3.7817890783769817`*^9, 
   3.7817890869391484`*^9}, {3.781789203422615*^9, 3.781789235093998*^9}, {
   3.7817892994738827`*^9, 3.781789314719137*^9}, {3.781789354488819*^9, 
   3.7817893846372194`*^9}, {3.7817894999429884`*^9, 3.781789505789366*^9}, {
   3.7817896812931633`*^9, 3.781789709706241*^9}, {3.7817898252331295`*^9, 
   3.781789842349427*^9}, {3.7817926179830065`*^9, 3.781792635408366*^9}, {
   3.7818028185765495`*^9, 3.7818028227134967`*^9}, {3.7818029281402283`*^9, 
   3.781802944248176*^9}, {3.7819758375511303`*^9, 3.7819758402937984`*^9}, {
   3.7819795435214305`*^9, 3.78197954352639*^9}, {3.78197964799416*^9, 
   3.781979648001108*^9}, {3.781979704677614*^9, 3.781979874775377*^9}, {
   3.781979905032503*^9, 3.7819799289664893`*^9}, {3.8385422159748745`*^9, 
   3.838542296452701*^9}, {3.838542351149517*^9, 3.83854237002676*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"5d96d89e-9e7a-4a27-a5e3-f136196e1629"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rkQn3qiTZ/KPvhaO/O0pCy7rxP8DEd9DRg==
          "]]}, Annotation[#, "Charting`Private`Tag$8723#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5Q==
          "]]}, Annotation[#, "Charting`Private`Tag$8723#2"]& ], {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
v0pfftaF/wdzL384
          "]]}, Annotation[#, "Charting`Private`Tag$8723#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rkQn2qiTZ/KPvhaO/O0pCy7rRP8DoGI7Rg==
          "]]}, Annotation[#, "Charting`Private`Tag$8723#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5Q==
          "]]}, Annotation[#, "Charting`Private`Tag$8723#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmHk8VN8bx5XKzlizDWLGnhRJKucJ7agoZE+bJCGUKCpZSwjZQrInO4ly
pLRIfVV2WbPMzM0aZQm/+/uH1/s1d+55ns/n85w5925wumR2ZjUbG1sZ+ef/
/9kx95efW6P1j8z3VvpVdiM6s3aHzINLSErag9I43I0Wijed7owJQAnLr3Yv
ifxAwyLOc5Ux95G1e8dlwcs/UNfeoPqsmDTkwS4r9mtjD2p1iFF6FFOESk3l
nhmk9iIzV4muhBiMtqwqHZIp70e8ugjH76tDfmsExRkf+9HkCw/BgYY6pKAd
9zu9rx9Vvmqr8K5/jd4SIaYD3APIsCF9ObXmDbK4+GdfkuMAsmvRjpp69h7N
Nd6hdnMOouhp27L4mP/Qtv9sXbiNf6J7okk76/iakRq3RNeekz/Rt5I7slvN
mtG4ThT1gs9PZMOyHZbpbkYze9mxZ/pP5GbD4zH96yvaId3fdPn3TxS7yzk0
kdKCGDqZ7spxQ6hvlfzzUcsOVH3+pfrLd8OIlsqXZJvSgYq/B2qu7RxGznrz
/l/7O1DD+a1btxLDaNqz2aDmfCcKKDs8fkBgBK0ZuvEl0q8LsbdU9RlajCDV
d93DW9N+IOPgPfLOfSNoR8NBboPL/Si1q/EI0TOKKC3Z/2170I9OFhUFTxKj
aGhwddzGsn6knT/e1zM/iiLZamQlfvejRtqqBndRBhrcobZ10nMAaefYdXkf
YqDQUh7HVM9B5LhWIXSqlIHsXp+jx8YMItkUWpYnZqAtzW9YYaWDiOl2R6j7
EwP9GPPz9p4eRId9FwtODjHQJpVf4caeP5GjMdw1EmGitrSmigWPITSltyrD
4hITPS1U9puMHkJuOlwa+64xUeCrIBgpGUKc5sJHZO4wkUr3zk9fp4bQyO11
aoFJTOQv9qw/12MYfVMYFhZ8y0QK9+7xWHqMIL37+1/bC7HQXDKz2Th6BB1z
Lv5eJsVCTfl74g1KRpDZmEj3OI2FfD4syWlMjSA5P4lMsW0s1MjuprPWYxTV
j+YpqFuzkPs105Nl7gx0fTDE/FwyCx1025nLGcVAdwc1DKcyWEjBSXXCroiB
jHuV8k7ms1DbgXXXOccZ6CAjvWa2ioV2SdQm2F1gIp3ta7ezWlhIjK+grzSc
icq/jojndLPQJFuSImc+Ex11qtE9OMhCmQzv8lIGEwnOD8gYTrAQd9XGZo6z
LJS6hr9zmYNAQ0+l1tvdYaGPNW94xvgIVJvGZV+ayUIdR7ebvhYmkEfIMGH7
k4WOqcj/kpIlUIfFI45SRwKZD9yfTdAmUOnBCFOOQALJz+0QeL6dQBH6vnG2
aQTablzAX6NPIH3F4wocvQTSjKl86rWfQFmzvMjW5hc6afK355k1gW4wF+6U
XPuFsmeSMxfsCWTVw2hal/QL0fDBjRtPEYi34a11SccvxC/43svwAoFGqkof
r5v7hYoqvqspXSIQLkhn2KwfQ6exc9ykJ4E8Y/191lmMIeVQ7KF9jUDGoS6v
bLzHUPmG8J7C6wRS9LdaUxI7hma6x8f4bxKo85R2jM33MTS4v3AiIIRAoPXr
WfGRcXQzKkOe/oBAkkpdM2vdxxGFpWrfFEeg35IfdtjcH0dRIRpKJxIIlL06
8+PaL+Oo1m/eUuERgQL/RFNsxsaR1VaVGkdSB2tWgGUx7wSSW8rMuP2YQHzf
bIatD00gzhrnP75ZZD8NB9SLXSbQnNaQvUkOgepebLu8NnwCOb4VMlqXR6Ck
Z/Rq67wJlFRpkpmZTyCvx8Krij9MoMnXHDeUCwhkGrdq/1rGBJLg/fxf9DMC
xb69su8Z+ySKVTVM6C8k66kdZ1kKTyI2mkqbSDGBLladiVytMIn2eliGapQQ
SOPAUblV2pNoRf+cqEEpgSY7d5auGE0i6fqAUzplpL8uykbLxyfRb9t7Hjzl
5PqLwm3/zk6irWVp+q9J1rm7cm7xyiT6k8/8aFlBoL/SxPx86CR6dPG10H8k
Vz1ri5hLnETZzuniSpUEuqZfT/2bP4nUTBW6HUje+d+zotmaSeQsym3tS/KS
Q+LumaZJNLOwLe4yybWTQd+neybRcGDZXVOSA2+6n5kan0Sf3bKBm2QDIdu/
EyuTKPirXUk2uR77k31h45QpNLRwoE+B5LdaWlJjG6aQ4s3lxptkvcFvZZ4R
W6aQvf4W7zqyv/3HuRHLcAolHca9fWT/XCOzzYxjU2hO+AlnP6lPo8+A0+iZ
KeSntvy7jtTvLsfnmWGfKfTdWyTjVhGpf0JV8FDIFBqkmIjQSb0pKpniPxOm
kKblFuNc0p8HB/129ldPIROvH8JHST+PdZ/90vtpCs3InM3xIf0WczVz7Pkx
hYzFFTmvk3lIuqcS1LU8hWidx/XUybzYyoiKdQpMo/p1mZTWVAJRi9hy2+Wm
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
Ja5VdqP/AR1dc7g=
          "]]}, Annotation[#, "Charting`Private`Tag$8723#7"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 4 Pi}, {-0.8660254037844104, 0.8660254037844104}}, {{
        0, 12.566370614359172`}, {-0.8660254037844104, 0.8660254037844104}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"], "-", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}], "+", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}]}], "Null", 
       RowBox[{
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}], "-", 
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"]}], 
       RowBox[{
         RowBox[{"-", 
           FractionBox[
            RowBox[{"sin", "(", "x", ")"}], "2"]}], "+", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}], "-", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"2", " ", 
                 RowBox[{"(", 
                   RowBox[{"120", " ", "\[Degree]"}], ")"}]}]}], ")"}]}]}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"2", " ", 
                 RowBox[{"(", 
                   RowBox[{"120", " ", "\[Degree]"}], ")"}]}]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8385423739163933`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"b282b8a0-99bf-4f14-bf80-088d89126e9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"Sin", "[", "x", "]"}]}], "}"}]}], "}"}], ","}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"3", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"3", ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}]}], "}"}]}], "}"}], 
              ","}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"4", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"4", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"5", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"5", ",", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "}"}]}], "}"}], 
              ","}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"6", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"6", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"7", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"7", ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}]}], "}"}], ","}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"8", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"8", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"9", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"9", ",", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "}"}]}], "}"}], 
              ","}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"10", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", 
                  "2"}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"11", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"11", ",", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", "240"}], "]"}]}], "}"}]}], "}"}], ","}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"12", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"12", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}],
                  "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}]}], 
             "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"8", "Pi"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7762449690289106`*^9, 3.7762450605662785`*^9}, {
   3.776245309881672*^9, 3.7762453463170457`*^9}, {3.776245377928497*^9, 
   3.7762453853950386`*^9}, {3.7762454445533295`*^9, 3.776245460482154*^9}, 
   3.7762455145294952`*^9, {3.7762455691335897`*^9, 3.7762455789996467`*^9}, {
   3.7762457270858417`*^9, 3.7762458107863073`*^9}, {3.776245966410675*^9, 
   3.776246053295764*^9}, {3.776246161638256*^9, 3.776246207537467*^9}, {
   3.7762462488948193`*^9, 3.776246435158884*^9}, {3.7762464760842686`*^9, 
   3.776246491527777*^9}, {3.776246529926833*^9, 3.77624654404292*^9}, {
   3.776246592775745*^9, 3.776246593225543*^9}, {3.7762466589924583`*^9, 
   3.776246698520618*^9}, {3.7762467371614647`*^9, 3.776246740547331*^9}, {
   3.7762467719559793`*^9, 3.776246785481386*^9}, {3.776246858903221*^9, 
   3.7762468748539686`*^9}, {3.7762469053433285`*^9, 3.776246939629203*^9}, {
   3.7762469760976486`*^9, 3.776247025338337*^9}, {3.776247230731118*^9, 
   3.7762472325874195`*^9}, {3.776247328827531*^9, 3.7762474783868637`*^9}, {
   3.7762475300335674`*^9, 3.77624759183002*^9}, 3.7762476288727508`*^9, {
   3.776247890156777*^9, 3.7762478928210735`*^9}, {3.7762479636495395`*^9, 
   3.776248040476509*^9}, {3.7762481334245214`*^9, 3.7762481674585814`*^9}, {
   3.7762482453504972`*^9, 3.776248293453601*^9}, {3.776248324986379*^9, 
   3.776248330392412*^9}, {3.7762484628895826`*^9, 3.7762485492312374`*^9}, {
   3.7762486040964108`*^9, 3.77624860541604*^9}, {3.7762487376151795`*^9, 
   3.776248762969157*^9}, {3.7762489113584657`*^9, 3.7762489239940205`*^9}, {
   3.7762489942395487`*^9, 3.776249015055442*^9}, {3.7762492823811564`*^9, 
   3.776249380934408*^9}, {3.776249418658967*^9, 3.776249418881044*^9}, {
   3.7762496550446444`*^9, 3.7762497079439783`*^9}, {3.7762502573466063`*^9, 
   3.7762502626155667`*^9}, {3.776250297888674*^9, 3.7762503038766537`*^9}, {
   3.776250758540631*^9, 3.7762507608885183`*^9}, {3.776257780916114*^9, 
   3.7762578113520937`*^9}, 3.7762584976156335`*^9, {3.776258530155101*^9, 
   3.7762585782416635`*^9}, 3.7762589199114966`*^9, {3.7762597761452665`*^9, 
   3.77625979479117*^9}, {3.776259859772766*^9, 3.776259860787538*^9}, {
   3.7762599389191523`*^9, 3.7762599393769283`*^9}, 3.776260025537594*^9, {
   3.776260090564295*^9, 3.7762600922188663`*^9}, {3.7762601994082203`*^9, 
   3.7762602153827143`*^9}, 3.776260308763921*^9, {3.7762625807884316`*^9, 
   3.7762626163135805`*^9}, {3.776262757353982*^9, 3.776262822152968*^9}, {
   3.7762629119065504`*^9, 3.776263254791382*^9}, {3.7762632935835934`*^9, 
   3.77626331722681*^9}, {3.7762633896819887`*^9, 3.7762634189520645`*^9}, {
   3.776263485908491*^9, 3.776263520470005*^9}, {3.776263551345936*^9, 
   3.7762636038950686`*^9}, {3.7762636491909237`*^9, 
   3.7762636550673294`*^9}, {3.7762637082993145`*^9, 3.776263711777449*^9}, {
   3.776263768906886*^9, 3.7762638313266144`*^9}, {3.7762639462354436`*^9, 
   3.776264001638835*^9}, {3.7762640481551323`*^9, 3.7762640486239004`*^9}, {
   3.776264230186479*^9, 3.7762642309363127`*^9}, {3.7762643073714542`*^9, 
   3.776264520437558*^9}, {3.7762645539558334`*^9, 3.776264554846249*^9}, {
   3.776264621413288*^9, 3.776264667797309*^9}, 3.7817895980756216`*^9, {
   3.7818029544968014`*^9, 3.7818029922278757`*^9}, {3.78197954353437*^9, 
   3.781979543544374*^9}, {3.7819796480061293`*^9, 3.7819796480330615`*^9}, {
   3.8385409274045506`*^9, 3.838540934818779*^9}, {3.838540997217193*^9, 
   3.8385410369696927`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a8b197d0-4289-4a65-8e5d-e613db90c31b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 24.439892440575004`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 8 Pi}}, Typeset`size$$ = {360., {56., 60.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$5154$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$5154$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, Thick, 
         Line[{{{2, 0}, {
            2, Sin[$CellContext`x$$]/2 - Sin[$CellContext`x$$ + 120 Degree]/
             2}}, {{4, 0}, {
            4, (-Sin[$CellContext`x$$ + 120 Degree])/2 + 
             Sin[$CellContext`x$$ + 240 Degree]/2}}, {{6, 0}, {
            6, Sin[$CellContext`x$$ + 240 Degree]/2 - Sin[$CellContext`x$$]/
             2}}, {{8, 0}, {
            8, (-Sin[$CellContext`x$$])/2 + 
             Sin[$CellContext`x$$ + 120 Degree]/2}}, {{10, 0}, {
            10, Sin[$CellContext`x$$ + 120 Degree]/2 - 
             Sin[$CellContext`x$$ + 2 (120 Degree)]/2}}, {{12, 0}, {
            12, (-Sin[$CellContext`x$$ + 2 (120 Degree)])/2 + 
             Sin[$CellContext`x$$]/2}}}]}, Axes -> True, GridLines -> 
        Automatic, PlotRange -> {{-1, 13}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`x$$, 0, 8 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {115., 121.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.776248172112703*^9, 3.7762482949063764`*^9, 3.776248332416596*^9, {
   3.776248485969389*^9, 3.7762485051805077`*^9}, 3.776248551710824*^9, 
   3.776248607175286*^9, {3.77624874004272*^9, 3.776248764419879*^9}, 
   3.7762489330253615`*^9, 3.7762490165171986`*^9, 3.776249525806875*^9, {
   3.776249699187179*^9, 3.776249709410354*^9}, 3.7762502635027027`*^9, 
   3.776250762718732*^9, 3.7762508210760403`*^9, 3.776257817685461*^9, 
   3.7762585151978474`*^9, 3.7762589231523747`*^9, 3.7762597993297343`*^9, 
   3.776259871558988*^9, 3.776259976104507*^9, 3.7762600571043334`*^9, 
   3.7762600934650197`*^9, 3.7762602178747873`*^9, 3.7762603098294153`*^9, {
   3.7762625870929747`*^9, 3.7762626018213043`*^9}, {3.7762627629961863`*^9, 
   3.776262792256454*^9}, 3.776262825415874*^9, {3.776262935860692*^9, 
   3.776263008238638*^9}, {3.776263047806803*^9, 3.7762630802105947`*^9}, 
   3.7762631126964726`*^9, {3.7762632156129923`*^9, 3.7762632189093895`*^9}, 
   3.776263319642626*^9, {3.776263404665512*^9, 3.77626342027991*^9}, 
   3.7762636311256104`*^9, {3.776263776421623*^9, 3.776263803418232*^9}, 
   3.7762638345455723`*^9, 3.7762640066890154`*^9, 3.776264050467695*^9, 
   3.7762643198585916`*^9, 3.776264355214696*^9, {3.776264420268625*^9, 
   3.7762644489484596`*^9}, 3.7762645246104064`*^9, 3.7762646224446497`*^9, {
   3.776264653745229*^9, 3.776264672256291*^9}, {3.7818029973342247`*^9, 
   3.781803000042986*^9}, {3.782066878498183*^9, 3.782066923209853*^9}, {
   3.8385409408575025`*^9, 3.8385409475355463`*^9}, {3.8385410388427963`*^9, 
   3.8385410426183977`*^9}, 3.838558570734786*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"e14aa849-36b7-44ac-a665-d88e261bdd79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Red", ",", "Thick", ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "10"}], "]"}], ",", "Blue", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"345", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"15", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Black", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Green", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"105", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"135", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Blue", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Black", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"225", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"255", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Green", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Red", ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"magnetic", " ", "induction", " ", "vectors"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", "10"}], ",", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"0", "Degree"}], "]"}], "*", "10"}], "+", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"0", "Degree"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"Sin", "[", "x", "]"}], ")"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"0", "Degree"}], "]"}], "*", "10"}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"0", "Degree"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"Sin", "[", "x", "]"}], ")"}]}]}]}], "}"}]}], "}"}],
            ","}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"30", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"30", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"60", "Degree"}], "]"}], "*", "10"}], ",", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"60", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}]}]}], 
               "}"}]}], "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"90", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"90", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"120", "Degree"}], "]"}], "*", "10"}], ",", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"120", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], ")"}]}]}]}], "}"}]}], 
             "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"150", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"150", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", "10"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"180", "Degree"}], "]"}], "*", "10"}], ",", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"180", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]}], "}"}]}], 
             "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"210", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"210", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"240", "Degree"}], "]"}], "*", "10"}], ",", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"240", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], ")"}]}]}]}], "}"}]}], 
             "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"270", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"270", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", "2"}]}],
                  ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", "2"}]}],
                  ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"300", "Degree"}], "]"}], "*", "10"}], ",", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"300", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", "240"}], "]"}], ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", "240"}], "]"}], ")"}]}]}]}], "}"}]}], 
             "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"330", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"330", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}],
                   "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}],
                   "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "rotating", " ", "magnetic", " ", "induction", " ", "vector"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Sin", "[", "x", "]"}], ")"}]}], "+"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}]}], "+"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}], "+",
                "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "+"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", "2"}]}],
                  ")"}]}], "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", "240"}], "]"}], ")"}]}], "+"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}],
                   "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"0", "Degree"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"Sin", "[", "x", "]"}], ")"}]}], "+"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}], "+",
                "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "+"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}], "/", "2"}]}],
                  ")"}]}], "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", "240"}], "]"}], ")"}]}], "+"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"120", "Degree"}], ")"}]}]}], "]"}]}], "/", "2"}],
                   "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "11"}], ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "11"}], ",", "11"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"8", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781783895613417*^9, 3.7817838958188086`*^9}, {
   3.781784045610384*^9, 3.781784070141843*^9}, {3.781784130461586*^9, 
   3.7817842175627627`*^9}, {3.781784252896265*^9, 3.78178432063718*^9}, {
   3.781784354270313*^9, 3.781784396656995*^9}, {3.7817844306087265`*^9, 
   3.7817844632275577`*^9}, {3.7817847898314524`*^9, 3.781784845537565*^9}, {
   3.7817848894152517`*^9, 3.781784892719408*^9}, {3.7817849341925416`*^9, 
   3.78178496689412*^9}, {3.7817850071874046`*^9, 3.78178500819073*^9}, {
   3.7817850465980644`*^9, 3.7817850750101085`*^9}, {3.7817851343514414`*^9, 
   3.78178513495786*^9}, {3.7817855408438396`*^9, 3.781785550641647*^9}, {
   3.78178560637965*^9, 3.781785687179655*^9}, {3.781785750411622*^9, 
   3.7817858164032135`*^9}, {3.7817858978275414`*^9, 3.781785935769122*^9}, {
   3.781786016419527*^9, 3.7817860192908163`*^9}, {3.7817861127978516`*^9, 
   3.7817861268223763`*^9}, {3.7817861917039657`*^9, 
   3.7817861922155504`*^9}, {3.781786303838191*^9, 3.781786312373344*^9}, {
   3.7817863796195803`*^9, 3.781786456165988*^9}, 3.781786511912964*^9, {
   3.7817866364601164`*^9, 3.7817866621843224`*^9}, {3.7817870767716846`*^9, 
   3.7817871542036877`*^9}, {3.781787225270745*^9, 3.7817872439009123`*^9}, {
   3.781787315887333*^9, 3.7817874097248454`*^9}, {3.7817874653720026`*^9, 
   3.781787595824313*^9}, {3.781787641208954*^9, 3.781787688276168*^9}, {
   3.7817877545463142`*^9, 3.7817878680838127`*^9}, {3.781787901387783*^9, 
   3.7817879072989483`*^9}, {3.7817881582491055`*^9, 
   3.7817881662936316`*^9}, {3.7817882097205563`*^9, 
   3.7817882698617725`*^9}, {3.781788395366871*^9, 3.781788413997045*^9}, {
   3.781788534749242*^9, 3.7817885365892963`*^9}, {3.7817886464705987`*^9, 
   3.78178865382294*^9}, {3.781788699218585*^9, 3.7817888623096113`*^9}, {
   3.7817889072016077`*^9, 3.781788974523642*^9}, {3.781789015242753*^9, 
   3.7817890440816984`*^9}, {3.7817892444060936`*^9, 3.781789279050476*^9}, {
   3.7817893950015182`*^9, 3.781789399855506*^9}, {3.781789441711623*^9, 
   3.7817894622437677`*^9}, {3.7817895314098644`*^9, 3.78178958094744*^9}, {
   3.7817896119036913`*^9, 3.7817896490254564`*^9}, {3.7817905670495577`*^9, 
   3.781790568576501*^9}, {3.7817915278830123`*^9, 3.7817915318514357`*^9}, {
   3.7817924393165607`*^9, 3.781792440664956*^9}, 3.7817925174706764`*^9, {
   3.781792563872597*^9, 3.781792639724867*^9}, {3.781792879108904*^9, 
   3.7817928823542957`*^9}, {3.7817930130582137`*^9, 3.781793067569532*^9}, {
   3.7817931405332594`*^9, 3.781793151134012*^9}, {3.7817931904740877`*^9, 
   3.7817931913128705`*^9}, 3.7817932657817755`*^9, {3.7817933100314684`*^9, 
   3.7817933283624897`*^9}, {3.7817933890821323`*^9, 
   3.7817934106235857`*^9}, {3.7817934538191133`*^9, 3.78179350551292*^9}, {
   3.7817935769888525`*^9, 3.7817936089105234`*^9}, {3.7817936509401646`*^9, 
   3.781793708516218*^9}, {3.781793781119135*^9, 3.781793851230756*^9}, {
   3.7817939182535477`*^9, 3.7817939403904047`*^9}, {3.781793970586649*^9, 
   3.7817939718004036`*^9}, {3.781794010857995*^9, 3.7817940373102837`*^9}, {
   3.7817962352914047`*^9, 3.7817962781099453`*^9}, {3.781796311317174*^9, 
   3.781796380012564*^9}, {3.7817964560343075`*^9, 3.781796459340466*^9}, {
   3.7817965295118923`*^9, 3.7817965527288284`*^9}, {3.7817966035778656`*^9, 
   3.7817966352273235`*^9}, {3.7817966755624714`*^9, 
   3.7817969065300694`*^9}, {3.7817971354919806`*^9, 
   3.7817971617837076`*^9}, {3.7817972599532747`*^9, 3.781797278330117*^9}, {
   3.7817975760104203`*^9, 3.781797623240101*^9}, {3.7817976791895967`*^9, 
   3.7817976951099777`*^9}, {3.781797789349069*^9, 3.7817978008633156`*^9}, {
   3.781797955730285*^9, 3.781798002674793*^9}, {3.781798058319103*^9, 
   3.7817980814263105`*^9}, {3.781798231210667*^9, 3.781798248780631*^9}, {
   3.7817983065322943`*^9, 3.7817983574760747`*^9}, {3.781798390086899*^9, 
   3.781798511958112*^9}, {3.7817985842568426`*^9, 3.7817986004765253`*^9}, {
   3.781798634494602*^9, 3.78179869496795*^9}, {3.781798745939662*^9, 
   3.781798747064623*^9}, {3.7817987842193336`*^9, 3.7817988463353076`*^9}, {
   3.781798886855968*^9, 3.781799095979568*^9}, {3.7817992087750187`*^9, 
   3.781799222594098*^9}, {3.7817992563917503`*^9, 3.781799334140851*^9}, {
   3.781799612974471*^9, 3.7817996651660137`*^9}, {3.7817997131064205`*^9, 
   3.781799720641341*^9}, {3.781800014506775*^9, 3.781800081492647*^9}, {
   3.7818001440890083`*^9, 3.7818001774089975`*^9}, {3.7818002361798306`*^9, 
   3.781800324379114*^9}, {3.7818010452641354`*^9, 3.7818010623764267`*^9}, {
   3.781801111747695*^9, 3.781801148950241*^9}, 3.781801434768199*^9, {
   3.781801483540753*^9, 3.781801496318595*^9}, {3.781801898277136*^9, 
   3.7818019035919275`*^9}, {3.7818019358011103`*^9, 
   3.7818019636626215`*^9}, {3.7818024892015*^9, 3.7818025132203226`*^9}, {
   3.7818029742081013`*^9, 3.781802982689432*^9}, {3.7818031568658223`*^9, 
   3.7818031710080214`*^9}, {3.781975862811568*^9, 3.781975863301313*^9}, {
   3.7819795435533504`*^9, 3.7819796067374754`*^9}, {3.7819796480500364`*^9, 
   3.7819796579914637`*^9}, {3.838541300664728*^9, 3.8385413858570566`*^9}, {
   3.838541435211633*^9, 3.8385414559856124`*^9}, {3.8385415330379086`*^9, 
   3.838541656546344*^9}, 3.838541772601036*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"672bb44d-add1-4546-9303-845437d3d5d2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 24.060627674995185`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 8 Pi}}, Typeset`size$$ = {
    360., {177., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`x$8032$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$8032$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, Thick, 
         Circle[{0, 0}, 10], Blue, 
         Circle[{Sin[345 Degree] 10, Cos[345 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[345 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[345 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[345 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[345 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[345 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[345 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[345 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[345 Degree] 10}}], 
         Circle[{Sin[15 Degree] 10, Cos[15 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[15 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[15 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[15 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[15 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[15 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[15 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[15 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[15 Degree] 10}}], Black, 
         Circle[{Sin[45 Degree] 10, Cos[45 Degree] 10}, 1], 
         Disk[{Sin[45 Degree] 10, Cos[45 Degree] 10}, 0.5], 
         Circle[{Sin[75 Degree] 10, Cos[75 Degree] 10}, 1], 
         Disk[{Sin[75 Degree] 10, Cos[75 Degree] 10}, 0.5], Green, 
         Circle[{Sin[105 Degree] 10, Cos[105 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[105 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[105 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[105 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[105 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[105 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[105 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[105 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[105 Degree] 10}}], 
         Circle[{Sin[135 Degree] 10, Cos[135 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[135 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[135 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[135 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[135 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[135 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[135 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[135 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[135 Degree] 10}}], Blue, 
         Circle[{Sin[165 Degree] 10, Cos[165 Degree] 10}, 1], 
         Disk[{Sin[165 Degree] 10, Cos[165 Degree] 10}, 0.5], 
         Circle[{Sin[195 Degree] 10, Cos[195 Degree] 10}, 1], 
         Disk[{Sin[195 Degree] 10, Cos[195 Degree] 10}, 0.5], Black, 
         Circle[{Sin[225 Degree] 10, Cos[225 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[225 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[225 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[225 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[225 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[225 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[225 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[225 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[225 Degree] 10}}], 
         Circle[{Sin[255 Degree] 10, Cos[255 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[255 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[255 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[255 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[255 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[255 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[255 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[255 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[255 Degree] 10}}], Green, 
         Circle[{Sin[285 Degree] 10, Cos[285 Degree] 10}, 1], 
         Disk[{Sin[285 Degree] 10, Cos[285 Degree] 10}, 0.5], 
         Circle[{Sin[315 Degree] 10, Cos[315 Degree] 10}, 1], 
         Disk[{Sin[315 Degree] 10, Cos[315 Degree] 10}, 0.5], Red, 
         Line[{{{Sin[30 Degree] 10, Cos[30 Degree] 10}, {
            Sin[30 Degree] 10 + 
             Sin[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2), Cos[30 Degree] 10 + 
             Cos[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2)}}, {{
            Sin[90 Degree] 10, Cos[90 Degree] 10}, {
            Sin[90 Degree] 10 + 
             Sin[90 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2), Cos[90 Degree] 10 + 
             Cos[90 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2)}}, {{
            Sin[150 Degree] 10, Cos[150 Degree] 10}, {
            Sin[150 Degree] 10 + 
             Sin[150 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$]/2), Cos[150 Degree] 10 + 
             Cos[150 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$]/2)}}, {{
            Sin[210 Degree] 10, Cos[210 Degree] 10}, {
            Sin[210 Degree] 10 + 
             Sin[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2), Cos[210 Degree] 10 + 
             Cos[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2)}}, {{
            Sin[270 Degree] 10, Cos[270 Degree] 10}, {
            Sin[270 Degree] 10 + 
             Sin[270 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$ + 2 (120 Degree)]/2), Cos[270 Degree] 10 + 
             Cos[270 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$ + 2 (120 Degree)]/2)}}, {{
            Sin[330 Degree] 10, Cos[330 Degree] 10}, {
            Sin[330 Degree] 10 + 
             Sin[330 Degree] ((-Sin[$CellContext`x$$ + 2 (120 Degree)])/2 + 
               Sin[$CellContext`x$$]/2), Cos[330 Degree] 10 + 
             Cos[330 Degree] ((-Sin[$CellContext`x$$ + 2 (120 Degree)])/2 + 
               Sin[$CellContext`x$$]/2)}}, {{0, 0}, {
            Sin[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Sin[90 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Sin[150 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$]/2) + 
             Sin[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Sin[270 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$ + 2 (120 Degree)]/2) + 
             Sin[330 Degree] ((-Sin[$CellContext`x$$ + 2 (120 Degree)])/2 + 
               Sin[$CellContext`x$$]/2), 
             Cos[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Cos[90 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Cos[150 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$]/2) + 
             Cos[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Cos[270 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$ + 2 (120 Degree)]/2) + 
             Cos[330 Degree] ((-Sin[$CellContext`x$$ + 2 (120 Degree)])/2 + 
               Sin[$CellContext`x$$]/2)}}}]}, Axes -> True, GridLines -> 
        Automatic, PlotRange -> {{-11, 11}, {-11, 11}}], 
      "Specifications" :> {{$CellContext`x$$, 0, 8 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {237., 243.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8385413263663416`*^9, 3.8385413289862986`*^9}, {
   3.8385413934682903`*^9, 3.8385413977407217`*^9}, 3.83854178594666*^9, 
   3.838541905039631*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"a3176082-617c-426d-baa4-24c5732f9c5f"]
}, Open  ]],

Cell[TextData[{
 StyleBox["U1",
  FontColor->RGBColor[0, 0, 1]],
 ": \t0\[Degree]\t\t",
 StyleBox["V1",
  FontColor->RGBColor[0, 1, 0]],
 ":\t240\[Degree]\t\tW1:\t120\[Degree]\n",
 StyleBox["U2",
  FontColor->RGBColor[0, 0, 1]],
 ":\t180\[Degree]\t\t",
 StyleBox["V2",
  FontColor->RGBColor[0, 1, 0]],
 ":\t 60\[Degree]\t\tW2:\t300\[Degree]\t\t"
}], "Text",
 CellChangeTimes->{{3.7820594046329155`*^9, 3.782059659928439*^9}, {
  3.7821512158717422`*^9, 3.7821512381920757`*^9}, {3.782151271144985*^9, 
  3.782151378421214*^9}, {3.7821517074935455`*^9, 3.7821517838603897`*^9}, {
  3.7821518230775547`*^9, 3.7821518611408033`*^9}, {3.7821524876938963`*^9, 
  3.7821524943411264`*^9}, {3.78215403722403*^9, 3.782154040823409*^9}, {
  3.804755533573562*^9, 3.8047555572993593`*^9}, {3.8047555884969187`*^9, 
  3.804755606289332*^9}, {3.8385403756916237`*^9, 3.838540416168874*^9}, {
  3.838540485943868*^9, 3.8385404894311304`*^9}, {3.8385405434641*^9, 
  3.8385405538324146`*^9}},ExpressionUUID->"10217bba-e252-4b71-ba3e-\
f224df62e1e1"],

Cell[CellGroupData[{

Cell["Wiring diagram", "Subtitle",
 CellChangeTimes->{{3.782067767992212*^9, 3.782067770890467*^9}, {
  3.7820678015145664`*^9, 
  3.7820678017778606`*^9}},ExpressionUUID->"f451f82b-1ccb-44b1-b89a-\
8324c07be050"],

Cell[BoxData[
 RowBox[{
  RowBox[{"circuit", "[", 
   RowBox[{"x_:", "0"}], "]"}], ":=", 
  RowBox[{"Line", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", "x"}], ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", "x"}], ",", "10"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4.5", "+", "x"}], ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"8", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"8", "+", "x"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5", "+", "x"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "x"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4.5", "+", "x"}], ",", "12"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "+", "x"}], ",", 
       RowBox[{"-", "4"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7820649015936193`*^9, 3.7820649018061123`*^9}, {
   3.7820651468467274`*^9, 3.78206519785039*^9}, {3.7820652420452137`*^9, 
   3.7820652558762703`*^9}, {3.7820652917902355`*^9, 3.782065313941027*^9}, 
   3.7820668489381895`*^9, {3.7821483635801463`*^9, 3.78214836400605*^9}, {
   3.782148461813548*^9, 3.782148462885724*^9}, {3.7821504978452234`*^9, 
   3.782150498341889*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"c8d31eed-5ed6-4861-8d7f-c851461bc293"],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"circuit", "[", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"U1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"U2", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "Black", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"9", ",", 
          RowBox[{"-", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"12.5", ",", "13"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"12.5", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"10", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"12.5", ",", "12"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "13"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "12"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"V2", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"V1", ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "Green", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"circuit", "[", "4", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"W1", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"W2", ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}],
    ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "14"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "14"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7820542317586217`*^9, 3.7820542984742765`*^9}, {
   3.782054334989702*^9, 3.782054376603456*^9}, {3.78205442025174*^9, 
   3.7820545109562674`*^9}, {3.7820545414637156`*^9, 
   3.7820545929580603`*^9}, {3.7820547125752983`*^9, 3.782054779413662*^9}, {
   3.7820548498234396`*^9, 3.782054992007351*^9}, {3.7820550689496355`*^9, 
   3.782055101001954*^9}, {3.7820551533610168`*^9, 3.782055194286584*^9}, {
   3.782055231399435*^9, 3.782055262276831*^9}, {3.7820552939342375`*^9, 
   3.7820553033969398`*^9}, {3.782055364319089*^9, 3.782055375121194*^9}, {
   3.782055431078623*^9, 3.7820554342261753`*^9}, {3.782056783634048*^9, 
   3.782056788029334*^9}, {3.7820577354090385`*^9, 3.7820577618284426`*^9}, {
   3.7820578380566835`*^9, 3.782057904132043*^9}, 3.782057939149399*^9, {
   3.7820579811461716`*^9, 3.7820579813147154`*^9}, {3.782058103412324*^9, 
   3.7820582177715836`*^9}, {3.7820593448377867`*^9, 3.782059345911875*^9}, {
   3.782059738433578*^9, 3.782059758548805*^9}, {3.7820598645843573`*^9, 
   3.782059867894556*^9}, {3.7820599233891535`*^9, 3.782059948102123*^9}, {
   3.7820600320267754`*^9, 3.7820600744533296`*^9}, {3.7820601123151155`*^9, 
   3.782060146228496*^9}, {3.7820602317857804`*^9, 3.7820604431108675`*^9}, {
   3.7820613981228*^9, 3.7820614059199123`*^9}, {3.782064937800831*^9, 
   3.7820649432622643`*^9}, {3.7820653969451323`*^9, 
   3.7820654075836945`*^9}, {3.782066851123372*^9, 3.78206685629852*^9}, 
   3.7821480700079374`*^9, 3.782148100308931*^9, {3.782148308968135*^9, 
   3.782148333942374*^9}, 3.782148476487338*^9, {3.782148532396864*^9, 
   3.7821487320152416`*^9}, {3.7821487791781664`*^9, 3.782148793309432*^9}, {
   3.782148847474595*^9, 3.782148877902291*^9}, {3.7821490297443514`*^9, 
   3.7821491025866275`*^9}, {3.782149138851683*^9, 3.7821491900767536`*^9}, {
   3.7821492277999067`*^9, 3.782149312591242*^9}, {3.782149377750058*^9, 
   3.782149399068071*^9}, {3.782149465326947*^9, 3.7821494937788887`*^9}, {
   3.7821495793930244`*^9, 3.7821496626584387`*^9}, {3.782149714318341*^9, 
   3.7821497168555593`*^9}, {3.7821497599507585`*^9, 3.78214979721012*^9}, {
   3.7821498551023946`*^9, 3.7821500046894855`*^9}, {3.7821501765291667`*^9, 
   3.7821501901078234`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"4da3cc6e-53d9-452c-8b34-f8734ab65142"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], Thickness[Large], 
    LineBox[{{1, -4}, {1, 10}, {4.5, 13}, {8, 10}, {8, 0}, {5, -2}, {2, 0}, {
      2, 10}, {4.5, 12}, {7, 10}, {7, -4}}], InsetBox["U1", {1, -5}], 
    InsetBox["U2", {7, -5}]}, 
   {GrayLevel[0], Thickness[Large], LineBox[{{9, -4}, {9, 10}, {12.5, 13}}], 
    LineBox[{{12.5, -2}, {10, 0}, {10, 10}, {12.5, 12}}], 
    LineBox[{{0.5, 13}, {4, 10}, {4, 0}, {0.5, -2}}], 
    LineBox[{{0.5, 12}, {3, 10}, {3, -4}}], InsetBox["W2", {3, -5}], 
    InsetBox["W1", {9, -5}]}, 
   {RGBColor[0, 1, 0], Thickness[Large], 
    LineBox[{{5, -4}, {5, 10}, {8.5, 13}, {12, 10}, {12, 0}, {9, -2}, {6, 
      0}, {6, 10}, {8.5, 12}, {11, 10}, {11, -4}}], InsetBox["V1", {5, -5}], 
    InsetBox["V2", {11, -5}]}},
  PlotRange->{{-1, 14}, {-6, 14}}]], "Input",
 CellChangeTimes->{{3.804756056753668*^9, 
  3.8047560717934375`*^9}},ExpressionUUID->"69f1b940-d1c4-4823-ac29-\
78b80242cd20"],

Cell[TextData[{
 StyleBox["U1",
  FontColor->RGBColor[0, 0, 1]],
 ": \t0\[Degree]\t\t",
 StyleBox["V1",
  FontColor->RGBColor[0, 1, 0]],
 ":\t240\[Degree]\t\tW1:\t120\[Degree]\n",
 StyleBox["U2",
  FontColor->RGBColor[0, 0, 1]],
 ":\t180\[Degree]\t\t",
 StyleBox["V2",
  FontColor->RGBColor[0, 1, 0]],
 ":\t 60\[Degree]\t\tW2:\t300\[Degree]"
}], "Text",
 CellChangeTimes->{{3.7820594046329155`*^9, 3.782059659928439*^9}, {
   3.7821512158717422`*^9, 3.7821512381920757`*^9}, {3.782151271144985*^9, 
   3.782151378421214*^9}, {3.7821517074935455`*^9, 3.7821517838603897`*^9}, {
   3.7821518230775547`*^9, 3.7821518611408033`*^9}, {3.7821524876938963`*^9, 
   3.7821524943411264`*^9}, 3.782154048695366*^9, {3.804756075555334*^9, 
   3.8047560959956665`*^9}},ExpressionUUID->"5687f6df-51f3-4ebd-9c94-\
49ae5575dd8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counterclockwise rotation", "Subtitle",
 CellChangeTimes->{{3.7819801560015764`*^9, 3.7819801633619003`*^9}, {
  3.7819804271068563`*^9, 
  3.7819804300479937`*^9}},ExpressionUUID->"67a4a4d5-91dd-428d-a295-\
801003e5034a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Sin", " ", "[", "x", "]"}], ","}], "*)"}], 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", " ", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], " ", ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", " ", "[", 
         RowBox[{"x", "+", 
          RowBox[{"240", "Degree"}]}], "]"}]}], ","}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", " ", "[", 
         RowBox[{"x", "+", 
          RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"Sin", " ", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Sin", " ", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], ","}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", " ", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", " ", "[", "x", "]"}]}], ","}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], ","}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "+", 
         RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "+", 
          RowBox[{"120", "Degree"}]}], "]"}]}], ","}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "+", 
          RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"4", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.776239169741642*^9, 3.776239225692113*^9}, {
   3.7762392804766016`*^9, 3.776239284849877*^9}, {3.7762393199490724`*^9, 
   3.77623933910382*^9}, {3.7762394355350356`*^9, 3.77623947531962*^9}, {
   3.7762395456793756`*^9, 3.7762395518010106`*^9}, {3.7762396763761325`*^9, 
   3.77623979448132*^9}, {3.7762398482504077`*^9, 3.77623986573869*^9}, {
   3.776240738306692*^9, 3.7762408137240973`*^9}, {3.7762408513773594`*^9, 
   3.7762408723423185`*^9}, {3.776240918495944*^9, 3.776240927380189*^9}, {
   3.776240963723025*^9, 3.7762409958651123`*^9}, {3.7762581433809104`*^9, 
   3.7762581856990757`*^9}, 3.7762583045474467`*^9, {3.776258359533263*^9, 
   3.7762583623059545`*^9}, 3.776258395690838*^9, {3.7762584446960955`*^9, 
   3.776258445235592*^9}, 3.776258674970976*^9, 3.77625871623116*^9, 
   3.7762587519991446`*^9, {3.7762588302820773`*^9, 3.776258843832451*^9}, {
   3.776259067621396*^9, 3.776259141305867*^9}, {3.7762592825502324`*^9, 
   3.7762592838410234`*^9}, {3.7762595599688635`*^9, 3.776259573322821*^9}, {
   3.7762626215226264`*^9, 3.7762626221080885`*^9}, 3.7762626637019634`*^9, {
   3.776262722268931*^9, 3.7762627480442615`*^9}, {3.7817890783769817`*^9, 
   3.7817890869391484`*^9}, {3.781789203422615*^9, 3.781789235093998*^9}, {
   3.7817892994738827`*^9, 3.781789314719137*^9}, {3.781789354488819*^9, 
   3.7817893846372194`*^9}, {3.7817894999429884`*^9, 3.781789505789366*^9}, {
   3.7817896812931633`*^9, 3.781789709706241*^9}, {3.7817898252331295`*^9, 
   3.781789842349427*^9}, {3.7817926179830065`*^9, 3.781792635408366*^9}, {
   3.7818028185765495`*^9, 3.7818028227134967`*^9}, {3.7818029281402283`*^9, 
   3.781802944248176*^9}, {3.781974385677294*^9, 3.7819743990435295`*^9}, {
   3.7819744432972603`*^9, 3.781974513947363*^9}, 3.781974580196266*^9, {
   3.7819746169400425`*^9, 3.781974673950674*^9}, {3.781974784536023*^9, 
   3.7819748222143364`*^9}, {3.7819748642838807`*^9, 
   3.7819748908937144`*^9}, {3.7819749212156506`*^9, 3.781975286576006*^9}, 
   3.7819753531191196`*^9, {3.781975503207904*^9, 3.7819755039070253`*^9}, {
   3.7819796773686624`*^9, 3.7819796773796043`*^9}, {3.7819800413341413`*^9, 
   3.781980066059046*^9}, {3.8385430091384974`*^9, 3.838543077685338*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"dba499dc-7c15-49e6-9fca-8499b1912fdc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmHk8VN8bx5XKzlizDWLGnhRJKucJ7agoZE+bJCGUKCpZSwjZQrInO4ly
pLRIfVV2WbPMzM0aZQm/+/uH1/s1d+55ns/n85w5925wumR2ZjUbG1sZ+ef/
/9kx95efW6P1j8z3VvpVdiM6s3aHzINLSErag9I43I0Wijed7owJQAnLr3Yv
ifxAwyLOc5Ux95G1e8dlwcs/UNfeoPqsmDTkwS4r9mtjD2p1iFF6FFOESk3l
nhmk9iIzV4muhBiMtqwqHZIp70e8ugjH76tDfmsExRkf+9HkCw/BgYY6pKAd
9zu9rx9Vvmqr8K5/jd4SIaYD3APIsCF9ObXmDbK4+GdfkuMAsmvRjpp69h7N
Nd6hdnMOouhp27L4mP/Qtv9sXbiNf6J7okk76/iakRq3RNeekz/Rt5I7slvN
mtG4ThT1gs9PZMOyHZbpbkYze9mxZ/pP5GbD4zH96yvaId3fdPn3TxS7yzk0
kdKCGDqZ7spxQ6hvlfzzUcsOVH3+pfrLd8OIlsqXZJvSgYq/B2qu7RxGznrz
/l/7O1DD+a1btxLDaNqz2aDmfCcKKDs8fkBgBK0ZuvEl0q8LsbdU9RlajCDV
d93DW9N+IOPgPfLOfSNoR8NBboPL/Si1q/EI0TOKKC3Z/2170I9OFhUFTxKj
aGhwddzGsn6knT/e1zM/iiLZamQlfvejRtqqBndRBhrcobZ10nMAaefYdXkf
YqDQUh7HVM9B5LhWIXSqlIHsXp+jx8YMItkUWpYnZqAtzW9YYaWDiOl2R6j7
EwP9GPPz9p4eRId9FwtODjHQJpVf4caeP5GjMdw1EmGitrSmigWPITSltyrD
4hITPS1U9puMHkJuOlwa+64xUeCrIBgpGUKc5sJHZO4wkUr3zk9fp4bQyO11
aoFJTOQv9qw/12MYfVMYFhZ8y0QK9+7xWHqMIL37+1/bC7HQXDKz2Th6BB1z
Lv5eJsVCTfl74g1KRpDZmEj3OI2FfD4syWlMjSA5P4lMsW0s1MjuprPWYxTV
j+YpqFuzkPs105Nl7gx0fTDE/FwyCx1025nLGcVAdwc1DKcyWEjBSXXCroiB
jHuV8k7ms1DbgXXXOccZ6CAjvWa2ioV2SdQm2F1gIp3ta7ezWlhIjK+grzSc
icq/jojndLPQJFuSImc+Ex11qtE9OMhCmQzv8lIGEwnOD8gYTrAQd9XGZo6z
LJS6hr9zmYNAQ0+l1tvdYaGPNW94xvgIVJvGZV+ayUIdR7ebvhYmkEfIMGH7
k4WOqcj/kpIlUIfFI45SRwKZD9yfTdAmUOnBCFOOQALJz+0QeL6dQBH6vnG2
aQTablzAX6NPIH3F4wocvQTSjKl86rWfQFmzvMjW5hc6afK355k1gW4wF+6U
XPuFsmeSMxfsCWTVw2hal/QL0fDBjRtPEYi34a11SccvxC/43svwAoFGqkof
r5v7hYoqvqspXSIQLkhn2KwfQ6exc9ykJ4E8Y/191lmMIeVQ7KF9jUDGoS6v
bLzHUPmG8J7C6wRS9LdaUxI7hma6x8f4bxKo85R2jM33MTS4v3AiIIRAoPXr
WfGRcXQzKkOe/oBAkkpdM2vdxxGFpWrfFEeg35IfdtjcH0dRIRpKJxIIlL06
8+PaL+Oo1m/eUuERgQL/RFNsxsaR1VaVGkdSB2tWgGUx7wSSW8rMuP2YQHzf
bIatD00gzhrnP75ZZD8NB9SLXSbQnNaQvUkOgepebLu8NnwCOb4VMlqXR6Ck
Z/Rq67wJlFRpkpmZTyCvx8Krij9MoMnXHDeUCwhkGrdq/1rGBJLg/fxf9DMC
xb69su8Z+ySKVTVM6C8k66kdZ1kKTyI2mkqbSDGBLladiVytMIn2eliGapQQ
SOPAUblV2pNoRf+cqEEpgSY7d5auGE0i6fqAUzplpL8uykbLxyfRb9t7Hjzl
5PqLwm3/zk6irWVp+q9J1rm7cm7xyiT6k8/8aFlBoL/SxPx86CR6dPG10H8k
Vz1ri5hLnETZzuniSpUEuqZfT/2bP4nUTBW6HUje+d+zotmaSeQsym3tS/KS
Q+LumaZJNLOwLe4yybWTQd+neybRcGDZXVOSA2+6n5kan0Sf3bKBm2QDIdu/
EyuTKPirXUk2uR77k31h45QpNLRwoE+B5LdaWlJjG6aQ4s3lxptkvcFvZZ4R
W6aQvf4W7zqyv/3HuRHLcAolHca9fWT/XCOzzYxjU2hO+AlnP6lPo8+A0+iZ
KeSntvy7jtTvLsfnmWGfKfTdWyTjVhGpf0JV8FDIFBqkmIjQSb0pKpniPxOm
kKblFuNc0p8HB/129ldPIROvH8JHST+PdZ/90vtpCs3InM3xIf0WczVz7Pkx
hYzFFTmvk3lIuqcS1LU8hWidx/XUybzYyoiKdQpMo/p1mZTWVAJRi9hy2+Wm
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
Ja5VdqP/AR1dc7g=
          "]]}, Annotation[#, "Charting`Private`Tag$10174#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5Q==
          "]]}, Annotation[#, "Charting`Private`Tag$10174#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rkQn2qiTZ/KPvhaO/O0pCy7rRP8DoGI7Rg==
          "]]}, Annotation[#, "Charting`Private`Tag$10174#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
v0pfftaF/wdzL384
          "]]}, Annotation[#, "Charting`Private`Tag$10174#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5Q==
          "]]}, Annotation[#, "Charting`Private`Tag$10174#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rkQn3qiTZ/KPvhaO/O0pCy7rxP8DEd9DRg==
          "]]}, Annotation[#, "Charting`Private`Tag$10174#6"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 4 Pi}, {-0.8660254037844104, 0.8660254037844104}}, {{
        0, 12.566370614359172`}, {-0.8660254037844104, 0.8660254037844104}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"], "-", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}], "+", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}], "-", 
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"]}], 
       RowBox[{
         RowBox[{"-", 
           FractionBox[
            RowBox[{"sin", "(", "x", ")"}], "2"]}], "+", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"240", " ", "\[Degree]"}]}], ")"}]}], "-", 
         RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}]}], 
       RowBox[{
         RowBox[{
           RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
           RowBox[{"sin", "(", 
             RowBox[{"x", "+", 
               RowBox[{"120", " ", "\[Degree]"}]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"sin", "(", "x", ")"}], "2"]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.781974674664764*^9, {3.781974816652169*^9, 3.7819748234550157`*^9}, 
   3.781974894271713*^9, 3.7819749264078054`*^9, {3.7819749914369698`*^9, 
   3.7819750026220713`*^9}, {3.781975041244843*^9, 3.781975047832218*^9}, {
   3.7819750895636544`*^9, 3.7819751479066963`*^9}, {3.7819751905676556`*^9, 
   3.781975225894182*^9}, {3.7819752682499948`*^9, 3.7819752882993603`*^9}, 
   3.7819753550379863`*^9, 3.7819755053621387`*^9, {3.782066879330961*^9, 
   3.782066924040657*^9}, 3.8385430841507063`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"f048fe50-de65-48e8-97e5-394f8709f988"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"Sin", "[", "x", "]"}]}], "}"}]}], "}"}], ","}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", " ", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"3", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"3", ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}]}], "}"}]}], "}"}], 
              ","}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"4", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"4", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", 
                 "+", " ", 
                 RowBox[{
                  RowBox[{"Sin", " ", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"5", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"5", ",", 
                  RowBox[{"Sin", " ", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "}"}]}], "}"}], 
              ","}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"6", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"6", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", " ", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"7", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"7", ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}]}], "}"}], ","}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"8", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"8", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"9", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"9", ",", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "}"}]}], "}"}], 
              ","}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"10", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}]}], 
               "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"11", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"11", ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}]}], "}"}]}], "}"}], 
              ","}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"12", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"12", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}]}], "}"}]}], 
             "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"8", "Pi"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7762449690289106`*^9, 3.7762450605662785`*^9}, {
   3.776245309881672*^9, 3.7762453463170457`*^9}, {3.776245377928497*^9, 
   3.7762453853950386`*^9}, {3.7762454445533295`*^9, 3.776245460482154*^9}, 
   3.7762455145294952`*^9, {3.7762455691335897`*^9, 3.7762455789996467`*^9}, {
   3.7762457270858417`*^9, 3.7762458107863073`*^9}, {3.776245966410675*^9, 
   3.776246053295764*^9}, {3.776246161638256*^9, 3.776246207537467*^9}, {
   3.7762462488948193`*^9, 3.776246435158884*^9}, {3.7762464760842686`*^9, 
   3.776246491527777*^9}, {3.776246529926833*^9, 3.77624654404292*^9}, {
   3.776246592775745*^9, 3.776246593225543*^9}, {3.7762466589924583`*^9, 
   3.776246698520618*^9}, {3.7762467371614647`*^9, 3.776246740547331*^9}, {
   3.7762467719559793`*^9, 3.776246785481386*^9}, {3.776246858903221*^9, 
   3.7762468748539686`*^9}, {3.7762469053433285`*^9, 3.776246939629203*^9}, {
   3.7762469760976486`*^9, 3.776247025338337*^9}, {3.776247230731118*^9, 
   3.7762472325874195`*^9}, {3.776247328827531*^9, 3.7762474783868637`*^9}, {
   3.7762475300335674`*^9, 3.77624759183002*^9}, 3.7762476288727508`*^9, {
   3.776247890156777*^9, 3.7762478928210735`*^9}, {3.7762479636495395`*^9, 
   3.776248040476509*^9}, {3.7762481334245214`*^9, 3.7762481674585814`*^9}, {
   3.7762482453504972`*^9, 3.776248293453601*^9}, {3.776248324986379*^9, 
   3.776248330392412*^9}, {3.7762484628895826`*^9, 3.7762485492312374`*^9}, {
   3.7762486040964108`*^9, 3.77624860541604*^9}, {3.7762487376151795`*^9, 
   3.776248762969157*^9}, {3.7762489113584657`*^9, 3.7762489239940205`*^9}, {
   3.7762489942395487`*^9, 3.776249015055442*^9}, {3.7762492823811564`*^9, 
   3.776249380934408*^9}, {3.776249418658967*^9, 3.776249418881044*^9}, {
   3.7762496550446444`*^9, 3.7762497079439783`*^9}, {3.7762502573466063`*^9, 
   3.7762502626155667`*^9}, {3.776250297888674*^9, 3.7762503038766537`*^9}, {
   3.776250758540631*^9, 3.7762507608885183`*^9}, {3.776257780916114*^9, 
   3.7762578113520937`*^9}, 3.7762584976156335`*^9, {3.776258530155101*^9, 
   3.7762585782416635`*^9}, 3.7762589199114966`*^9, {3.7762597761452665`*^9, 
   3.77625979479117*^9}, {3.776259859772766*^9, 3.776259860787538*^9}, {
   3.7762599389191523`*^9, 3.7762599393769283`*^9}, 3.776260025537594*^9, {
   3.776260090564295*^9, 3.7762600922188663`*^9}, {3.7762601994082203`*^9, 
   3.7762602153827143`*^9}, 3.776260308763921*^9, {3.7762625807884316`*^9, 
   3.7762626163135805`*^9}, {3.776262757353982*^9, 3.776262822152968*^9}, {
   3.7762629119065504`*^9, 3.776263254791382*^9}, {3.7762632935835934`*^9, 
   3.77626331722681*^9}, {3.7762633896819887`*^9, 3.7762634189520645`*^9}, {
   3.776263485908491*^9, 3.776263520470005*^9}, {3.776263551345936*^9, 
   3.7762636038950686`*^9}, {3.7762636491909237`*^9, 
   3.7762636550673294`*^9}, {3.7762637082993145`*^9, 3.776263711777449*^9}, {
   3.776263768906886*^9, 3.7762638313266144`*^9}, {3.7762639462354436`*^9, 
   3.776264001638835*^9}, {3.7762640481551323`*^9, 3.7762640486239004`*^9}, {
   3.776264230186479*^9, 3.7762642309363127`*^9}, {3.7762643073714542`*^9, 
   3.776264520437558*^9}, {3.7762645539558334`*^9, 3.776264554846249*^9}, {
   3.776264621413288*^9, 3.776264667797309*^9}, 3.7817895980756216`*^9, {
   3.7818029544968014`*^9, 3.7818029922278757`*^9}, {3.7819753703709993`*^9, 
   3.7819753983611746`*^9}, 3.7819754880903096`*^9, {3.781975526676165*^9, 
   3.7819756178803596`*^9}, 3.781979406428888*^9, {3.7819796773856*^9, 
   3.7819796773995748`*^9}, {3.83854313161852*^9, 3.8385431845581827`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"71bb48b4-9786-41ed-b234-45620552a2b5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 8 Pi}}, Typeset`size$$ = {360., {56., 60.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$10331$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$10331$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, Thick, 
         Line[{{{2, 0}, {
            2, Sin[$CellContext`x$$]/2 - Sin[$CellContext`x$$ + 240 Degree]/
             2}}, {{4, 0}, {
            4, (-Sin[$CellContext`x$$ + 240 Degree])/2 + 
             Sin[$CellContext`x$$ + 120 Degree]/2}}, {{6, 0}, {
            6, Sin[$CellContext`x$$ + 120 Degree]/2 - Sin[$CellContext`x$$]/
             2}}, {{8, 0}, {
            8, (-Sin[$CellContext`x$$])/2 + 
             Sin[$CellContext`x$$ + 240 Degree]/2}}, {{10, 0}, {
            10, Sin[$CellContext`x$$ + 240 Degree]/2 - 
             Sin[$CellContext`x$$ + 120 Degree]/2}}, {{12, 0}, {
            12, (-Sin[$CellContext`x$$ + 120 Degree])/2 + 
             Sin[$CellContext`x$$]/2}}}]}, Axes -> True, GridLines -> 
        Automatic, PlotRange -> {{-1, 13}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`x$$, 0, 8 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {102., 108.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.776248172112703*^9, 3.7762482949063764`*^9, 3.776248332416596*^9, {
   3.776248485969389*^9, 3.7762485051805077`*^9}, 3.776248551710824*^9, 
   3.776248607175286*^9, {3.77624874004272*^9, 3.776248764419879*^9}, 
   3.7762489330253615`*^9, 3.7762490165171986`*^9, 3.776249525806875*^9, {
   3.776249699187179*^9, 3.776249709410354*^9}, 3.7762502635027027`*^9, 
   3.776250762718732*^9, 3.7762508210760403`*^9, 3.776257817685461*^9, 
   3.7762585151978474`*^9, 3.7762589231523747`*^9, 3.7762597993297343`*^9, 
   3.776259871558988*^9, 3.776259976104507*^9, 3.7762600571043334`*^9, 
   3.7762600934650197`*^9, 3.7762602178747873`*^9, 3.7762603098294153`*^9, {
   3.7762625870929747`*^9, 3.7762626018213043`*^9}, {3.7762627629961863`*^9, 
   3.776262792256454*^9}, 3.776262825415874*^9, {3.776262935860692*^9, 
   3.776263008238638*^9}, {3.776263047806803*^9, 3.7762630802105947`*^9}, 
   3.7762631126964726`*^9, {3.7762632156129923`*^9, 3.7762632189093895`*^9}, 
   3.776263319642626*^9, {3.776263404665512*^9, 3.77626342027991*^9}, 
   3.7762636311256104`*^9, {3.776263776421623*^9, 3.776263803418232*^9}, 
   3.7762638345455723`*^9, 3.7762640066890154`*^9, 3.776264050467695*^9, 
   3.7762643198585916`*^9, 3.776264355214696*^9, {3.776264420268625*^9, 
   3.7762644489484596`*^9}, 3.7762645246104064`*^9, 3.7762646224446497`*^9, {
   3.776264653745229*^9, 3.776264672256291*^9}, {3.7818029973342247`*^9, 
   3.781803000042986*^9}, 3.7819756205830946`*^9, 3.7819794231512213`*^9, {
   3.782066879417712*^9, 3.782066924128394*^9}, 3.838543186786725*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"a98b63fc-a602-4374-90c1-1774d666dd3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Red", ",", "Thick", ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "10"}], "]"}], ",", "Blue", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"345", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"345", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"15", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"15", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Black", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"45", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"75", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Green", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"105", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"105", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"135", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"135", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Blue", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"165", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"195", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Black", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"225", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"225", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"255", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", 
              RowBox[{"-", "0.5"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"45", "Degree"}], "]"}], "*", "0.5"}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"255", "Degree"}], "]"}], "*", "10"}]}]}], "}"}]}], 
         "}"}], "]"}], ",", "Green", ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"285", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"315", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
         "0.5"}], "]"}], ",", "Red", ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"magnetic", " ", "induction", " ", "vectors"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", "10"}], ",", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"0", "Degree"}], "]"}], "*", "10"}], "+", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"0", "Degree"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"Sin", "[", "x", "]"}], ")"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"0", "Degree"}], "]"}], "*", "10"}], "+", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"0", "Degree"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"Sin", "[", "x", "]"}], ")"}]}]}]}], "}"}]}], "}"}],
            ","}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"30", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"30", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"60", "Degree"}], "]"}], "*", "10"}], ",", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"60", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], ")"}]}]}]}], 
               "}"}]}], "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"90", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"90", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"120", "Degree"}], "]"}], "*", "10"}], ",", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"120", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], ")"}]}]}]}], "}"}]}], 
             "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"150", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"150", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", "10"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"180", "Degree"}], "]"}], "*", "10"}], ",", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"180", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]}], "}"}]}], 
             "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"210", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"210", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"240", "Degree"}], "]"}], "*", "10"}], ",", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"240", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], ")"}]}]}]}], "}"}]}], 
             "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"270", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"270", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], 
                 ")"}]}]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"300", "Degree"}], "]"}], "*", "10"}], ",", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"300", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", "10"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}]}]}], 
               "}"}]}], "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"330", "Degree"}], "]"}], "*", "10"}], ",", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"330", "Degree"}], "]"}], "*", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", "10"}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "rotating", " ", "magnetic", " ", "induction", " ", "vector"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"0", "Degree"}], "]"}], "*", 
                RowBox[{"(", " ", 
                 RowBox[{"Sin", "[", "x", "]"}], ")"}]}], "+"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}], "+",
                "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "+"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"0", "Degree"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"Sin", "[", "x", "]"}], ")"}]}], "+"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"30", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", "x", "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"60", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"90", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}]}], "/", "2"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"120", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"150", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", " ", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}], "+",
                "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"180", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "+"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"210", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "x", "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"240", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"270", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"240", "Degree"}]}], "]"}], "/", "2"}], "-", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}], "/", "2"}]}], ")"}]}],
                "+", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"300", "Degree"}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], ")"}]}], "+"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"330", "Degree"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"120", "Degree"}]}], "]"}]}], "/", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], "/", "2"}]}], ")"}]}]}]}], 
             "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "11"}], ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "11"}], ",", "11"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"8", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781783895613417*^9, 3.7817838958188086`*^9}, {
   3.781784045610384*^9, 3.781784070141843*^9}, {3.781784130461586*^9, 
   3.7817842175627627`*^9}, {3.781784252896265*^9, 3.78178432063718*^9}, {
   3.781784354270313*^9, 3.781784396656995*^9}, {3.7817844306087265`*^9, 
   3.7817844632275577`*^9}, {3.7817847898314524`*^9, 3.781784845537565*^9}, {
   3.7817848894152517`*^9, 3.781784892719408*^9}, {3.7817849341925416`*^9, 
   3.78178496689412*^9}, {3.7817850071874046`*^9, 3.78178500819073*^9}, {
   3.7817850465980644`*^9, 3.7817850750101085`*^9}, {3.7817851343514414`*^9, 
   3.78178513495786*^9}, {3.7817855408438396`*^9, 3.781785550641647*^9}, {
   3.78178560637965*^9, 3.781785687179655*^9}, {3.781785750411622*^9, 
   3.7817858164032135`*^9}, {3.7817858978275414`*^9, 3.781785935769122*^9}, {
   3.781786016419527*^9, 3.7817860192908163`*^9}, {3.7817861127978516`*^9, 
   3.7817861268223763`*^9}, {3.7817861917039657`*^9, 
   3.7817861922155504`*^9}, {3.781786303838191*^9, 3.781786312373344*^9}, {
   3.7817863796195803`*^9, 3.781786456165988*^9}, 3.781786511912964*^9, {
   3.7817866364601164`*^9, 3.7817866621843224`*^9}, {3.7817870767716846`*^9, 
   3.7817871542036877`*^9}, {3.781787225270745*^9, 3.7817872439009123`*^9}, {
   3.781787315887333*^9, 3.7817874097248454`*^9}, {3.7817874653720026`*^9, 
   3.781787595824313*^9}, {3.781787641208954*^9, 3.781787688276168*^9}, {
   3.7817877545463142`*^9, 3.7817878680838127`*^9}, {3.781787901387783*^9, 
   3.7817879072989483`*^9}, {3.7817881582491055`*^9, 
   3.7817881662936316`*^9}, {3.7817882097205563`*^9, 
   3.7817882698617725`*^9}, {3.781788395366871*^9, 3.781788413997045*^9}, {
   3.781788534749242*^9, 3.7817885365892963`*^9}, {3.7817886464705987`*^9, 
   3.78178865382294*^9}, {3.781788699218585*^9, 3.7817888623096113`*^9}, {
   3.7817889072016077`*^9, 3.781788974523642*^9}, {3.781789015242753*^9, 
   3.7817890440816984`*^9}, {3.7817892444060936`*^9, 3.781789279050476*^9}, {
   3.7817893950015182`*^9, 3.781789399855506*^9}, {3.781789441711623*^9, 
   3.7817894622437677`*^9}, {3.7817895314098644`*^9, 3.78178958094744*^9}, {
   3.7817896119036913`*^9, 3.7817896490254564`*^9}, {3.7817905670495577`*^9, 
   3.781790568576501*^9}, {3.7817915278830123`*^9, 3.7817915318514357`*^9}, {
   3.7817924393165607`*^9, 3.781792440664956*^9}, 3.7817925174706764`*^9, {
   3.781792563872597*^9, 3.781792639724867*^9}, {3.781792879108904*^9, 
   3.7817928823542957`*^9}, {3.7817930130582137`*^9, 3.781793067569532*^9}, {
   3.7817931405332594`*^9, 3.781793151134012*^9}, {3.7817931904740877`*^9, 
   3.7817931913128705`*^9}, 3.7817932657817755`*^9, {3.7817933100314684`*^9, 
   3.7817933283624897`*^9}, {3.7817933890821323`*^9, 
   3.7817934106235857`*^9}, {3.7817934538191133`*^9, 3.78179350551292*^9}, {
   3.7817935769888525`*^9, 3.7817936089105234`*^9}, {3.7817936509401646`*^9, 
   3.781793708516218*^9}, {3.781793781119135*^9, 3.781793851230756*^9}, {
   3.7817939182535477`*^9, 3.7817939403904047`*^9}, {3.781793970586649*^9, 
   3.7817939718004036`*^9}, {3.781794010857995*^9, 3.7817940373102837`*^9}, {
   3.7817962352914047`*^9, 3.7817962781099453`*^9}, {3.781796311317174*^9, 
   3.781796380012564*^9}, {3.7817964560343075`*^9, 3.781796459340466*^9}, {
   3.7817965295118923`*^9, 3.7817965527288284`*^9}, {3.7817966035778656`*^9, 
   3.7817966352273235`*^9}, {3.7817966755624714`*^9, 
   3.7817969065300694`*^9}, {3.7817971354919806`*^9, 
   3.7817971617837076`*^9}, {3.7817972599532747`*^9, 3.781797278330117*^9}, {
   3.7817975760104203`*^9, 3.781797623240101*^9}, {3.7817976791895967`*^9, 
   3.7817976951099777`*^9}, {3.781797789349069*^9, 3.7817978008633156`*^9}, {
   3.781797955730285*^9, 3.781798002674793*^9}, {3.781798058319103*^9, 
   3.7817980814263105`*^9}, {3.781798231210667*^9, 3.781798248780631*^9}, {
   3.7817983065322943`*^9, 3.7817983574760747`*^9}, {3.781798390086899*^9, 
   3.781798511958112*^9}, {3.7817985842568426`*^9, 3.7817986004765253`*^9}, {
   3.781798634494602*^9, 3.78179869496795*^9}, {3.781798745939662*^9, 
   3.781798747064623*^9}, {3.7817987842193336`*^9, 3.7817988463353076`*^9}, {
   3.781798886855968*^9, 3.781799095979568*^9}, {3.7817992087750187`*^9, 
   3.781799222594098*^9}, {3.7817992563917503`*^9, 3.781799334140851*^9}, {
   3.781799612974471*^9, 3.7817996651660137`*^9}, {3.7817997131064205`*^9, 
   3.781799720641341*^9}, {3.781800014506775*^9, 3.781800081492647*^9}, {
   3.7818001440890083`*^9, 3.7818001774089975`*^9}, {3.7818002361798306`*^9, 
   3.781800324379114*^9}, {3.7818010452641354`*^9, 3.7818010623764267`*^9}, {
   3.781801111747695*^9, 3.781801148950241*^9}, 3.781801434768199*^9, {
   3.781801483540753*^9, 3.781801496318595*^9}, {3.781801898277136*^9, 
   3.7818019035919275`*^9}, {3.7818019358011103`*^9, 
   3.7818019636626215`*^9}, {3.7818024892015*^9, 3.7818025132203226`*^9}, {
   3.7818029742081013`*^9, 3.781802982689432*^9}, {3.7818031568658223`*^9, 
   3.7818031710080214`*^9}, {3.7819785835851755`*^9, 
   3.7819788397527246`*^9}, {3.7819789204361005`*^9, 
   3.7819792123058133`*^9}, {3.7819792982321653`*^9, 3.781979309848096*^9}, {
   3.781979364843079*^9, 3.78197939231265*^9}, {3.781979448939267*^9, 
   3.78197944933225*^9}, {3.781979677410549*^9, 3.781979677626946*^9}, {
   3.8385431982834997`*^9, 3.8385432789020815`*^9}, {3.8385433215064692`*^9, 
   3.8385434202586555`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"bc44fa5f-25ad-45c9-893d-4193779e2eff"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 12.562856839616922`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 8 Pi}}, Typeset`size$$ = {
    360., {177., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`x$11287$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$11287$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, Thick, 
         Circle[{0, 0}, 10], Blue, 
         Circle[{Sin[345 Degree] 10, Cos[345 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[345 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[345 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[345 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[345 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[345 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[345 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[345 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[345 Degree] 10}}], 
         Circle[{Sin[15 Degree] 10, Cos[15 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[15 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[15 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[15 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[15 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[15 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[15 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[15 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[15 Degree] 10}}], Black, 
         Circle[{Sin[45 Degree] 10, Cos[45 Degree] 10}, 1], 
         Disk[{Sin[45 Degree] 10, Cos[45 Degree] 10}, 0.5], 
         Circle[{Sin[75 Degree] 10, Cos[75 Degree] 10}, 1], 
         Disk[{Sin[75 Degree] 10, Cos[75 Degree] 10}, 0.5], Green, 
         Circle[{Sin[105 Degree] 10, Cos[105 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[105 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[105 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[105 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[105 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[105 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[105 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[105 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[105 Degree] 10}}], 
         Circle[{Sin[135 Degree] 10, Cos[135 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[135 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[135 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[135 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[135 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[135 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[135 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[135 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[135 Degree] 10}}], Blue, 
         Circle[{Sin[165 Degree] 10, Cos[165 Degree] 10}, 1], 
         Disk[{Sin[165 Degree] 10, Cos[165 Degree] 10}, 0.5], 
         Circle[{Sin[195 Degree] 10, Cos[195 Degree] 10}, 1], 
         Disk[{Sin[195 Degree] 10, Cos[195 Degree] 10}, 0.5], Black, 
         Circle[{Sin[225 Degree] 10, Cos[225 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[225 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[225 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[225 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[225 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[225 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[225 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[225 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[225 Degree] 10}}], 
         Circle[{Sin[255 Degree] 10, Cos[255 Degree] 10}, 1], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[255 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[255 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[255 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[255 Degree] 10}}], 
         Line[{{
           Sin[45 Degree] 0.5 + Sin[255 Degree] 10, Cos[45 Degree] (-0.5) + 
            Cos[255 Degree] 10}, {
           Sin[45 Degree] (-0.5) + Sin[255 Degree] 10, Cos[45 Degree] 0.5 + 
            Cos[255 Degree] 10}}], Green, 
         Circle[{Sin[285 Degree] 10, Cos[285 Degree] 10}, 1], 
         Disk[{Sin[285 Degree] 10, Cos[285 Degree] 10}, 0.5], 
         Circle[{Sin[315 Degree] 10, Cos[315 Degree] 10}, 1], 
         Disk[{Sin[315 Degree] 10, Cos[315 Degree] 10}, 0.5], Red, 
         Line[{{{Sin[30 Degree] 10, Cos[30 Degree] 10}, {
            Sin[30 Degree] 10 + 
             Sin[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 240 Degree]/2), Cos[30 Degree] 10 + 
             Cos[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 240 Degree]/2)}}, {{
            Sin[90 Degree] 10, Cos[90 Degree] 10}, {
            Sin[90 Degree] 10 + 
             Sin[90 Degree] ((-Sin[$CellContext`x$$ + 240 Degree])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2), Cos[90 Degree] 10 + 
             Cos[90 Degree] ((-Sin[$CellContext`x$$ + 240 Degree])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2)}}, {{
            Sin[150 Degree] 10, Cos[150 Degree] 10}, {
            Sin[150 Degree] 10 + 
             Sin[150 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$]/2), Cos[150 Degree] 10 + 
             Cos[150 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$]/2)}}, {{
            Sin[210 Degree] 10, Cos[210 Degree] 10}, {
            Sin[210 Degree] 10 + 
             Sin[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2), Cos[210 Degree] 10 + 
             Cos[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2)}}, {{
            Sin[270 Degree] 10, Cos[270 Degree] 10}, {
            Sin[270 Degree] 10 + 
             Sin[270 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2), Cos[270 Degree] 10 + 
             Cos[270 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2)}}, {{
            Sin[330 Degree] 10, Cos[330 Degree] 10}, {
            Sin[330 Degree] 10 + 
             Sin[330 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$]/2), Cos[330 Degree] 10 + 
             Cos[330 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$]/2)}}, {{0, 0}, {
            Sin[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Sin[90 Degree] ((-Sin[$CellContext`x$$ + 240 Degree])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Sin[150 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$]/2) + 
             Sin[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Sin[270 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Sin[330 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$]/2), 
             Cos[30 Degree] (Sin[$CellContext`x$$]/2 - 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Cos[90 Degree] ((-Sin[$CellContext`x$$ + 240 Degree])/2 + 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Cos[150 Degree] (Sin[$CellContext`x$$ + 120 Degree]/2 - 
               Sin[$CellContext`x$$]/2) + 
             Cos[210 Degree] ((-Sin[$CellContext`x$$])/2 + 
               Sin[$CellContext`x$$ + 240 Degree]/2) + 
             Cos[270 Degree] (Sin[$CellContext`x$$ + 240 Degree]/2 - 
               Sin[$CellContext`x$$ + 120 Degree]/2) + 
             Cos[330 Degree] ((-Sin[$CellContext`x$$ + 120 Degree])/2 + 
               Sin[$CellContext`x$$]/2)}}}]}, Axes -> True, GridLines -> 
        Automatic, PlotRange -> {{-11, 11}, {-11, 11}}], 
      "Specifications" :> {{$CellContext`x$$, 0, 8 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {237., 243.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.781784151762618*^9, 3.7817841652754974`*^9}, {
   3.781784257427188*^9, 3.7817843220075173`*^9}, {3.781784356257967*^9, 
   3.7817843724815903`*^9}, {3.7817844064024353`*^9, 3.7817844649798126`*^9}, 
   3.781784846920844*^9, 3.7817848943201303`*^9, 3.781784938734371*^9, 
   3.7817849688917503`*^9, 3.7817850113362885`*^9, {3.781785048771249*^9, 
   3.7817850778096247`*^9}, 3.7817851512592793`*^9, 3.781785552145625*^9, {
   3.781785611725355*^9, 3.781785687833867*^9}, 3.781785938575618*^9, 
   3.781786021126942*^9, 3.781786130148506*^9, 3.78178620740897*^9, 
   3.781786316997017*^9, 3.7817868083924785`*^9, {3.781787296194944*^9, 
   3.7817873176745577`*^9}, 3.78178752774131*^9, 3.7817875584262824`*^9, 
   3.781787599323921*^9, 3.781787664085833*^9, 3.78178787224469*^9, 
   3.7817879089714775`*^9, 3.7817881906495275`*^9, 3.7817882754932575`*^9, 
   3.7817884160914516`*^9, 3.7817885380144873`*^9, 3.7817887897141085`*^9, 
   3.781788863479488*^9, 3.7817889220499115`*^9, 3.781788977159591*^9, 
   3.781789045379233*^9, 3.7817892815597363`*^9, 3.7817894670837903`*^9, 
   3.781789651231524*^9, 3.7817899917041245`*^9, 3.7817905750750685`*^9, 
   3.7817915336206756`*^9, 3.7817924426297054`*^9, 3.781792519620922*^9, 
   3.7817925996440077`*^9, 3.781792919034177*^9, 3.78179333177137*^9, 
   3.7817934660803013`*^9, 3.7817935065292063`*^9, 3.781793609838005*^9, {
   3.7817936965253057`*^9, 3.7817937094328146`*^9}, 3.78179385238964*^9, 
   3.781793920674117*^9, 3.7817940670627823`*^9, 3.78179638277516*^9, 
   3.7817964604514723`*^9, 3.7817965545370073`*^9, {3.781796616964119*^9, 
   3.781796638049756*^9}, 3.781796800244136*^9, {3.781796879462369*^9, 
   3.7817969085346813`*^9}, {3.781797149729921*^9, 3.781797163107162*^9}, 
   3.781797280422559*^9, 3.781797624590491*^9, 3.781797696479356*^9, 
   3.781797802651537*^9, 3.7817980058343754`*^9, 3.7817982695860233`*^9, 
   3.781798316394893*^9, 3.7817983587666245`*^9, 3.781798443463213*^9, 
   3.7817985130262566`*^9, 3.7817986094066267`*^9, 3.781798699137742*^9, {
   3.7817987633849955`*^9, 3.781798803626422*^9}, 3.7817988477295256`*^9, 
   3.781798921515315*^9, {3.7817989625446*^9, 3.781798990988564*^9}, 
   3.781799054335829*^9, 3.781799128006891*^9, 3.7817992617982388`*^9, 
   3.78179929233963*^9, 3.7817993354673405`*^9, 3.781799676838749*^9, 
   3.781799721945791*^9, 3.781800117777742*^9, 3.7818002154811625`*^9, 
   3.78180132639384*^9, 3.7818014401477633`*^9, 3.781801904718908*^9, 
   3.7818019443861127`*^9, 3.781803006302252*^9, 3.781979213467708*^9, 
   3.7819793123364477`*^9, 3.781979351772029*^9, 3.78197943594498*^9, {
   3.782066879631109*^9, 3.782066924334852*^9}, 3.8385429274052544`*^9, {
   3.8385434223235717`*^9, 3.8385434259830537`*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"5068086e-e984-4c35-9ebb-9f09fe04be71"]
}, Open  ]],

Cell[TextData[{
 StyleBox["U1",
  FontColor->RGBColor[0, 0, 1]],
 ": \t0\[Degree]\t\t",
 StyleBox["V1",
  FontColor->RGBColor[0, 1, 0]],
 ":\t120\[Degree]\t\t",
 StyleBox["W1",
  FontColor->GrayLevel[0]],
 ":\t240\[Degree]\t\n",
 StyleBox["U2",
  FontColor->RGBColor[0, 0, 1]],
 ":\t180\[Degree]\t\t",
 StyleBox["V2",
  FontColor->RGBColor[0, 1, 0]],
 ":\t 300\[Degree]\t\t",
 StyleBox["W2",
  FontColor->GrayLevel[0]],
 ":\t 60\[Degree]"
}], "Text",
 CellChangeTimes->{{3.7820594046329155`*^9, 3.782059659928439*^9}, {
   3.7821512158717422`*^9, 3.7821512381920757`*^9}, {3.782151271144985*^9, 
   3.782151378421214*^9}, {3.7821517074935455`*^9, 3.7821517838603897`*^9}, {
   3.7821518230775547`*^9, 3.7821518611408033`*^9}, {3.7821522899724483`*^9, 
   3.782152324887113*^9}, {3.782152359247261*^9, 3.7821523599812994`*^9}, 
   3.78215240852952*^9, 
   3.7821540552318926`*^9},ExpressionUUID->"d9d41912-0e2d-485a-b600-\
842803ad7df2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wiring diagram", "Subtitle",
 CellChangeTimes->{{3.782067767992212*^9, 3.782067770890467*^9}, {
  3.7820678015145664`*^9, 
  3.7820678017778606`*^9}},ExpressionUUID->"d247b0e5-69bf-4e55-bd3b-\
e990f9c6b5c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"circuit", "[", 
   RowBox[{"x_:", "0"}], "]"}], ":=", 
  RowBox[{"Line", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", "x"}], ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", "x"}], ",", "10"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4.5", "+", "x"}], ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"8", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"8", "+", "x"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5", "+", "x"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "x"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4.5", "+", "x"}], ",", "12"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "+", "x"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "+", "x"}], ",", 
       RowBox[{"-", "4"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7820649015936193`*^9, 3.7820649018061123`*^9}, {
   3.7820651468467274`*^9, 3.78206519785039*^9}, {3.7820652420452137`*^9, 
   3.7820652558762703`*^9}, {3.7820652917902355`*^9, 3.782065313941027*^9}, 
   3.7820668489381895`*^9, {3.7821483635801463`*^9, 3.78214836400605*^9}, {
   3.782148461813548*^9, 3.782148462885724*^9}, {3.7821504978452234`*^9, 
   3.782150498341889*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"1306cbfe-97dd-4c85-bc52-3040791785a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"circuit", "[", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"U1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"U2", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "Black", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"9", ",", 
          RowBox[{"-", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"12.5", ",", "13"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"12.5", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"10", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"12.5", ",", "12"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "13"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "12"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"W2", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"W1", ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "Green", ",", "Thick", ",", "\[IndentingNewLine]", 
     RowBox[{"circuit", "[", "4", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"V1", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", 
      RowBox[{"V2", ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", 
         RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}],
    ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "14"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "14"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7820542317586217`*^9, 3.7820542984742765`*^9}, {
   3.782054334989702*^9, 3.782054376603456*^9}, {3.78205442025174*^9, 
   3.7820545109562674`*^9}, {3.7820545414637156`*^9, 
   3.7820545929580603`*^9}, {3.7820547125752983`*^9, 3.782054779413662*^9}, {
   3.7820548498234396`*^9, 3.782054992007351*^9}, {3.7820550689496355`*^9, 
   3.782055101001954*^9}, {3.7820551533610168`*^9, 3.782055194286584*^9}, {
   3.782055231399435*^9, 3.782055262276831*^9}, {3.7820552939342375`*^9, 
   3.7820553033969398`*^9}, {3.782055364319089*^9, 3.782055375121194*^9}, {
   3.782055431078623*^9, 3.7820554342261753`*^9}, {3.782056783634048*^9, 
   3.782056788029334*^9}, {3.7820577354090385`*^9, 3.7820577618284426`*^9}, {
   3.7820578380566835`*^9, 3.782057904132043*^9}, 3.782057939149399*^9, {
   3.7820579811461716`*^9, 3.7820579813147154`*^9}, {3.782058103412324*^9, 
   3.7820582177715836`*^9}, {3.7820593448377867`*^9, 3.782059345911875*^9}, {
   3.782059738433578*^9, 3.782059758548805*^9}, {3.7820598645843573`*^9, 
   3.782059867894556*^9}, {3.7820599233891535`*^9, 3.782059948102123*^9}, {
   3.7820600320267754`*^9, 3.7820600744533296`*^9}, {3.7820601123151155`*^9, 
   3.782060146228496*^9}, {3.7820602317857804`*^9, 3.7820604431108675`*^9}, {
   3.7820613981228*^9, 3.7820614059199123`*^9}, {3.782064937800831*^9, 
   3.7820649432622643`*^9}, {3.7820653969451323`*^9, 
   3.7820654075836945`*^9}, {3.782066851123372*^9, 3.78206685629852*^9}, 
   3.7821480700079374`*^9, 3.782148100308931*^9, {3.782148308968135*^9, 
   3.782148333942374*^9}, 3.782148476487338*^9, {3.782148532396864*^9, 
   3.7821487320152416`*^9}, {3.7821487791781664`*^9, 3.782148793309432*^9}, {
   3.782148847474595*^9, 3.782148877902291*^9}, {3.7821490297443514`*^9, 
   3.7821491025866275`*^9}, {3.782149138851683*^9, 3.7821491900767536`*^9}, {
   3.7821492277999067`*^9, 3.782149312591242*^9}, {3.782149377750058*^9, 
   3.782149399068071*^9}, {3.782149465326947*^9, 3.7821494937788887`*^9}, {
   3.7821495793930244`*^9, 3.7821496626584387`*^9}, {3.782149714318341*^9, 
   3.7821497168555593`*^9}, {3.7821497599507585`*^9, 3.78214979721012*^9}, {
   3.7821498551023946`*^9, 3.7821500046894855`*^9}, {3.7821501765291667`*^9, 
   3.7821501901078234`*^9}, {3.7821505767532387`*^9, 
   3.7821505773227167`*^9}, {3.782150620162198*^9, 3.782150644257785*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"2392354b-1ec1-44c4-887a-57a45585dd70"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], Thickness[Large], 
    LineBox[{{1, -4}, {1, 10}, {4.5, 13}, {8, 10}, {8, 0}, {5, -2}, {2, 0}, {
      2, 10}, {4.5, 12}, {7, 10}, {7, -4}}], InsetBox["U1", {1, -5}], 
    InsetBox["U2", {7, -5}]}, 
   {GrayLevel[0], Thickness[Large], LineBox[{{9, -4}, {9, 10}, {12.5, 13}}], 
    LineBox[{{12.5, -2}, {10, 0}, {10, 10}, {12.5, 12}}], 
    LineBox[{{0.5, 13}, {4, 10}, {4, 0}, {0.5, -2}}], 
    LineBox[{{0.5, 12}, {3, 10}, {3, -4}}], InsetBox["W2", {3, -5}], 
    InsetBox["W1", {9, -5}]}, 
   {RGBColor[0, 1, 0], Thickness[Large], 
    LineBox[{{5, -4}, {5, 10}, {8.5, 13}, {12, 10}, {12, 0}, {9, -2}, {6, 
      0}, {6, 10}, {8.5, 12}, {11, 10}, {11, -4}}], InsetBox["V1", {5, -5}], 
    InsetBox["V2", {11, -5}]}},
  PlotRange->{{-1, 14}, {-6, 14}}]], "Output",
 CellChangeTimes->{
  3.7820645465599885`*^9, 3.782064619645384*^9, 3.782065442706804*^9, {
   3.782066871597622*^9, 3.7820669245532637`*^9}, 3.7821505497992926`*^9, 
   3.782150645147408*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"7648a214-f32a-4ea8-8da9-655e08802efd"]
}, Open  ]],

Cell[TextData[{
 StyleBox["U1",
  FontColor->RGBColor[0, 0, 1]],
 ": \t0\[Degree]\t\t",
 StyleBox["V1",
  FontColor->RGBColor[0, 1, 0]],
 ":\t120\[Degree]\t\t",
 StyleBox["W1",
  FontColor->GrayLevel[0]],
 ":\t240\[Degree]\t\n",
 StyleBox["U2",
  FontColor->RGBColor[0, 0, 1]],
 ":\t180\[Degree]\t\t",
 StyleBox["V2",
  FontColor->RGBColor[0, 1, 0]],
 ":\t 300\[Degree]\t\t",
 StyleBox["W2",
  FontColor->GrayLevel[0]],
 ":\t 60\[Degree]"
}], "Text",
 CellChangeTimes->{{3.7820594046329155`*^9, 3.782059659928439*^9}, {
   3.7821512158717422`*^9, 3.7821512381920757`*^9}, {3.782151271144985*^9, 
   3.782151378421214*^9}, {3.7821517074935455`*^9, 3.7821517838603897`*^9}, {
   3.7821518230775547`*^9, 3.7821518611408033`*^9}, {3.7821522899724483`*^9, 
   3.782152324887113*^9}, {3.782152359247261*^9, 3.7821523599812994`*^9}, 
   3.78215240852952*^9, 
   3.7821540589878607`*^9},ExpressionUUID->"c03f1087-581d-4ae1-9872-\
8d84bf230c0f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 176, 3, 96, "Title",ExpressionUUID->"c3f926ca-86d0-4817-9387-0a600cd7cc50"],
Cell[759, 27, 416, 9, 85, "Subtitle",ExpressionUUID->"4fe2b41f-a3bc-437e-bc10-5345bc5832f8"],
Cell[CellGroupData[{
Cell[1200, 40, 4819, 116, 48, "Input",ExpressionUUID->"5d96d89e-9e7a-4a27-a5e3-f136196e1629"],
Cell[6022, 158, 119095, 2122, 241, "Output",ExpressionUUID->"b282b8a0-99bf-4f14-bf80-088d89126e9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125154, 2285, 10787, 239, 314, "Input",ExpressionUUID->"a8b197d0-4289-4a65-8e5d-e613db90c31b"],
Cell[135944, 2526, 4018, 69, 255, "Output",ExpressionUUID->"e14aa849-36b7-44ac-a665-d88e261bdd79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139999, 2600, 61667, 1556, 1359, "Input",ExpressionUUID->"672bb44d-add1-4546-9303-845437d3d5d2"],
Cell[201669, 4158, 9511, 175, 499, "Output",ExpressionUUID->"a3176082-617c-426d-baa4-24c5732f9c5f"]
}, Open  ]],
Cell[211195, 4336, 1035, 23, 56, "Text",ExpressionUUID->"10217bba-e252-4b71-ba3e-f224df62e1e1"],
Cell[CellGroupData[{
Cell[212255, 4363, 213, 4, 53, "Subtitle",ExpressionUUID->"f451f82b-1ccb-44b1-b89a-8324c07be050"],
Cell[212471, 4369, 1878, 52, 143, "Input",ExpressionUUID->"c8d31eed-5ed6-4861-8d7f-c851461bc293"],
Cell[214352, 4423, 5859, 128, 542, "Input",ExpressionUUID->"4da3cc6e-53d9-452c-8b34-f8734ab65142"],
Cell[220214, 4553, 944, 18, 445, "Input",ExpressionUUID->"69f1b940-d1c4-4823-ac29-78b80242cd20"],
Cell[221161, 4573, 814, 20, 56, "Text",ExpressionUUID->"5687f6df-51f3-4ebd-9c94-49ae5575dd8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222012, 4598, 228, 4, 53, "Subtitle",ExpressionUUID->"67a4a4d5-91dd-428d-a295-801003e5034a"],
Cell[CellGroupData[{
Cell[222265, 4606, 5040, 118, 48, "Input",ExpressionUUID->"dba499dc-7c15-49e6-9fca-8499b1912fdc"],
Cell[227308, 4726, 115686, 2047, 232, "Output",ExpressionUUID->"f048fe50-de65-48e8-97e5-394f8709f988"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343031, 6778, 10789, 237, 314, "Input",ExpressionUUID->"71bb48b4-9786-41ed-b234-45620552a2b5"],
Cell[353823, 7017, 3938, 68, 229, "Output",ExpressionUUID->"a98b63fc-a602-4374-90c1-1774d666dd3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357798, 7090, 61617, 1551, 1359, "Input",ExpressionUUID->"bc44fa5f-25ad-45c9-893d-4193779e2eff"],
Cell[419418, 8643, 12064, 210, 499, "Output",ExpressionUUID->"5068086e-e984-4c35-9ebb-9f09fe04be71"]
}, Open  ]],
Cell[431497, 8856, 936, 27, 56, "Text",ExpressionUUID->"d9d41912-0e2d-485a-b600-842803ad7df2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432470, 8888, 213, 4, 53, "Subtitle",ExpressionUUID->"d247b0e5-69bf-4e55-bd3b-e990f9c6b5c3"],
Cell[432686, 8894, 1878, 52, 143, "Input",ExpressionUUID->"1306cbfe-97dd-4c85-bc52-3040791785a8"],
Cell[CellGroupData[{
Cell[434589, 8950, 5959, 129, 542, "Input",ExpressionUUID->"2392354b-1ec1-44c4-887a-57a45585dd70"],
Cell[440551, 9081, 1089, 20, 449, "Output",ExpressionUUID->"7648a214-f32a-4ea8-8da9-655e08802efd"]
}, Open  ]],
Cell[441655, 9104, 936, 27, 56, "Text",ExpressionUUID->"c03f1087-581d-4ae1-9872-8d84bf230c0f"]
}, Open  ]]
}, Open  ]]
}
]
*)

